{"ast":null,"code":"/**\r\n * Format date\r\n * @param {string|Date} date Date to format\r\n * @param {string} fmt Format pattern, default yyyy-MM-dd HH:mm:ss\r\n * @returns {string} Formatted date string\r\n */\nexport function formatDate(date, fmt = 'yyyy-MM-dd HH:mm:ss') {\n  if (!date) return '';\n  if (typeof date === 'string') {\n    date = new Date(date);\n  }\n  const o = {\n    'M+': date.getMonth() + 1,\n    // Month\n    'd+': date.getDate(),\n    // Day\n    'H+': date.getHours(),\n    // Hour\n    'm+': date.getMinutes(),\n    // Minute\n    's+': date.getSeconds(),\n    // Second\n    'q+': Math.floor((date.getMonth() + 3) / 3),\n    // Quarter\n    'S': date.getMilliseconds() // Millisecond\n  };\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n  for (let k in o) {\n    if (new RegExp('(' + k + ')').test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length));\n    }\n  }\n  return fmt;\n}","map":{"version":3,"names":["formatDate","date","fmt","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k"],"sources":["/Users/taoyuxuan/Documents/RestaurantReservation/qd/src/utils/format.js"],"sourcesContent":["/**\r\n * Format date\r\n * @param {string|Date} date Date to format\r\n * @param {string} fmt Format pattern, default yyyy-MM-dd HH:mm:ss\r\n * @returns {string} Formatted date string\r\n */\r\nexport function formatDate(date, fmt = 'yyyy-MM-dd HH:mm:ss') {\r\n  if (!date) return '';\r\n  \r\n  if (typeof date === 'string') {\r\n    date = new Date(date);\r\n  }\r\n  \r\n  const o = {\r\n    'M+': date.getMonth() + 1, // Month\r\n    'd+': date.getDate(), // Day\r\n    'H+': date.getHours(), // Hour\r\n    'm+': date.getMinutes(), // Minute\r\n    's+': date.getSeconds(), // Second\r\n    'q+': Math.floor((date.getMonth() + 3) / 3), // Quarter\r\n    'S': date.getMilliseconds() // Millisecond\r\n  };\r\n\r\n  if (/(y+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n  }\r\n\r\n  for (let k in o) {\r\n    if (new RegExp('(' + k + ')').test(fmt)) {\r\n      fmt = fmt.replace(\r\n        RegExp.$1,\r\n        RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length)\r\n      );\r\n    }\r\n  }\r\n  \r\n  return fmt;\r\n} "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAUA,CAACC,IAAI,EAAEC,GAAG,GAAG,qBAAqB,EAAE;EAC5D,IAAI,CAACD,IAAI,EAAE,OAAO,EAAE;EAEpB,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5BA,IAAI,GAAG,IAAIE,IAAI,CAACF,IAAI,CAAC;EACvB;EAEA,MAAMG,CAAC,GAAG;IACR,IAAI,EAAEH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC;IAAE;IAC3B,IAAI,EAAEJ,IAAI,CAACK,OAAO,CAAC,CAAC;IAAE;IACtB,IAAI,EAAEL,IAAI,CAACM,QAAQ,CAAC,CAAC;IAAE;IACvB,IAAI,EAAEN,IAAI,CAACO,UAAU,CAAC,CAAC;IAAE;IACzB,IAAI,EAAEP,IAAI,CAACQ,UAAU,CAAC,CAAC;IAAE;IACzB,IAAI,EAAEC,IAAI,CAACC,KAAK,CAAC,CAACV,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAAE;IAC7C,GAAG,EAAEJ,IAAI,CAACW,eAAe,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,IAAI,MAAM,CAACC,IAAI,CAACX,GAAG,CAAC,EAAE;IACpBA,GAAG,GAAGA,GAAG,CAACY,OAAO,CAACC,MAAM,CAACC,EAAE,EAAE,CAACf,IAAI,CAACgB,WAAW,CAAC,CAAC,GAAG,EAAE,EAAEC,MAAM,CAAC,CAAC,GAAGH,MAAM,CAACC,EAAE,CAACG,MAAM,CAAC,CAAC;EACtF;EAEA,KAAK,IAAIC,CAAC,IAAIhB,CAAC,EAAE;IACf,IAAI,IAAIW,MAAM,CAAC,GAAG,GAAGK,CAAC,GAAG,GAAG,CAAC,CAACP,IAAI,CAACX,GAAG,CAAC,EAAE;MACvCA,GAAG,GAAGA,GAAG,CAACY,OAAO,CACfC,MAAM,CAACC,EAAE,EACTD,MAAM,CAACC,EAAE,CAACG,MAAM,KAAK,CAAC,GAAGf,CAAC,CAACgB,CAAC,CAAC,GAAG,CAAC,IAAI,GAAGhB,CAAC,CAACgB,CAAC,CAAC,EAAEF,MAAM,CAAC,CAAC,EAAE,GAAGd,CAAC,CAACgB,CAAC,CAAC,EAAED,MAAM,CACzE,CAAC;IACH;EACF;EAEA,OAAOjB,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
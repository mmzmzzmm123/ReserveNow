{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { User, Lock, Message, ChatDotRound, Phone, Key } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\nimport request from '@/utils/request';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n\n    // Control the current panel display (login/register)\n    const isLogin = ref(true);\n    const loginFormRef = ref(null);\n    const registerFormRef = ref(null);\n\n    // Captcha image\n    const captchaImg = ref('');\n    // Captcha ID\n    const captchaCode = ref('');\n\n    // Login form data\n    const loginForm = reactive({\n      email: '',\n      password: '',\n      captcha: '',\n      remember: false\n    });\n\n    // Registration form data\n    const registerForm = reactive({\n      username: '',\n      password: '',\n      confirmPassword: '',\n      email: '',\n      captcha: ''\n    });\n\n    // Get captcha when page loads\n    onMounted(() => {\n      getCaptcha();\n      loadSavedCredentials();\n    });\n\n    // Load saved credentials from local storage\n    const loadSavedCredentials = () => {\n      const savedCredentials = localStorage.getItem('savedCredentials');\n      if (savedCredentials) {\n        const {\n          email,\n          password\n        } = JSON.parse(savedCredentials);\n        loginForm.email = email;\n        loginForm.password = password;\n        loginForm.remember = true;\n      }\n    };\n\n    // Get captcha\n    const getCaptcha = async () => {\n      try {\n        const res = await request({\n          url: '/users/captcha',\n          method: 'GET'\n        });\n        captchaImg.value = res.data.image;\n        captchaCode.value = res.data.captchaId;\n      } catch (error) {\n        console.error('Failed to get captcha', error);\n      }\n    };\n\n    // Set cookie\n    const setCookie = (name, value, days) => {\n      const expires = new Date();\n      expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000);\n      document.cookie = `${name}=${value};expires=${expires.toUTCString()};path=/`;\n    };\n\n    // Switch panel\n    const switchPanel = login => {\n      isLogin.value = login;\n      // Get new captcha when switching panels\n      getCaptcha();\n\n      // Clear form data when switching to registration panel\n      if (!login) {\n        loginForm.email = '';\n        loginForm.password = '';\n        loginForm.captcha = '';\n        loginForm.remember = false;\n      }\n    };\n\n    // Clear saved credentials\n    const clearSavedCredentials = () => {\n      localStorage.removeItem('savedCredentials');\n    };\n\n    // Login handler\n    const handleLogin = async () => {\n      if (!loginForm.email) {\n        ElMessage.warning('Please input email');\n        return;\n      }\n      if (!loginForm.password) {\n        ElMessage.warning('Please input password');\n        return;\n      }\n      if (!loginForm.captcha) {\n        ElMessage.warning('Please input captcha');\n        return;\n      }\n      try {\n        const res = await request({\n          url: '/users/login',\n          method: 'POST',\n          data: {\n            email: loginForm.email,\n            password: loginForm.password,\n            captcha: loginForm.captcha,\n            captchaId: captchaCode.value\n          }\n        });\n\n        // Login success\n        ElMessage.success('Login successful');\n\n        // Save credentials if remember me is checked\n        console.log(loginForm.remember);\n        if (loginForm.remember) {\n          localStorage.setItem('savedCredentials', JSON.stringify({\n            email: loginForm.email,\n            password: loginForm.password\n          }));\n        } else {\n          localStorage.removeItem('savedCredentials');\n        }\n\n        // Store user info locally\n        const userData = res.data;\n        localStorage.setItem('userInfo', JSON.stringify({\n          userId: userData.userId,\n          role: userData.role,\n          name: userData.name,\n          email: userData.email,\n          avatar: userData.avatar,\n          token: userData.token\n        }));\n        // Store token in cookie\n        setCookie('token', userData.token, 7);\n        if (userData.role === 2) {\n          router.push('/');\n        } else {\n          router.push('/admin/dashboard');\n        }\n      } catch (error) {\n        // Login failed, refresh captcha\n        getCaptcha();\n      }\n    };\n\n    // Registration handler\n    const handleRegister = async () => {\n      if (!registerForm.username) {\n        ElMessage.warning('Please input username');\n        return;\n      }\n      if (!registerForm.password) {\n        ElMessage.warning('Please input password');\n        return;\n      }\n      if (!registerForm.confirmPassword) {\n        ElMessage.warning('Please confirm password');\n        return;\n      }\n      if (registerForm.password !== registerForm.confirmPassword) {\n        ElMessage.warning('Passwords do not match');\n        return;\n      }\n      if (!registerForm.email) {\n        ElMessage.warning('Please input email');\n        return;\n      }\n      if (!registerForm.captcha) {\n        ElMessage.warning('Please input captcha');\n        return;\n      }\n      try {\n        const res = await request({\n          url: '/users/register',\n          method: 'POST',\n          data: {\n            name: registerForm.username,\n            email: registerForm.email,\n            password: registerForm.password,\n            confirmPassword: registerForm.confirmPassword,\n            captcha: registerForm.captcha,\n            captchaId: captchaCode.value\n          }\n        });\n\n        // Registration success\n        ElMessage.success('Registration successful, please login');\n\n        // Switch to login panel\n        switchPanel(true);\n      } catch (error) {\n        // Registration failed, refresh captcha\n        getCaptcha();\n      }\n    };\n    const __returned__ = {\n      router,\n      isLogin,\n      loginFormRef,\n      registerFormRef,\n      captchaImg,\n      captchaCode,\n      loginForm,\n      registerForm,\n      loadSavedCredentials,\n      getCaptcha,\n      setCookie,\n      switchPanel,\n      clearSavedCredentials,\n      handleLogin,\n      handleRegister,\n      ref,\n      reactive,\n      onMounted,\n      get User() {\n        return User;\n      },\n      get Lock() {\n        return Lock;\n      },\n      get Message() {\n        return Message;\n      },\n      get ChatDotRound() {\n        return ChatDotRound;\n      },\n      get Phone() {\n        return Phone;\n      },\n      get Key() {\n        return Key;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get request() {\n        return request;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","User","Lock","Message","ChatDotRound","Phone","Key","ElMessage","request","useRouter","router","isLogin","loginFormRef","registerFormRef","captchaImg","captchaCode","loginForm","email","password","captcha","remember","registerForm","username","confirmPassword","getCaptcha","loadSavedCredentials","savedCredentials","localStorage","getItem","JSON","parse","res","url","method","value","data","image","captchaId","error","console","setCookie","name","days","expires","Date","setTime","getTime","document","cookie","toUTCString","switchPanel","login","clearSavedCredentials","removeItem","handleLogin","warning","success","log","setItem","stringify","userData","userId","role","avatar","token","push","handleRegister"],"sources":["/Users/taoyuxuan/Documents/RestaurantReservation/qd/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <div class=\"login-header\">\n        <h1>{{ isLogin ? 'Restaurant ReserveNow' : 'User Registration' }}</h1>\n        <div class=\"header-decoration\"></div>\n      </div>\n      \n      <!-- Login Panel -->\n      <div class=\"login-form\" v-if=\"isLogin\">\n        <el-form :model=\"loginForm\" ref=\"loginFormRef\">\n          <el-form-item>\n            <el-input \n              v-model=\"loginForm.email\" \n              placeholder=\"Please input email\"\n              :prefix-icon=\"Message\"\n              class=\"custom-input\"\n            />\n          </el-form-item>\n          \n          <el-form-item>\n            <el-input \n              v-model=\"loginForm.password\" \n              type=\"password\" \n              placeholder=\"Please input password\"\n              :prefix-icon=\"Lock\"\n              class=\"custom-input\"\n              show-password\n            />\n          </el-form-item>\n          \n          <el-form-item>\n            <div class=\"captcha-container\">\n              <el-input \n                v-model=\"loginForm.captcha\" \n                placeholder=\"Please input captcha\"\n                :prefix-icon=\"Key\"\n                class=\"custom-input captcha-input\"\n              />\n              <div class=\"captcha-box\" @click=\"getCaptcha\">\n                <img v-if=\"captchaImg\" :src=\"captchaImg\" alt=\"Captcha\" class=\"captcha-image\" />\n                <div v-else class=\"mock-captcha\">Loading...</div>\n              </div>\n            </div>\n          </el-form-item>\n          \n          <div class=\"form-options\">\n            <el-checkbox v-model=\"loginForm.remember\" class=\"remember-me\">Remember me</el-checkbox>\n            <el-button type=\"text\" class=\"forgot-password\">Forgot password?</el-button>\n          </div>\n          \n          <el-form-item class=\"login-btn-container\">\n            <el-button \n              type=\"primary\" \n              class=\"login-btn\" \n              @click=\"handleLogin\"\n            >\n              Login\n            </el-button>\n          </el-form-item>\n          \n          <div class=\"other-login-methods\">\n            <div class=\"divider\">\n              <span class=\"divider-text\">Other login methods</span>\n            </div>\n            <div class=\"social-login\">\n              <el-button circle class=\"social-icon\" type=\"info\">\n                <el-icon><Message /></el-icon>\n              </el-button>\n              <el-button circle class=\"social-icon\" type=\"success\">\n                <el-icon><ChatDotRound /></el-icon>\n              </el-button>\n              <el-button circle class=\"social-icon\" type=\"danger\">\n                <el-icon><Phone /></el-icon>\n              </el-button>\n            </div>\n          </div>\n        </el-form>\n        \n        <div class=\"login-footer\">\n          <p>Don't have an account? <el-button type=\"text\" class=\"register-link\" @click=\"switchPanel(false)\">Register now</el-button></p>\n        </div>\n      </div>\n      \n      <!-- Registration Panel -->\n      <div class=\"register-form\" v-else>\n        <el-form :model=\"registerForm\" ref=\"registerFormRef\">\n          <el-form-item>\n            <el-input \n              v-model=\"registerForm.username\" \n              placeholder=\"Please input username\"\n              :prefix-icon=\"User\"\n              class=\"custom-input\"\n            />\n          </el-form-item>\n          \n          <el-form-item>\n            <el-input \n              v-model=\"registerForm.password\" \n              type=\"password\" \n              placeholder=\"Please input password\"\n              :prefix-icon=\"Lock\"\n              class=\"custom-input\"\n              show-password\n            />\n          </el-form-item>\n          \n          <el-form-item>\n            <el-input \n              v-model=\"registerForm.confirmPassword\" \n              type=\"password\" \n              placeholder=\"Please confirm password\"\n              :prefix-icon=\"Lock\"\n              class=\"custom-input\"\n              show-password\n            />\n          </el-form-item>\n          \n          <el-form-item>\n            <el-input \n              v-model=\"registerForm.email\" \n              placeholder=\"Please input email\"\n              :prefix-icon=\"Message\"\n              class=\"custom-input\"\n            />\n          </el-form-item>\n          \n          <el-form-item>\n            <div class=\"captcha-container\">\n              <el-input \n                v-model=\"registerForm.captcha\" \n                placeholder=\"Please input captcha\"\n                :prefix-icon=\"Key\"\n                class=\"custom-input captcha-input\"\n              />\n              <div class=\"captcha-box\" @click=\"getCaptcha\">\n                <img v-if=\"captchaImg\" :src=\"captchaImg\" alt=\"Captcha\" class=\"captcha-image\" />\n                <div v-else class=\"mock-captcha\">Loading...</div>\n              </div>\n            </div>\n          </el-form-item>\n          \n          <el-form-item class=\"register-btn-container\">\n            <el-button \n              type=\"primary\" \n              class=\"register-btn\" \n              @click=\"handleRegister\"\n            >\n              Register\n            </el-button>\n          </el-form-item>\n        </el-form>\n        \n        <div class=\"register-footer\">\n          <p>Already have an account? <el-button type=\"text\" class=\"login-link\" @click=\"switchPanel(true)\">Back to login</el-button></p>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"decoration-box decoration-box-1\"></div>\n    <div class=\"decoration-box decoration-box-2\"></div>\n    <div class=\"decoration-box decoration-box-3\"></div>\n    <div class=\"decoration-box decoration-box-4\"></div>\n    <div class=\"decoration-box decoration-box-5\"></div>\n    \n    <div class=\"floating-shapes\">\n      <div class=\"floating-shape shape-1\"></div>\n      <div class=\"floating-shape shape-2\"></div>\n      <div class=\"floating-shape shape-3\"></div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue';\nimport { User, Lock, Message, ChatDotRound, Phone, Key } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\nimport request from '@/utils/request';\nimport { useRouter } from 'vue-router';\n\nconst router = useRouter();\n\n// Control the current panel display (login/register)\nconst isLogin = ref(true);\n\nconst loginFormRef = ref(null);\nconst registerFormRef = ref(null);\n\n// Captcha image\nconst captchaImg = ref('');\n// Captcha ID\nconst captchaCode = ref('');\n\n// Login form data\nconst loginForm = reactive({\n  email: '',\n  password: '',\n  captcha: '',\n  remember: false\n});\n\n// Registration form data\nconst registerForm = reactive({\n  username: '',\n  password: '',\n  confirmPassword: '',\n  email: '',\n  captcha: ''\n});\n\n// Get captcha when page loads\nonMounted(() => {\n  getCaptcha();\n  loadSavedCredentials();\n});\n\n// Load saved credentials from local storage\nconst loadSavedCredentials = () => {\n  const savedCredentials = localStorage.getItem('savedCredentials');\n  if (savedCredentials) {\n    const { email, password } = JSON.parse(savedCredentials);\n    loginForm.email = email;\n    loginForm.password = password;\n    loginForm.remember = true;\n  }\n};\n\n// Get captcha\nconst getCaptcha = async () => {\n  try {\n    const res = await request({\n      url: '/users/captcha',\n      method: 'GET'\n    });\n    captchaImg.value = res.data.image;\n    captchaCode.value = res.data.captchaId;\n  } catch (error) {\n    console.error('Failed to get captcha', error);\n  }\n};\n\n// Set cookie\nconst setCookie = (name, value, days) => {\n  const expires = new Date();\n  expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000);\n  document.cookie = `${name}=${value};expires=${expires.toUTCString()};path=/`;\n};\n\n// Switch panel\nconst switchPanel = (login) => {\n  isLogin.value = login;\n  // Get new captcha when switching panels\n  getCaptcha();\n  \n  // Clear form data when switching to registration panel\n  if (!login) {\n    loginForm.email = '';\n    loginForm.password = '';\n    loginForm.captcha = '';\n    loginForm.remember = false;\n  }\n};\n\n// Clear saved credentials\nconst clearSavedCredentials = () => {\n  localStorage.removeItem('savedCredentials');\n};\n\n// Login handler\nconst handleLogin = async () => {\n  if (!loginForm.email) {\n    ElMessage.warning('Please input email');\n    return;\n  }\n  \n  if (!loginForm.password) {\n    ElMessage.warning('Please input password');\n    return;\n  }\n  \n  if (!loginForm.captcha) {\n    ElMessage.warning('Please input captcha');\n    return;\n  }\n  \n  try {\n    const res = await request({\n      url: '/users/login',\n      method: 'POST',\n      data: {\n        email: loginForm.email,\n        password: loginForm.password,\n        captcha: loginForm.captcha,\n        captchaId: captchaCode.value\n      }\n    });\n    \n    // Login success\n    ElMessage.success('Login successful');\n    \n    // Save credentials if remember me is checked\n    console.log(loginForm.remember);\n    if (loginForm.remember) {\n      localStorage.setItem('savedCredentials', JSON.stringify({\n        email: loginForm.email,\n        password: loginForm.password\n      }));\n    } else {\n      localStorage.removeItem('savedCredentials');\n    }\n    \n    // Store user info locally\n    const userData = res.data;\n    localStorage.setItem('userInfo', JSON.stringify({\n      userId: userData.userId,\n      role: userData.role,\n      name: userData.name,\n      email: userData.email,\n      avatar: userData.avatar,\n      token: userData.token\n    }));\n    // Store token in cookie\n    setCookie('token', userData.token, 7);\n    \n    if (userData.role === 2) {\n      router.push('/');\n    } else {\n      router.push('/admin/dashboard');\n    }\n  } catch (error) {\n    // Login failed, refresh captcha\n    getCaptcha();\n  }\n};\n\n// Registration handler\nconst handleRegister = async () => {\n  if (!registerForm.username) {\n    ElMessage.warning('Please input username');\n    return;\n  }\n  \n  if (!registerForm.password) {\n    ElMessage.warning('Please input password');\n    return;\n  }\n  \n  if (!registerForm.confirmPassword) {\n    ElMessage.warning('Please confirm password');\n    return;\n  }\n  \n  if (registerForm.password !== registerForm.confirmPassword) {\n    ElMessage.warning('Passwords do not match');\n    return;\n  }\n  \n  if (!registerForm.email) {\n    ElMessage.warning('Please input email');\n    return;\n  }\n  \n  if (!registerForm.captcha) {\n    ElMessage.warning('Please input captcha');\n    return;\n  }\n  \n  try {\n    const res = await request({\n      url: '/users/register',\n      method: 'POST',\n      data: {\n        name: registerForm.username,\n        email: registerForm.email,\n        password: registerForm.password,\n        confirmPassword: registerForm.confirmPassword,\n        captcha: registerForm.captcha,\n        captchaId: captchaCode.value\n      }\n    });\n    \n    // Registration success\n    ElMessage.success('Registration successful, please login');\n    \n    // Switch to login panel\n    switchPanel(true);\n  } catch (error) {\n    // Registration failed, refresh captcha\n    getCaptcha();\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.login-container {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background: linear-gradient(135deg, #f5f7fa 0%, #e4e6eb 100%);\n  overflow: hidden;\n}\n\n.login-box {\n  position: relative;\n  z-index: 10;\n  width: 420px;\n  background-color: rgba(255, 255, 255, 0.92);\n  border-radius: 12px;\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);\n  padding: 40px;\n  backdrop-filter: blur(5px);\n  animation: fadeIn 0.6s ease-out;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -5px;\n    left: -5px;\n    right: -5px;\n    bottom: -5px;\n    background: linear-gradient(45deg, transparent 30%, #409eff 45%, #409eff 55%, transparent 70%);\n    z-index: -1;\n    border-radius: 15px;\n    filter: blur(10px);\n    opacity: 0.7;\n    animation: borderLight 6s linear infinite;\n  }\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 35px;\n  \n  h1 {\n    color: #303133;\n    font-size: 28px;\n    font-weight: 600;\n    margin-bottom: 10px;\n    letter-spacing: 1px;\n    animation: slideDown 0.6s ease;\n  }\n  \n  .header-decoration {\n    height: 4px;\n    width: 60px;\n    background: linear-gradient(90deg, #67c23a, #409eff);\n    margin: 0 auto;\n    clip-path: polygon(0 0, 100% 0, 95% 100%, 5% 100%);\n    animation: expandWidth 0.8s ease-out;\n  }\n}\n\n.login-form, .register-form {\n  .custom-input {\n    --el-input-height: 50px;\n    --el-input-border-radius: 10px;\n    margin-bottom: 15px;\n    \n    &:deep(.el-input__wrapper) {\n      box-shadow: 0 0 0 1px rgba(220, 223, 230, 0.5) inset;\n      background-color: rgba(255, 255, 255, 0.8);\n      backdrop-filter: blur(5px);\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      padding: 0 15px;\n      \n      &:hover {\n        box-shadow: 0 3px 12px rgba(0, 0, 0, 0.07), 0 0 0 1px rgba(192, 196, 204, 0.7) inset;\n        transform: translateY(-2px);\n      }\n      \n      &.is-focus {\n        box-shadow: 0 6px 18px rgba(64, 158, 255, 0.1), 0 0 0 2px rgba(64, 158, 255, 0.4) inset;\n        transform: translateY(-2px);\n        background-color: rgba(255, 255, 255, 0.95);\n      }\n      \n      .el-input__prefix-inner {\n        margin-right: 10px;\n        \n        .el-icon {\n          font-size: 18px;\n          color: #909399;\n          transition: all 0.3s ease;\n        }\n      }\n      \n      .el-input__inner {\n        font-size: 15px;\n        color: #303133;\n        letter-spacing: 0.5px;\n        \n        &::placeholder {\n          color: #c0c4cc;\n          transition: all 0.3s ease;\n        }\n      }\n      \n      &:hover .el-input__prefix-inner .el-icon,\n      &.is-focus .el-input__prefix-inner .el-icon {\n        color: #409eff;\n      }\n      \n      &.is-focus .el-input__inner::placeholder {\n        opacity: 0.6;\n        transform: translateX(5px);\n      }\n    }\n  }\n}\n\n.captcha-container {\n  display: flex;\n  gap: 15px;\n  \n  .captcha-input {\n    flex: 1;\n  }\n  \n  .captcha-box {\n    width: 120px;\n    height: 50px;\n    border-radius: 10px;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: linear-gradient(135deg, #f7f8fa, #e9ebee);\n    cursor: pointer;\n    box-shadow: 0 0 0 1px rgba(220, 223, 230, 0.5) inset;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    \n    .mock-captcha {\n      color: #909399;\n      font-size: 14px;\n      font-weight: 500;\n      letter-spacing: 2px;\n      text-align: center;\n      user-select: none;\n    }\n    \n    &:hover {\n      box-shadow: 0 3px 12px rgba(0, 0, 0, 0.07), 0 0 0 1px rgba(192, 196, 204, 0.7) inset;\n      transform: translateY(-2px);\n    }\n    \n    .captcha-image {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n}\n\n.form-options {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 5px 0 20px;\n  \n  .remember-me {\n    color: #606266;\n    font-size: 14px;\n  }\n  \n  .forgot-password {\n    font-size: 14px;\n    color: #409eff;\n    \n    &:hover {\n      color: #337ecc;\n    }\n  }\n}\n\n.login-btn-container, .register-btn-container {\n  margin-top: 10px;\n  margin-bottom: 25px;\n}\n\n.login-btn, .register-btn {\n  width: 100%;\n  height: 50px;\n  border-radius: 6px;\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: 2px;\n  background: linear-gradient(90deg, #409eff, #53a8ff);\n  border: none;\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s ease;\n  transform: translateY(0);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: all 0.5s ease;\n  }\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);\n    \n    &::before {\n      left: 100%;\n      animation: shine 1.5s infinite;\n    }\n  }\n  \n  &:active {\n    transform: translateY(1px);\n  }\n}\n\n.other-login-methods {\n  margin-top: 20px;\n}\n\n.divider {\n  display: flex;\n  align-items: center;\n  margin: 15px 0;\n  \n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    height: 1px;\n    background-color: #dcdfe6;\n  }\n  \n  .divider-text {\n    padding: 0 15px;\n    color: #909399;\n    font-size: 14px;\n  }\n}\n\n.social-login {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 15px;\n  \n  .social-icon {\n    width: 42px;\n    height: 42px;\n    transition: all 0.3s ease;\n    \n    &:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    }\n  }\n}\n\n.login-footer, .register-footer {\n  text-align: center;\n  margin-top: 20px;\n  color: #606266;\n  font-size: 14px;\n  \n  .register-link, .login-link {\n    font-weight: 500;\n    color: #409eff;\n    \n    &:hover {\n      color: #337ecc;\n    }\n  }\n}\n\n.decoration-box {\n  position: absolute;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 4px;\n  transform: rotate(45deg);\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.05);\n  \n  &-1 {\n    width: 200px;\n    height: 200px;\n    bottom: -100px;\n    right: 10%;\n    background: linear-gradient(135deg, #ffffff, #f2f2f2);\n    animation: float 10s ease-in-out infinite;\n  }\n  \n  &-2 {\n    width: 300px;\n    height: 300px;\n    top: -150px;\n    left: 10%;\n    background: linear-gradient(135deg, #ffffff, #f5f5f5);\n    animation: float 12s ease-in-out infinite;\n    animation-delay: 1s;\n  }\n  \n  &-3 {\n    width: 150px;\n    height: 150px;\n    top: 20%;\n    right: -75px;\n    background: linear-gradient(135deg, #f8f8f8, #ffffff);\n    animation: float 8s ease-in-out infinite;\n    animation-delay: 2s;\n  }\n  \n  &-4 {\n    width: 120px;\n    height: 120px;\n    bottom: 15%;\n    left: 5%;\n    background: linear-gradient(135deg, #f5f5f5, #ffffff);\n    animation: float 9s ease-in-out infinite;\n    animation-delay: 1.5s;\n  }\n  \n  &-5 {\n    width: 80px;\n    height: 80px;\n    top: 15%;\n    left: 25%;\n    background: linear-gradient(135deg, #ffffff, #f8f8f8);\n    animation: float 7s ease-in-out infinite;\n    animation-delay: 0.5s;\n  }\n}\n\n.floating-shapes {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 1;\n}\n\n.floating-shape {\n  position: absolute;\n  background: linear-gradient(135deg, rgba(64, 158, 255, 0.1), rgba(103, 194, 58, 0.1));\n  border-radius: 50%;\n  \n  &.shape-1 {\n    width: 80px;\n    height: 80px;\n    top: 20%;\n    left: 15%;\n    animation: floatShape 15s ease-in-out infinite;\n  }\n  \n  &.shape-2 {\n    width: 60px;\n    height: 60px;\n    bottom: 30%;\n    right: 15%;\n    animation: floatShape 12s ease-in-out infinite;\n    animation-delay: 1s;\n  }\n  \n  &.shape-3 {\n    width: 40px;\n    height: 40px;\n    top: 70%;\n    left: 30%;\n    animation: floatShape 10s ease-in-out infinite;\n    animation-delay: 2s;\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes expandWidth {\n  from {\n    width: 0;\n  }\n  to {\n    width: 60px;\n  }\n}\n\n@keyframes borderLight {\n  0% {\n    background-position: 0 0;\n  }\n  100% {\n    background-position: 400% 0;\n  }\n}\n\n@keyframes float {\n  0% {\n    transform: translateY(0) rotate(45deg);\n  }\n  50% {\n    transform: translateY(-20px) rotate(45deg);\n  }\n  100% {\n    transform: translateY(0) rotate(45deg);\n  }\n}\n\n@keyframes floatShape {\n  0% {\n    transform: translate(0, 0);\n  }\n  25% {\n    transform: translate(10px, 10px);\n  }\n  50% {\n    transform: translate(0, 20px);\n  }\n  75% {\n    transform: translate(-10px, 10px);\n  }\n  100% {\n    transform: translate(0, 0);\n  }\n}\n\n@keyframes shine {\n  0% {\n    left: -100%;\n  }\n  20% {\n    left: 100%;\n  }\n  100% {\n    left: 100%;\n  }\n}\n\n@media (max-width: 480px) {\n  .login-box {\n    width: 90%;\n    padding: 30px 20px;\n  }\n  \n  .form-options {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  \n  .captcha-container {\n    flex-direction: column;\n    \n    .captcha-box {\n      width: 100%;\n    }\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ref, reactive, onMounted, computed, onUnmounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport request from '@/utils/request';\nimport { formatDate } from '@/utils/format';\n\n// Get user role\n\nexport default {\n  __name: 'ReservationManage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userRole = ref(0);\n\n    // Search form\n    const searchForm = reactive({\n      status: [],\n      restaurantId: ''\n    });\n\n    // Table data\n    const loading = ref(false);\n    const reservationList = ref([]);\n    const total = ref(0);\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n\n    // Restaurant options list (for admin)\n    const restaurantOptions = ref([]);\n\n    // Reservation details dialog\n    const detailDialogVisible = ref(false);\n    const selectedReservation = ref(null);\n\n    // Dropdown states\n    const statusSelectVisible = ref(false);\n    const restaurantSelectVisible = ref(false);\n\n    // Pagination display page numbers calculation\n    const displayedPages = computed(() => {\n      const totalPages = Math.ceil(total.value / pageSize.value);\n      if (totalPages <= 5) {\n        return Array.from({\n          length: totalPages\n        }, (_, i) => i + 1);\n      }\n      if (currentPage.value <= 3) {\n        return [1, 2, 3, 4, 5];\n      }\n      if (currentPage.value >= totalPages - 2) {\n        return [totalPages - 4, totalPages - 3, totalPages - 2, totalPages - 1, totalPages];\n      }\n      return [currentPage.value - 2, currentPage.value - 1, currentPage.value, currentPage.value + 1, currentPage.value + 2];\n    });\n\n    // Get restaurant list (admin only)\n    const fetchRestaurantOptions = async () => {\n      try {\n        const res = await request({\n          url: '/admin/restaurants',\n          method: 'get',\n          params: {\n            page: 1,\n            pageSize: 100\n          } // Get enough restaurant options\n        });\n        restaurantOptions.value = res.data.list;\n      } catch (error) {\n        console.error('Failed to fetch restaurant list:', error);\n      }\n    };\n\n    // Get reservation list\n    const fetchReservationList = async () => {\n      loading.value = true;\n      try {\n        const params = {\n          page: currentPage.value,\n          pageSize: pageSize.value\n        };\n\n        // Add status filter parameters\n        if (searchForm.status && searchForm.status.length > 0) {\n          params.status = searchForm.status.join(',');\n        }\n\n        // Add restaurant filter parameters (admin only)\n        if (userRole.value === 0 && searchForm.restaurantId) {\n          params.restaurantId = searchForm.restaurantId;\n        }\n        let url = '';\n        // Select different API URL based on user role\n        if (userRole.value === 0) {\n          // Admin\n          url = '/admin/reservations';\n        } else if (userRole.value === 1) {\n          // Restaurant Manager\n          url = '/admin/reservations/manager';\n\n          // If restaurant manager selected specific restaurant for filtering\n          if (searchForm.restaurantId) {\n            params.restaurantId = searchForm.restaurantId;\n          }\n        } else if (userRole.value === 3) {\n          // Staff\n          url = '/admin/staff/reservations';\n        } else {\n          ElMessage.error('You do not have permission to access this page');\n          loading.value = false;\n          return;\n        }\n        console.log('Request reservation list URL:', url, 'Parameters:', params);\n        const res = await request({\n          url,\n          method: 'get',\n          params\n        });\n        reservationList.value = res.data.list;\n        total.value = res.data.total;\n        console.log('Fetched reservation list:', reservationList.value);\n      } catch (error) {\n        console.error('Failed to fetch reservation list:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Search\n    const handleSearch = () => {\n      currentPage.value = 1;\n      fetchReservationList();\n\n      // Close all dropdowns\n      statusSelectVisible.value = false;\n      restaurantSelectVisible.value = false;\n    };\n\n    // Reset search conditions\n    const handleReset = () => {\n      searchForm.status = [];\n      searchForm.restaurantId = '';\n      currentPage.value = 1;\n      fetchReservationList();\n\n      // Close all dropdowns\n      statusSelectVisible.value = false;\n      restaurantSelectVisible.value = false;\n    };\n\n    // Pagination related\n    const handleSizeChange = val => {\n      pageSize.value = val;\n      fetchReservationList();\n    };\n    const handleCurrentChange = val => {\n      currentPage.value = val;\n      fetchReservationList();\n    };\n\n    // Get status tag type\n    const getStatusType = statusValue => {\n      const typeMap = {\n        0: 'info',\n        // Cancelled\n        1: 'warning',\n        // Pending\n        2: 'success',\n        // Confirmed\n        3: 'primary',\n        // Completed\n        4: 'danger' // Rejected\n      };\n      return typeMap[statusValue] || 'info';\n    };\n\n    // Get status text\n    const getStatusText = statusValue => {\n      const textMap = {\n        0: 'Cancelled',\n        1: 'Pending',\n        2: 'Confirmed',\n        3: 'Completed',\n        4: 'Rejected'\n      };\n      return textMap[statusValue] || 'Unknown Status';\n    };\n\n    // Get restaurant name\n    const getRestaurantName = id => {\n      const restaurant = restaurantOptions.value.find(item => item.id === id);\n      return restaurant ? restaurant.name : 'Unknown Restaurant';\n    };\n\n    // Date time formatting\n    const formatDateTime = dateStr => {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      if (isNaN(date.getTime())) return dateStr;\n\n      // Format as YYYY-MM-DD HH:MM\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      const hours = String(date.getHours()).padStart(2, '0');\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\n    };\n\n    // Confirm reservation\n    const handleConfirm = row => {\n      ElMessageBox.confirm('Are you sure you want to confirm this reservation?', 'Confirm Operation', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'success'\n      }).then(async () => {\n        try {\n          await request({\n            url: `/admin/reservations/${row.id}/confirm`,\n            method: 'put'\n          });\n          ElMessage.success('Reservation confirmed');\n          fetchReservationList();\n        } catch (error) {\n          console.error('Failed to confirm reservation:', error);\n        }\n      }).catch(() => {\n        // User cancelled operation, no action needed\n      });\n    };\n\n    // Reject reservation\n    const handleReject = row => {\n      ElMessageBox.prompt('Please enter rejection reason', 'Reject Reservation', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        inputPlaceholder: 'Please enter rejection reason',\n        type: 'warning'\n      }).then(async ({\n        value\n      }) => {\n        try {\n          await request({\n            url: `/admin/reservations/${row.id}/reject`,\n            method: 'put',\n            data: {\n              reason: value\n            }\n          });\n          ElMessage.success('Reservation rejected');\n          fetchReservationList();\n        } catch (error) {\n          console.error('Failed to reject reservation:', error);\n        }\n      }).catch(() => {\n        // User cancelled input, no action needed\n      });\n    };\n\n    // Mark reservation as completed\n    const handleComplete = row => {\n      ElMessageBox.confirm('Are you sure you want to mark this reservation as completed?', 'Complete Operation', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'info'\n      }).then(async () => {\n        try {\n          await request({\n            url: `/admin/reservations/${row.id}/complete`,\n            method: 'put'\n          });\n          ElMessage.success('Reservation marked as completed');\n          fetchReservationList();\n        } catch (error) {\n          console.error('Failed to mark reservation as completed:', error);\n        }\n      }).catch(() => {\n        // User cancelled operation, no action needed\n      });\n    };\n\n    // View reservation details\n    const handleViewDetails = row => {\n      selectedReservation.value = {\n        ...row\n      };\n      detailDialogVisible.value = true;\n    };\n\n    // Details dialog actions\n    const confirmReservation = () => {\n      handleConfirm(selectedReservation.value);\n      detailDialogVisible.value = false;\n    };\n    const rejectReservation = () => {\n      handleReject(selectedReservation.value);\n      detailDialogVisible.value = false;\n    };\n    const completeReservation = () => {\n      handleComplete(selectedReservation.value);\n      detailDialogVisible.value = false;\n    };\n\n    // Close details dialog\n    const closeDetailDialog = e => {\n      // Only close if clicking background\n      if (e.target.classList.contains('detail-dialog-overlay')) {\n        detailDialogVisible.value = false;\n      }\n    };\n\n    // Dropdown actions\n    const toggleStatusSelect = () => {\n      statusSelectVisible.value = !statusSelectVisible.value;\n      restaurantSelectVisible.value = false;\n    };\n    const toggleRestaurantSelect = () => {\n      restaurantSelectVisible.value = !restaurantSelectVisible.value;\n      statusSelectVisible.value = false;\n    };\n    const toggleStatus = status => {\n      const index = searchForm.status.indexOf(status);\n      if (index === -1) {\n        searchForm.status.push(status);\n      } else {\n        searchForm.status.splice(index, 1);\n      }\n    };\n    const removeStatus = index => {\n      searchForm.status.splice(index, 1);\n    };\n    const selectRestaurant = id => {\n      searchForm.restaurantId = id;\n    };\n\n    // Close dropdown click outside listener\n    const handleOutsideClick = e => {\n      const statusSelect = document.querySelector('.custom-select');\n      const restaurantSelect = document.querySelectorAll('.custom-select')[1];\n      if (statusSelect && !statusSelect.contains(e.target)) {\n        statusSelectVisible.value = false;\n      }\n      if (restaurantSelect && !restaurantSelect.contains(e.target)) {\n        restaurantSelectVisible.value = false;\n      }\n    };\n\n    // Initialize\n    onMounted(() => {\n      // Get user info from localStorage\n      try {\n        const userInfoStr = localStorage.getItem('userInfo');\n        if (userInfoStr) {\n          const userInfo = JSON.parse(userInfoStr);\n          userRole.value = Number(userInfo.role || 0);\n        }\n      } catch (error) {\n        console.error('Failed to get user info:', error);\n      }\n\n      // If admin, get restaurant options\n      if (userRole.value === 0) {\n        fetchRestaurantOptions();\n      }\n\n      // Get reservation list\n      fetchReservationList();\n\n      // Add click outside to close dropdown listener\n      document.addEventListener('click', handleOutsideClick);\n    });\n\n    // Component unmount remove event listener\n    onUnmounted(() => {\n      document.removeEventListener('click', handleOutsideClick);\n    });\n    const __returned__ = {\n      userRole,\n      searchForm,\n      loading,\n      reservationList,\n      total,\n      currentPage,\n      pageSize,\n      restaurantOptions,\n      detailDialogVisible,\n      selectedReservation,\n      statusSelectVisible,\n      restaurantSelectVisible,\n      displayedPages,\n      fetchRestaurantOptions,\n      fetchReservationList,\n      handleSearch,\n      handleReset,\n      handleSizeChange,\n      handleCurrentChange,\n      getStatusType,\n      getStatusText,\n      getRestaurantName,\n      formatDateTime,\n      handleConfirm,\n      handleReject,\n      handleComplete,\n      handleViewDetails,\n      confirmReservation,\n      rejectReservation,\n      completeReservation,\n      closeDetailDialog,\n      toggleStatusSelect,\n      toggleRestaurantSelect,\n      toggleStatus,\n      removeStatus,\n      selectRestaurant,\n      handleOutsideClick,\n      ref,\n      reactive,\n      onMounted,\n      computed,\n      onUnmounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get request() {\n        return request;\n      },\n      get formatDate() {\n        return formatDate;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","onUnmounted","ElMessage","ElMessageBox","request","formatDate","userRole","searchForm","status","restaurantId","loading","reservationList","total","currentPage","pageSize","restaurantOptions","detailDialogVisible","selectedReservation","statusSelectVisible","restaurantSelectVisible","displayedPages","totalPages","Math","ceil","value","Array","from","length","_","i","fetchRestaurantOptions","res","url","method","params","page","data","list","error","console","fetchReservationList","join","log","handleSearch","handleReset","handleSizeChange","val","handleCurrentChange","getStatusType","statusValue","typeMap","getStatusText","textMap","getRestaurantName","id","restaurant","find","item","name","formatDateTime","dateStr","date","Date","isNaN","getTime","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","handleConfirm","row","confirm","confirmButtonText","cancelButtonText","type","then","success","catch","handleReject","prompt","inputPlaceholder","reason","handleComplete","handleViewDetails","confirmReservation","rejectReservation","completeReservation","closeDetailDialog","e","target","classList","contains","toggleStatusSelect","toggleRestaurantSelect","toggleStatus","index","indexOf","push","splice","removeStatus","selectRestaurant","handleOutsideClick","statusSelect","document","querySelector","restaurantSelect","querySelectorAll","userInfoStr","localStorage","getItem","userInfo","JSON","parse","Number","role","addEventListener","removeEventListener"],"sources":["/Users/taoyuxuan/Documents/RestaurantReservation/qd/src/views/admin/ReservationManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"reservation-manage-container\">\r\n    <!-- Search and operation area -->\r\n    <div class=\"search-section neomorphic-card\">\r\n      <div class=\"search-form\">\r\n        <!-- Reservation status filter dropdown -->\r\n        <div class=\"custom-select\">\r\n          <div \r\n            class=\"select-selected\" \r\n            :class=\"{ 'active': statusSelectVisible }\"\r\n            @click=\"toggleStatusSelect\"\r\n          >\r\n            <span v-if=\"searchForm.status.length === 0\">Filter by Status</span>\r\n            <div v-else>\r\n              <span \r\n                v-for=\"(status, index) in searchForm.status\" \r\n                :key=\"status\" \r\n                class=\"select-tag\"\r\n              >\r\n                {{ getStatusText(status) }}\r\n                <span class=\"select-tag-close\" @click.stop=\"removeStatus(index)\">×</span>\r\n              </span>\r\n              <span v-if=\"searchForm.status.length > 2\">...</span>\r\n            </div>\r\n            <div class=\"select-arrow\"></div>\r\n          </div>\r\n          <div class=\"select-items\" :class=\"{ 'show': statusSelectVisible }\">\r\n            <div \r\n              class=\"select-item\" \r\n              :class=\"{ 'selected': searchForm.status.includes(0) }\"\r\n              @click=\"toggleStatus(0)\"\r\n            >Cancelled</div>\r\n            <div \r\n              class=\"select-item\" \r\n              :class=\"{ 'selected': searchForm.status.includes(1) }\"\r\n              @click=\"toggleStatus(1)\"\r\n            >Pending</div>\r\n            <div \r\n              class=\"select-item\" \r\n              :class=\"{ 'selected': searchForm.status.includes(2) }\"\r\n              @click=\"toggleStatus(2)\"\r\n            >Confirmed</div>\r\n            <div \r\n              class=\"select-item\" \r\n              :class=\"{ 'selected': searchForm.status.includes(3) }\"\r\n              @click=\"toggleStatus(3)\"\r\n            >Completed</div>\r\n            <div \r\n              class=\"select-item\" \r\n              :class=\"{ 'selected': searchForm.status.includes(4) }\"\r\n              @click=\"toggleStatus(4)\"\r\n            >Rejected</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Restaurant selection dropdown -->\r\n        <div class=\"custom-select\" v-if=\"userRole === 0\">\r\n          <div \r\n            class=\"select-selected\" \r\n            :class=\"{ 'active': restaurantSelectVisible }\"\r\n            @click=\"toggleRestaurantSelect\"\r\n          >\r\n            <span v-if=\"!searchForm.restaurantId\">Select Restaurant</span>\r\n            <span v-else>{{ getRestaurantName(searchForm.restaurantId) }}</span>\r\n            <div class=\"select-arrow\"></div>\r\n          </div>\r\n          <div class=\"select-items\" :class=\"{ 'show': restaurantSelectVisible }\">\r\n            <div \r\n              class=\"select-item\"\r\n              @click=\"selectRestaurant(''); toggleRestaurantSelect()\"\r\n            >All Restaurants</div>\r\n            <div \r\n              v-for=\"restaurant in restaurantOptions\" \r\n              :key=\"restaurant.id\"\r\n              class=\"select-item\" \r\n              :class=\"{ 'selected': restaurant.id === searchForm.restaurantId }\"\r\n              @click=\"selectRestaurant(restaurant.id); toggleRestaurantSelect()\"\r\n            >{{ restaurant.name }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Search button -->\r\n        <button class=\"search-btn\" @click=\"handleSearch\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n            <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n          </svg>\r\n          Search\r\n        </button>\r\n        \r\n        <!-- Reset button -->\r\n        <button class=\"reset-btn\" @click=\"handleReset\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <polyline points=\"1 4 1 10 7 10\"></polyline>\r\n            <polyline points=\"23 20 23 14 17 14\"></polyline>\r\n            <path d=\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"></path>\r\n          </svg>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Reservation list -->\r\n    <div class=\"table-section neomorphic-card\">\r\n      <!-- Loading -->\r\n      <div v-if=\"loading\" class=\"loading-container\">\r\n        <div class=\"loading-spinner\"></div>\r\n      </div>\r\n      \r\n      <!-- Custom table -->\r\n      <table v-else class=\"custom-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Reservation ID</th>\r\n            <th>Restaurant Name</th>\r\n            <th>Table Type</th>\r\n            <th>Reservation Time</th>\r\n            <th>Guests</th>\r\n            <th>Status</th>\r\n            <th>Remarks</th>\r\n            <th>Created Time</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"row in reservationList\" :key=\"row.id\">\r\n            <td>{{ row.id }}</td>\r\n            <td>{{ row.restaurantName }}</td>\r\n            <td>{{ row.tableType }}</td>\r\n            <td>{{ formatDateTime(row.reservationTime) }}</td>\r\n            <td>{{ row.personCount }} guests</td>\r\n            <td>\r\n              <span class=\"status-tag\" :class=\"getStatusType(row.statusValue)\">\r\n                {{ row.status }}\r\n              </span>\r\n            </td>\r\n            <td :title=\"row.remarks\">{{ row.remarks || 'None' }}</td>\r\n            <td>{{ formatDateTime(row.createdAt) }}</td>\r\n            <td>\r\n              <div class=\"operation-buttons\">\r\n                <!-- Confirm button -->\r\n                <button \r\n                  v-if=\"row.statusValue === 1\" \r\n                  class=\"action-btn confirm\" \r\n                  @click=\"handleConfirm(row)\"\r\n                  title=\"Confirm Reservation\"\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                    <polyline points=\"20 6 9 17 4 12\"></polyline>\r\n                  </svg>\r\n                </button>\r\n                \r\n                <!-- Reject button -->\r\n                <button \r\n                  v-if=\"row.statusValue === 1\" \r\n                  class=\"action-btn reject\" \r\n                  @click=\"handleReject(row)\"\r\n                  title=\"Reject Reservation\"\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                  </svg>\r\n                </button>\r\n                \r\n                <!-- Complete button -->\r\n                <button \r\n                  v-if=\"row.statusValue === 2\" \r\n                  class=\"action-btn complete\" \r\n                  @click=\"handleComplete(row)\"\r\n                  title=\"Mark as Completed\"\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                    <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon>\r\n                  </svg>\r\n                </button>\r\n                \r\n                <!-- View button -->\r\n                <button \r\n                  class=\"action-btn view\" \r\n                  @click=\"handleViewDetails(row)\"\r\n                  title=\"View Details\"\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n                    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          <!-- No data message -->\r\n          <tr v-if=\"reservationList.length === 0\">\r\n            <td colspan=\"9\" style=\"text-align: center; padding: 30px;\">No reservation data</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- Custom pagination -->\r\n      <div class=\"pagination\">\r\n        <div class=\"pagination-info\">\r\n          Total {{ total }} records, Current {{ currentPage }}/{{ Math.ceil(total / pageSize) }} page\r\n        </div>\r\n        <!-- Previous page -->\r\n        <button \r\n          class=\"pagination-btn\" \r\n          :disabled=\"currentPage === 1\"\r\n          @click=\"currentPage > 1 && handleCurrentChange(currentPage - 1)\"\r\n        >\r\n          &lt;\r\n        </button>\r\n        \r\n        <!-- Page number buttons -->\r\n        <button \r\n          v-for=\"page in displayedPages\" \r\n          :key=\"page\"\r\n          class=\"pagination-btn\" \r\n          :class=\"{ 'active': currentPage === page }\"\r\n          @click=\"handleCurrentChange(page)\"\r\n        >\r\n          {{ page }}\r\n        </button>\r\n        \r\n        <!-- Next page -->\r\n        <button \r\n          class=\"pagination-btn\" \r\n          :disabled=\"currentPage === Math.ceil(total / pageSize)\"\r\n          @click=\"currentPage < Math.ceil(total / pageSize) && handleCurrentChange(currentPage + 1)\"\r\n        >\r\n          &gt;\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Reservation details dialog -->\r\n    <div v-if=\"detailDialogVisible\" class=\"detail-dialog-overlay\" @click=\"closeDetailDialog\">\r\n      <div class=\"detail-dialog\" @click.stop>\r\n        <div class=\"detail-dialog-header\">\r\n          <h3 class=\"detail-dialog-title\">Reservation Details</h3>\r\n          <button class=\"detail-dialog-close\" @click=\"detailDialogVisible = false\">×</button>\r\n        </div>\r\n        \r\n        <div class=\"detail-dialog-body\">\r\n          <div v-if=\"selectedReservation\" class=\"reservation-detail\">\r\n            <div class=\"detail-row\">\r\n              <div class=\"detail-label\">Reservation ID:</div>\r\n              <div class=\"detail-value\">{{ selectedReservation.id }}</div>\r\n            </div>\r\n            <div class=\"detail-row\">\r\n              <div class=\"detail-label\">Restaurant Name:</div>\r\n              <div class=\"detail-value\">{{ selectedReservation.restaurantName }}</div>\r\n            </div>\r\n            <div class=\"detail-row\">\r\n              <div class=\"detail-label\">Table Type:</div>\r\n              <div class=\"detail-value\">{{ selectedReservation.tableType }}</div>\r\n            </div>\r\n            <div class=\"detail-row\">\r\n              <div class=\"detail-label\">Reservation Time:</div>\r\n              <div class=\"detail-value\">{{ formatDateTime(selectedReservation.reservationTime) }}</div>\r\n            </div>\r\n            <div class=\"detail-row\">\r\n              <div class=\"detail-label\">Guests:</div>\r\n              <div class=\"detail-value\">{{ selectedReservation.personCount }} guests</div>\r\n            </div>\r\n            <div class=\"detail-row\">\r\n              <div class=\"detail-label\">Status:</div>\r\n              <div class=\"detail-value\">\r\n                <span class=\"status-tag\" :class=\"getStatusType(selectedReservation.statusValue)\">\r\n                  {{ selectedReservation.status }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"detail-row\">\r\n              <div class=\"detail-label\">Remarks:</div>\r\n              <div class=\"detail-value\">{{ selectedReservation.remarks || 'None' }}</div>\r\n            </div>\r\n            <div class=\"detail-row\">\r\n              <div class=\"detail-label\">Created Time:</div>\r\n              <div class=\"detail-value\">{{ formatDateTime(selectedReservation.createdAt) }}</div>\r\n            </div>\r\n            <div class=\"detail-row\">\r\n              <div class=\"detail-label\">Updated Time:</div>\r\n              <div class=\"detail-value\">{{ formatDateTime(selectedReservation.updatedAt) }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"detail-dialog-footer\">\r\n          <button class=\"dialog-btn cancel\" @click=\"detailDialogVisible = false\">\r\n            Close\r\n          </button>\r\n          <button \r\n            v-if=\"selectedReservation && selectedReservation.statusValue === 1\"\r\n            class=\"dialog-btn confirm\" \r\n            @click=\"confirmReservation\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <polyline points=\"20 6 9 17 4 12\"></polyline>\r\n            </svg>\r\n            Confirm Reservation\r\n          </button>\r\n          <button \r\n            v-if=\"selectedReservation && selectedReservation.statusValue === 1\"\r\n            class=\"dialog-btn reject\" \r\n            @click=\"rejectReservation\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n            </svg>\r\n            Reject Reservation\r\n          </button>\r\n          <button \r\n            v-if=\"selectedReservation && selectedReservation.statusValue === 2\"\r\n            class=\"dialog-btn complete\" \r\n            @click=\"completeReservation\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon>\r\n            </svg>\r\n            Mark as Completed\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, computed, onUnmounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport request from '@/utils/request'\r\nimport { formatDate } from '@/utils/format'\r\n\r\n// Get user role\r\nconst userRole = ref(0)\r\n\r\n// Search form\r\nconst searchForm = reactive({\r\n  status: [],\r\n  restaurantId: ''\r\n})\r\n\r\n// Table data\r\nconst loading = ref(false)\r\nconst reservationList = ref([])\r\nconst total = ref(0)\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\n\r\n// Restaurant options list (for admin)\r\nconst restaurantOptions = ref([])\r\n\r\n// Reservation details dialog\r\nconst detailDialogVisible = ref(false)\r\nconst selectedReservation = ref(null)\r\n\r\n// Dropdown states\r\nconst statusSelectVisible = ref(false)\r\nconst restaurantSelectVisible = ref(false)\r\n\r\n// Pagination display page numbers calculation\r\nconst displayedPages = computed(() => {\r\n  const totalPages = Math.ceil(total.value / pageSize.value)\r\n  if (totalPages <= 5) {\r\n    return Array.from({ length: totalPages }, (_, i) => i + 1)\r\n  }\r\n  \r\n  if (currentPage.value <= 3) {\r\n    return [1, 2, 3, 4, 5]\r\n  }\r\n  \r\n  if (currentPage.value >= totalPages - 2) {\r\n    return [totalPages - 4, totalPages - 3, totalPages - 2, totalPages - 1, totalPages]\r\n  }\r\n  \r\n  return [currentPage.value - 2, currentPage.value - 1, currentPage.value, currentPage.value + 1, currentPage.value + 2]\r\n})\r\n\r\n// Get restaurant list (admin only)\r\nconst fetchRestaurantOptions = async () => {\r\n  try {\r\n    const res = await request({\r\n      url: '/admin/restaurants',\r\n      method: 'get',\r\n      params: { page: 1, pageSize: 100 } // Get enough restaurant options\r\n    })\r\n    restaurantOptions.value = res.data.list\r\n  } catch (error) {\r\n    console.error('Failed to fetch restaurant list:', error)\r\n  }\r\n}\r\n\r\n// Get reservation list\r\nconst fetchReservationList = async () => {\r\n  loading.value = true\r\n  try {\r\n    const params = {\r\n      page: currentPage.value,\r\n      pageSize: pageSize.value\r\n    }\r\n    \r\n    // Add status filter parameters\r\n    if (searchForm.status && searchForm.status.length > 0) {\r\n      params.status = searchForm.status.join(',')\r\n    }\r\n    \r\n    // Add restaurant filter parameters (admin only)\r\n    if (userRole.value === 0 && searchForm.restaurantId) {\r\n      params.restaurantId = searchForm.restaurantId\r\n    }\r\n    \r\n    let url = ''\r\n    // Select different API URL based on user role\r\n    if (userRole.value === 0) { // Admin\r\n      url = '/admin/reservations'\r\n    } else if (userRole.value === 1) { // Restaurant Manager\r\n      url = '/admin/reservations/manager'\r\n      \r\n      // If restaurant manager selected specific restaurant for filtering\r\n      if (searchForm.restaurantId) {\r\n        params.restaurantId = searchForm.restaurantId\r\n      }\r\n    } else if (userRole.value === 3) { // Staff\r\n      url = '/admin/staff/reservations'\r\n    }else {\r\n      ElMessage.error('You do not have permission to access this page')\r\n      loading.value = false\r\n      return\r\n    }\r\n    \r\n    console.log('Request reservation list URL:', url, 'Parameters:', params)\r\n    const res = await request({\r\n      url,\r\n      method: 'get',\r\n      params\r\n    })\r\n    \r\n    reservationList.value = res.data.list\r\n    total.value = res.data.total\r\n    \r\n    console.log('Fetched reservation list:', reservationList.value)\r\n  } catch (error) {\r\n    console.error('Failed to fetch reservation list:', error)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// Search\r\nconst handleSearch = () => {\r\n  currentPage.value = 1\r\n  fetchReservationList()\r\n  \r\n  // Close all dropdowns\r\n  statusSelectVisible.value = false\r\n  restaurantSelectVisible.value = false\r\n}\r\n\r\n// Reset search conditions\r\nconst handleReset = () => {\r\n  searchForm.status = []\r\n  searchForm.restaurantId = ''\r\n  currentPage.value = 1\r\n  fetchReservationList()\r\n  \r\n  // Close all dropdowns\r\n  statusSelectVisible.value = false\r\n  restaurantSelectVisible.value = false\r\n}\r\n\r\n// Pagination related\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  fetchReservationList()\r\n}\r\n\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n  fetchReservationList()\r\n}\r\n\r\n// Get status tag type\r\nconst getStatusType = (statusValue) => {\r\n  const typeMap = {\r\n    0: 'info',    // Cancelled\r\n    1: 'warning', // Pending\r\n    2: 'success', // Confirmed\r\n    3: 'primary', // Completed\r\n    4: 'danger'   // Rejected\r\n  }\r\n  return typeMap[statusValue] || 'info'\r\n}\r\n\r\n// Get status text\r\nconst getStatusText = (statusValue) => {\r\n  const textMap = {\r\n    0: 'Cancelled',\r\n    1: 'Pending',\r\n    2: 'Confirmed',\r\n    3: 'Completed',\r\n    4: 'Rejected'\r\n  }\r\n  return textMap[statusValue] || 'Unknown Status'\r\n}\r\n\r\n// Get restaurant name\r\nconst getRestaurantName = (id) => {\r\n  const restaurant = restaurantOptions.value.find(item => item.id === id)\r\n  return restaurant ? restaurant.name : 'Unknown Restaurant'\r\n}\r\n\r\n// Date time formatting\r\nconst formatDateTime = (dateStr) => {\r\n  if (!dateStr) return '';\r\n  const date = new Date(dateStr);\r\n  if (isNaN(date.getTime())) return dateStr;\r\n  \r\n  // Format as YYYY-MM-DD HH:MM\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  \r\n  return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n};\r\n\r\n// Confirm reservation\r\nconst handleConfirm = (row) => {\r\n  ElMessageBox.confirm(\r\n    'Are you sure you want to confirm this reservation?',\r\n    'Confirm Operation',\r\n    {\r\n      confirmButtonText: 'Confirm',\r\n      cancelButtonText: 'Cancel',\r\n      type: 'success'\r\n    }\r\n  ).then(async () => {\r\n    try {\r\n      await request({\r\n        url: `/admin/reservations/${row.id}/confirm`,\r\n        method: 'put'\r\n      })\r\n      ElMessage.success('Reservation confirmed')\r\n      fetchReservationList()\r\n    } catch (error) {\r\n      console.error('Failed to confirm reservation:', error)\r\n    }\r\n  }).catch(() => {\r\n    // User cancelled operation, no action needed\r\n  })\r\n}\r\n\r\n// Reject reservation\r\nconst handleReject = (row) => {\r\n  ElMessageBox.prompt(\r\n    'Please enter rejection reason',\r\n    'Reject Reservation',\r\n    {\r\n      confirmButtonText: 'Confirm',\r\n      cancelButtonText: 'Cancel',\r\n      inputPlaceholder: 'Please enter rejection reason',\r\n      type: 'warning'\r\n    }\r\n  ).then(async ({ value }) => {\r\n    try {\r\n      await request({\r\n        url: `/admin/reservations/${row.id}/reject`,\r\n        method: 'put',\r\n        data: { reason: value }\r\n      })\r\n      ElMessage.success('Reservation rejected')\r\n      fetchReservationList()\r\n    } catch (error) {\r\n      console.error('Failed to reject reservation:', error)\r\n    }\r\n  }).catch(() => {\r\n    // User cancelled input, no action needed\r\n  })\r\n}\r\n\r\n// Mark reservation as completed\r\nconst handleComplete = (row) => {\r\n  ElMessageBox.confirm(\r\n    'Are you sure you want to mark this reservation as completed?',\r\n    'Complete Operation',\r\n    {\r\n      confirmButtonText: 'Confirm',\r\n      cancelButtonText: 'Cancel',\r\n      type: 'info'\r\n    }\r\n  ).then(async () => {\r\n    try {\r\n      await request({\r\n        url: `/admin/reservations/${row.id}/complete`,\r\n        method: 'put'\r\n      })\r\n      ElMessage.success('Reservation marked as completed')\r\n      fetchReservationList()\r\n    } catch (error) {\r\n      console.error('Failed to mark reservation as completed:', error)\r\n    }\r\n  }).catch(() => {\r\n    // User cancelled operation, no action needed\r\n  })\r\n}\r\n\r\n// View reservation details\r\nconst handleViewDetails = (row) => {\r\n  selectedReservation.value = { ...row }\r\n  detailDialogVisible.value = true\r\n}\r\n\r\n// Details dialog actions\r\nconst confirmReservation = () => {\r\n  handleConfirm(selectedReservation.value)\r\n  detailDialogVisible.value = false\r\n}\r\n\r\nconst rejectReservation = () => {\r\n  handleReject(selectedReservation.value)\r\n  detailDialogVisible.value = false\r\n}\r\n\r\nconst completeReservation = () => {\r\n  handleComplete(selectedReservation.value)\r\n  detailDialogVisible.value = false\r\n}\r\n\r\n// Close details dialog\r\nconst closeDetailDialog = (e) => {\r\n  // Only close if clicking background\r\n  if (e.target.classList.contains('detail-dialog-overlay')) {\r\n    detailDialogVisible.value = false\r\n  }\r\n}\r\n\r\n// Dropdown actions\r\nconst toggleStatusSelect = () => {\r\n  statusSelectVisible.value = !statusSelectVisible.value\r\n  restaurantSelectVisible.value = false\r\n}\r\n\r\nconst toggleRestaurantSelect = () => {\r\n  restaurantSelectVisible.value = !restaurantSelectVisible.value\r\n  statusSelectVisible.value = false\r\n}\r\n\r\nconst toggleStatus = (status) => {\r\n  const index = searchForm.status.indexOf(status)\r\n  if (index === -1) {\r\n    searchForm.status.push(status)\r\n  } else {\r\n    searchForm.status.splice(index, 1)\r\n  }\r\n}\r\n\r\nconst removeStatus = (index) => {\r\n  searchForm.status.splice(index, 1)\r\n}\r\n\r\nconst selectRestaurant = (id) => {\r\n  searchForm.restaurantId = id\r\n}\r\n\r\n// Close dropdown click outside listener\r\nconst handleOutsideClick = (e) => {\r\n  const statusSelect = document.querySelector('.custom-select')\r\n  const restaurantSelect = document.querySelectorAll('.custom-select')[1]\r\n  \r\n  if (statusSelect && !statusSelect.contains(e.target)) {\r\n    statusSelectVisible.value = false\r\n  }\r\n  \r\n  if (restaurantSelect && !restaurantSelect.contains(e.target)) {\r\n    restaurantSelectVisible.value = false\r\n  }\r\n}\r\n\r\n// Initialize\r\nonMounted(() => {\r\n  // Get user info from localStorage\r\n  try {\r\n    const userInfoStr = localStorage.getItem('userInfo')\r\n    if (userInfoStr) {\r\n      const userInfo = JSON.parse(userInfoStr)\r\n      userRole.value = Number(userInfo.role || 0)\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to get user info:', error)\r\n  }\r\n  \r\n  // If admin, get restaurant options\r\n  if (userRole.value === 0) {\r\n    fetchRestaurantOptions()\r\n  }\r\n  \r\n  // Get reservation list\r\n  fetchReservationList()\r\n  \r\n  // Add click outside to close dropdown listener\r\n  document.addEventListener('click', handleOutsideClick)\r\n})\r\n\r\n// Component unmount remove event listener\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleOutsideClick)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.reservation-manage-container {\r\n  padding: 20px;\r\n  min-height: 100vh;\r\n  background-color: #e6e7ee;\r\n  background-image: linear-gradient(135deg, #e6e7ee 0%, #e6e7ee 100%);\r\n  font-family: 'PingFang SC', 'Microsoft YaHei', sans-serif;\r\n}\r\n\r\n/* Neomorphic card */\r\n.neomorphic-card {\r\n  background: #e6e7ee;\r\n  border-radius: 24px;\r\n  padding: 24px;\r\n  margin-bottom: 24px;\r\n  box-shadow: 8px 8px 16px #c8cdd5,\r\n              -8px -8px 16px #ffffff;\r\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n  border: 1px solid rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.neomorphic-card:hover {\r\n  transform: translateY(-3px);\r\n}\r\n\r\n/* Search part */\r\n.search-section {\r\n  margin-bottom: 28px;\r\n}\r\n\r\n.search-form {\r\n  display: flex;\r\n  gap: 16px;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n}\r\n\r\n/* Custom buttons */\r\n.search-btn, .reset-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  border-radius: 16px;\r\n  padding: 12px 28px;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  letter-spacing: 0.5px;\r\n  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n  border: none;\r\n  cursor: pointer;\r\n  color: #fff;\r\n  box-shadow: 6px 6px 12px #c1c7d0,\r\n              -6px -6px 12px #ffffff;\r\n}\r\n\r\n.search-btn {\r\n  background: linear-gradient(135deg, #4d78ef, #5a6bed);\r\n}\r\n\r\n.reset-btn {\r\n  background: linear-gradient(135deg, #f0ad4e, #f39c12);\r\n}\r\n\r\n.search-btn:hover, .reset-btn:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 8px 8px 16px #c1c7d0,\r\n              -8px -8px 16px #ffffff;\r\n}\r\n\r\n.search-btn:active, .reset-btn:active {\r\n  transform: translateY(1px);\r\n  box-shadow: inset 4px 4px 8px rgba(0, 0, 0, 0.1),\r\n              inset -4px -4px 8px rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n/* Table part styles */\r\n.table-section {\r\n  min-height: 500px;\r\n  overflow: hidden;\r\n}\r\n\r\n.custom-table {\r\n  width: 100%;\r\n  border-collapse: separate;\r\n  border-spacing: 0;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.custom-table thead th {\r\n  background-color: #e6e7ee;\r\n  color: #5e6687;\r\n  font-weight: 600;\r\n  padding: 16px;\r\n  text-align: center;\r\n  border-bottom: 2px solid rgba(195, 196, 202, 0.3);\r\n  letter-spacing: 0.5px;\r\n  font-size: 15px;\r\n}\r\n\r\n.custom-table tbody tr {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.custom-table tbody tr:nth-child(odd) {\r\n  background-color: #e6e7ee;\r\n}\r\n\r\n.custom-table tbody tr:nth-child(even) {\r\n  background-color: #edf2fa;\r\n}\r\n\r\n.custom-table tbody tr:hover {\r\n  background-color: #f0f4fa;\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.custom-table tbody td {\r\n  padding: 14px;\r\n  border-bottom: 1px solid rgba(195, 196, 202, 0.2);\r\n  color: #5e6687;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\n/* Pagination styles */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  margin-top: 24px;\r\n  gap: 10px;\r\n}\r\n\r\n.pagination-info {\r\n  margin-right: 20px;\r\n  color: #5e6687;\r\n  font-size: 14px;\r\n}\r\n\r\n.pagination-btn {\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  background-color: #e6e7ee;\r\n  color: #5e6687;\r\n  font-weight: 600;\r\n  box-shadow: 4px 4px 8px #c1c7d0,\r\n              -4px -4px 8px #ffffff;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.pagination-btn:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 6px 6px 10px #c1c7d0,\r\n              -6px -6px 10px #ffffff;\r\n}\r\n\r\n.pagination-btn.active {\r\n  background: linear-gradient(135deg, #4d78ef, #5a6bed);\r\n  color: white;\r\n  box-shadow: inset 2px 2px 4px rgba(0, 0, 0, 0.1),\r\n              inset -2px -2px 4px rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.pagination-btn:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Operation buttons */\r\n.operation-buttons {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 12px;\r\n}\r\n\r\n.action-btn {\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #e6e7ee;\r\n  color: #5e6687;\r\n  border: none;\r\n  cursor: pointer;\r\n  box-shadow: 4px 4px 8px #c1c7d0,\r\n              -4px -4px 8px #ffffff;\r\n  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n}\r\n\r\n.action-btn:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 6px 6px 12px #c1c7d0,\r\n              -6px -6px 12px #ffffff;\r\n}\r\n\r\n.action-btn.confirm {\r\n  background: linear-gradient(135deg, #66bb6a, #4caf50);\r\n  color: white;\r\n}\r\n\r\n.action-btn.reject {\r\n  background: linear-gradient(135deg, #ef5350, #f44336);\r\n  color: white;\r\n}\r\n\r\n.action-btn.complete {\r\n  background: linear-gradient(135deg, #ffb74d, #ff9800);\r\n  color: white;\r\n}\r\n\r\n.action-btn.view {\r\n  background: linear-gradient(135deg, #64b5f6, #2196f3);\r\n  color: white;\r\n}\r\n\r\n/* Status tag */\r\n.status-tag {\r\n  display: inline-block;\r\n  padding: 6px 12px;\r\n  border-radius: 12px;\r\n  font-weight: 600;\r\n  font-size: 13px;\r\n  box-shadow: 2px 2px 5px #c1c7d0,\r\n              -2px -2px 5px #ffffff;\r\n}\r\n\r\n.status-tag.info {\r\n  background: linear-gradient(135deg, #90caf9, #64b5f6);\r\n  color: white;\r\n}\r\n\r\n.status-tag.warning {\r\n  background: linear-gradient(135deg, #ffe082, #ffc107);\r\n  color: white;\r\n}\r\n\r\n.status-tag.success {\r\n  background: linear-gradient(135deg, #a5d6a7, #66bb6a);\r\n  color: white;\r\n}\r\n\r\n.status-tag.primary {\r\n  background: linear-gradient(135deg, #81d4fa, #29b6f6);\r\n  color: white;\r\n}\r\n\r\n.status-tag.danger {\r\n  background: linear-gradient(135deg, #ef9a9a, #e57373);\r\n  color: white;\r\n}\r\n\r\n/* Details dialog */\r\n.detail-dialog-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999;\r\n  backdrop-filter: blur(6px);\r\n}\r\n\r\n.detail-dialog {\r\n  background-color: #e6e7ee;\r\n  border-radius: 24px;\r\n  padding: 0;\r\n  width: 550px;\r\n  transform: translateY(0);\r\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n  max-height: 90vh;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.detail-dialog-header {\r\n  background-color: #e6e7ee;\r\n  padding: 20px 24px;\r\n  border-bottom: 1px solid rgba(195, 196, 202, 0.2);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.detail-dialog-title {\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: #5e6687;\r\n  margin: 0;\r\n}\r\n\r\n.detail-dialog-close {\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #e6e7ee;\r\n  color: #5e6687;\r\n  border: none;\r\n  cursor: pointer;\r\n  box-shadow: 4px 4px 8px #c1c7d0,\r\n              -4px -4px 8px #ffffff;\r\n  transition: all 0.3s ease;\r\n  font-size: 18px;\r\n}\r\n\r\n.detail-dialog-close:hover {\r\n  transform: rotate(90deg);\r\n  box-shadow: 6px 6px 12px #c1c7d0,\r\n              -6px -6px 12px #ffffff;\r\n}\r\n\r\n.detail-dialog-body {\r\n  padding: 24px;\r\n  overflow-y: auto;\r\n  flex: 1;\r\n}\r\n\r\n.detail-dialog-footer {\r\n  padding: 16px 24px 24px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 16px;\r\n  border-top: 1px solid rgba(195, 196, 202, 0.2);\r\n}\r\n\r\n.dialog-btn {\r\n  padding: 12px 24px;\r\n  border-radius: 16px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n  border: none;\r\n  box-shadow: 4px 4px 8px #c1c7d0,\r\n              -4px -4px 8px #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 6px;\r\n}\r\n\r\n.dialog-btn.cancel {\r\n  background-color: #e6e7ee;\r\n  color: #5e6687;\r\n}\r\n\r\n.dialog-btn.confirm {\r\n  background: linear-gradient(135deg, #66bb6a, #4caf50);\r\n  color: white;\r\n}\r\n\r\n.dialog-btn.reject {\r\n  background: linear-gradient(135deg, #ef5350, #f44336);\r\n  color: white;\r\n}\r\n\r\n.dialog-btn.complete {\r\n  background: linear-gradient(135deg, #ffb74d, #ff9800);\r\n  color: white;\r\n}\r\n\r\n.dialog-btn:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 6px 6px 12px #c1c7d0,\r\n              -6px -6px 12px #ffffff;\r\n}\r\n\r\n/* Reservation details styles */\r\n.reservation-detail {\r\n  padding: 10px;\r\n}\r\n\r\n.detail-row {\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n  align-items: center;\r\n  background: #edf2fa;\r\n  padding: 12px 16px;\r\n  border-radius: 12px;\r\n  box-shadow: inset 2px 2px 5px #c1c7d0,\r\n              inset -2px -2px 5px #ffffff;\r\n}\r\n\r\n.detail-label {\r\n  width: 110px;\r\n  font-weight: 600;\r\n  color: #5e6687;\r\n}\r\n\r\n.detail-value {\r\n  flex: 1;\r\n  color: #5e6687;\r\n}\r\n\r\n/* Custom form elements */\r\n.custom-select {\r\n  position: relative;\r\n  min-width: 200px;\r\n}\r\n\r\n.select-selected {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 12px 16px;\r\n  background-color: #e6e7ee;\r\n  border-radius: 16px;\r\n  cursor: pointer;\r\n  box-shadow: inset 2px 2px 5px #c1c7d0,\r\n              inset -2px -2px 5px #ffffff;\r\n  color: #5e6687;\r\n  border: 1px solid transparent;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.select-selected.active {\r\n  box-shadow: inset 4px 4px 8px #c1c7d0,\r\n              inset -4px -4px 8px #ffffff;\r\n  border-color: #4d78ef;\r\n}\r\n\r\n.select-selected:hover {\r\n  box-shadow: inset 3px 3px 6px #c1c7d0,\r\n              inset -3px -3px 6px #ffffff;\r\n}\r\n\r\n.select-arrow {\r\n  border: solid #5e6687;\r\n  border-width: 0 2px 2px 0;\r\n  display: inline-block;\r\n  padding: 3px;\r\n  margin-left: 10px;\r\n  transform: rotate(45deg);\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.select-selected.active .select-arrow {\r\n  transform: rotate(-135deg);\r\n}\r\n\r\n.select-items {\r\n  position: absolute;\r\n  background-color: #e6e7ee;\r\n  top: calc(100% + 10px);\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 99;\r\n  border-radius: 16px;\r\n  box-shadow: 6px 6px 12px #c1c7d0,\r\n              -6px -6px 12px #ffffff;\r\n  max-height: 250px;\r\n  opacity: 0;\r\n  overflow-x: auto;\r\n  transform: translateY(-10px);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.select-items.show {\r\n  opacity: 1;\r\n  visibility: visible;\r\n  transform: translateY(0);\r\n}\r\n\r\n.select-item {\r\n  padding: 12px 16px;\r\n  cursor: pointer;\r\n  color: #5e6687;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.select-item:hover {\r\n  background-color: #edf2fa;\r\n}\r\n\r\n.select-item.selected {\r\n  background-color: rgba(77, 120, 239, 0.1);\r\n  color: #4d78ef;\r\n  font-weight: 600;\r\n}\r\n\r\n.select-tag {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  background: rgba(77, 120, 239, 0.1);\r\n  color: #4d78ef;\r\n  padding: 4px 8px;\r\n  border-radius: 8px;\r\n  margin-right: 5px;\r\n  font-size: 13px;\r\n}\r\n\r\n.select-tag-close {\r\n  margin-left: 5px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.custom-datepicker {\r\n  position: relative;\r\n}\r\n\r\n.datepicker-input {\r\n  width: 100%;\r\n  padding: 12px 16px;\r\n  background-color: #e6e7ee;\r\n  border-radius: 16px;\r\n  box-shadow: inset 2px 2px 5px #c1c7d0,\r\n              inset -2px -2px 5px #ffffff;\r\n  border: 1px solid transparent;\r\n  color: #5e6687;\r\n  font-size: 14px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.datepicker-input:focus {\r\n  outline: none;\r\n  box-shadow: inset 4px 4px 8px #c1c7d0,\r\n              inset -4px -4px 8px #ffffff;\r\n  border-color: #4d78ef;\r\n}\r\n\r\n.datepicker-icon {\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #5e6687;\r\n}\r\n\r\n/* Loading animation */\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 300px;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  border: 3px solid rgba(77, 120, 239, 0.2);\r\n  border-top-color: #4d78ef;\r\n  animation: spin 1s infinite linear;\r\n}\r\n\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n/* Dark mode adaptation */\r\n@media (prefers-color-scheme: dark) {\r\n  .reservation-manage-container {\r\n    background-color: #2d3748;\r\n    background-image: linear-gradient(135deg, #2d3748 0%, #1a202c 100%);\r\n  }\r\n\r\n  .neomorphic-card {\r\n    background: #2d3748;\r\n    box-shadow: 8px 8px 16px #202632,\r\n                -8px -8px 16px #3a485e;\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  .neomorphic-card:hover {\r\n    box-shadow: 10px 10px 20px #1a202c,\r\n                -10px -10px 20px #3a485e;\r\n  }\r\n\r\n  .custom-table thead th {\r\n    background-color: #2d3748;\r\n    color: #e2e8f0;\r\n    border-bottom: 2px solid rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  .custom-table tbody tr:nth-child(odd) {\r\n    background-color: #2d3748;\r\n  }\r\n\r\n  .custom-table tbody tr:nth-child(even) {\r\n    background-color: #2a3243;\r\n  }\r\n\r\n  .custom-table tbody tr:hover {\r\n    background-color: #323c52;\r\n  }\r\n\r\n  .custom-table tbody td {\r\n    color: #e2e8f0;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  .pagination-info {\r\n    color: #e2e8f0;\r\n  }\r\n\r\n  .pagination-btn {\r\n    background-color: #2d3748;\r\n    color: #e2e8f0;\r\n    box-shadow: 4px 4px 8px #202632,\r\n                -4px -4px 8px #3a485e;\r\n  }\r\n\r\n  .pagination-btn:hover {\r\n    box-shadow: 6px 6px 10px #202632,\r\n                -6px -6px 10px #3a485e;\r\n  }\r\n\r\n  .action-btn {\r\n    background-color: #2d3748;\r\n    color: #e2e8f0;\r\n    box-shadow: 4px 4px 8px #202632,\r\n                -4px -4px 8px #3a485e;\r\n  }\r\n\r\n  .action-btn:hover {\r\n    box-shadow: 6px 6px 12px #202632,\r\n                -6px -6px 12px #3a485e;\r\n  }\r\n\r\n  .detail-dialog {\r\n    background-color: #2d3748;\r\n    box-shadow: 10px 10px 20px #202632,\r\n                -10px -10px 20px #3a485e;\r\n  }\r\n\r\n  .detail-dialog-header {\r\n    background-color: #2d3748;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  .detail-dialog-title {\r\n    color: #e2e8f0;\r\n  }\r\n\r\n  .detail-dialog-close {\r\n    background-color: #2d3748;\r\n    color: #e2e8f0;\r\n    box-shadow: 4px 4px 8px #202632,\r\n                -4px -4px 8px #3a485e;\r\n  }\r\n\r\n  .detail-dialog-close:hover {\r\n    box-shadow: 6px 6px 12px #202632,\r\n                -6px -6px 12px #3a485e;\r\n  }\r\n\r\n  .detail-dialog-footer {\r\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  .dialog-btn {\r\n    box-shadow: 4px 4px 8px #202632,\r\n                -4px -4px 8px #3a485e;\r\n  }\r\n\r\n  .dialog-btn.cancel {\r\n    background-color: #2d3748;\r\n    color: #e2e8f0;\r\n  }\r\n\r\n  .dialog-btn:hover {\r\n    box-shadow: 6px 6px 12px #202632,\r\n                -6px -6px 12px #3a485e;\r\n  }\r\n\r\n  .detail-row {\r\n    background: #2a3243;\r\n    box-shadow: inset 2px 2px 5px #202632,\r\n                inset -2px -2px 5px #3a485e;\r\n  }\r\n\r\n  .detail-label {\r\n    color: #e2e8f0;\r\n  }\r\n\r\n  .detail-value {\r\n    color: #e2e8f0;\r\n  }\r\n\r\n  .select-selected {\r\n    background-color: #2d3748;\r\n    box-shadow: inset 2px 2px 5px #202632,\r\n                inset -2px -2px 5px #3a485e;\r\n    color: #e2e8f0;\r\n  }\r\n\r\n  .select-selected.active {\r\n    box-shadow: inset 4px 4px 8px #202632,\r\n                inset -4px -4px 8px #3a485e;\r\n  }\r\n\r\n  .select-selected:hover {\r\n    box-shadow: inset 3px 3px 6px #202632,\r\n                inset -3px -3px 6px #3a485e;\r\n  }\r\n\r\n  .select-arrow {\r\n    border-color: #e2e8f0;\r\n  }\r\n\r\n  .select-items {\r\n    background-color: #2d3748;\r\n    box-shadow: 6px 6px 12px #202632,\r\n                -6px -6px 12px #3a485e;\r\n  }\r\n\r\n  .select-item {\r\n    color: #e2e8f0;\r\n  }\r\n\r\n  .select-item:hover {\r\n    background-color: #323c52;\r\n  }\r\n\r\n  .datepicker-input {\r\n    background-color: #2d3748;\r\n    box-shadow: inset 2px 2px 5px #202632,\r\n                inset -2px -2px 5px #3a485e;\r\n    color: #e2e8f0;\r\n  }\r\n\r\n  .datepicker-input:focus {\r\n    box-shadow: inset 4px 4px 8px #202632,\r\n                inset -4px -4px 8px #3a485e;\r\n  }\r\n\r\n  .datepicker-icon {\r\n    color: #e2e8f0;\r\n  }\r\n\r\n  .loading-spinner {\r\n    border-color: rgba(77, 120, 239, 0.2);\r\n    border-top-color: #4d78ef;\r\n  }\r\n}\r\n\r\n/* Responsive adaptation */\r\n@media (max-width: 768px) {\r\n  .search-form {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    gap: 12px;\r\n  }\r\n\r\n  .search-btn, .reset-btn {\r\n    width: 100%;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .neomorphic-card {\r\n    padding: 16px;\r\n    border-radius: 16px;\r\n  }\r\n  \r\n  .custom-table {\r\n    display: block;\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .custom-table thead th,\r\n  .custom-table tbody td {\r\n    padding: 10px;\r\n  }\r\n\r\n  .detail-dialog {\r\n    width: 90%;\r\n    max-width: 500px;\r\n  }\r\n  \r\n  .action-btn {\r\n    width: 32px;\r\n    height: 32px;\r\n  }\r\n  \r\n  .operation-buttons {\r\n    gap: 8px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
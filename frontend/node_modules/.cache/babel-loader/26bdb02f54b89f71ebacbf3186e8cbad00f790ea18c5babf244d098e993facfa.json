{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard-container\"\n};\nconst _hoisted_2 = {\n  class: \"stats-section neomorphic\"\n};\nconst _hoisted_3 = {\n  class: \"section-header\"\n};\nconst _hoisted_4 = {\n  class: \"stat-card neomorphic-inset\"\n};\nconst _hoisted_5 = {\n  class: \"stat-icon restaurant-icon neomorphic-float\"\n};\nconst _hoisted_6 = {\n  class: \"stat-content\"\n};\nconst _hoisted_7 = {\n  class: \"stat-value\"\n};\nconst _hoisted_8 = {\n  class: \"stat-card neomorphic-inset\"\n};\nconst _hoisted_9 = {\n  class: \"stat-icon reservation-icon neomorphic-float\"\n};\nconst _hoisted_10 = {\n  class: \"stat-content\"\n};\nconst _hoisted_11 = {\n  class: \"stat-value\"\n};\nconst _hoisted_12 = {\n  class: \"stat-card neomorphic-inset\"\n};\nconst _hoisted_13 = {\n  class: \"stat-icon weekly-icon neomorphic-float\"\n};\nconst _hoisted_14 = {\n  class: \"stat-content\"\n};\nconst _hoisted_15 = {\n  class: \"stat-value\"\n};\nconst _hoisted_16 = {\n  class: \"stat-card neomorphic-inset\"\n};\nconst _hoisted_17 = {\n  class: \"stat-icon total-icon neomorphic-float\"\n};\nconst _hoisted_18 = {\n  class: \"stat-content\"\n};\nconst _hoisted_19 = {\n  class: \"stat-value\"\n};\nconst _hoisted_20 = {\n  class: \"charts-section neomorphic\"\n};\nconst _hoisted_21 = {\n  class: \"section-header\"\n};\nconst _hoisted_22 = {\n  class: \"chart-box neomorphic-inset\"\n};\nconst _hoisted_23 = {\n  class: \"chart-container\",\n  ref: \"reservationChartDom\"\n};\nconst _hoisted_24 = {\n  class: \"chart-box neomorphic-inset\"\n};\nconst _hoisted_25 = {\n  class: \"chart-container\",\n  ref: \"restaurantChartDom\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"System Overview\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"small\",\n    class: \"neomorphic-button\",\n    onClick: $setup.refreshStats\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode($setup[\"Refresh\"])]),\n      _: 1 /* STABLE */\n    }), _cache[0] || (_cache[0] = _createTextVNode(\" Refresh Data \"))]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_el_row, {\n    gutter: 20,\n    class: \"stats-row\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 6,\n      class: \"stat-col\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_icon, {\n        size: 24\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"KnifeFork\"])]),\n        _: 1 /* STABLE */\n      })]), _createElementVNode(\"div\", _hoisted_6, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n        class: \"stat-title\"\n      }, \"Total Restaurants\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, _toDisplayString($setup.statisticsData.totalRestaurants), 1 /* TEXT */), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n        class: \"stat-desc\"\n      }, \"Active Restaurants\", -1 /* HOISTED */))])])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 6,\n      class: \"stat-col\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_el_icon, {\n        size: 24\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"Calendar\"])]),\n        _: 1 /* STABLE */\n      })]), _createElementVNode(\"div\", _hoisted_10, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n        class: \"stat-title\"\n      }, \"Pending Reservations\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_11, _toDisplayString($setup.statisticsData.pendingReservations), 1 /* TEXT */), _cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n        class: \"stat-desc\"\n      }, \"Reservations to Confirm\", -1 /* HOISTED */))])])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 6,\n      class: \"stat-col\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createVNode(_component_el_icon, {\n        size: 24\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"Calendar\"])]),\n        _: 1 /* STABLE */\n      })]), _createElementVNode(\"div\", _hoisted_14, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n        class: \"stat-title\"\n      }, \"Weekly Reservations\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_15, _toDisplayString($setup.statisticsData.weeklyReservations), 1 /* TEXT */), _cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n        class: \"stat-desc\"\n      }, \"Total Reservations in Past 7 Days\", -1 /* HOISTED */))])])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 6,\n      class: \"stat-col\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createVNode(_component_el_icon, {\n        size: 24\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"Document\"])]),\n        _: 1 /* STABLE */\n      })]), _createElementVNode(\"div\", _hoisted_18, [_cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n        class: \"stat-title\"\n      }, \"Total Reservations\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_19, _toDisplayString($setup.statisticsData.totalReservations), 1 /* TEXT */), _cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n        class: \"stat-desc\"\n      }, \"Cumulative Reservations\", -1 /* HOISTED */))])])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"Data Statistics\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"small\",\n    class: \"neomorphic-button\",\n    onClick: $setup.refreshStats\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode($setup[\"Refresh\"])]),\n      _: 1 /* STABLE */\n    }), _cache[10] || (_cache[10] = _createTextVNode(\" Refresh Charts \"))]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      xs: 24,\n      md: 12\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_22, [_cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n        class: \"chart-title\"\n      }, \"Reservation Statistics (Last 7 Days)\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_23, null, 512 /* NEED_PATCH */)])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      md: 12\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_24, [_cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n        class: \"chart-title\"\n      }, \"Restaurant Statistics (Last 7 Days)\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_25, null, 512 /* NEED_PATCH */)])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_button","type","size","onClick","$setup","refreshStats","default","_withCtx","_component_el_icon","_","_createTextVNode","_component_el_row","gutter","_component_el_col","xs","sm","md","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","statisticsData","totalRestaurants","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","pendingReservations","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","weeklyReservations","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","totalReservations","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25"],"sources":["/Users/taoyuxuan/Documents/RestaurantReservation/qd/src/views/admin/Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"stats-section neomorphic\">\r\n      <div class=\"section-header\">\r\n        <h2>System Overview</h2>\r\n        <el-button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          class=\"neomorphic-button\"\r\n          @click=\"refreshStats\"\r\n        >\r\n          <el-icon><Refresh /></el-icon> Refresh Data\r\n        </el-button>\r\n      </div>\r\n\r\n      <el-row :gutter=\"20\" class=\"stats-row\">\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\" class=\"stat-col\">\r\n          <div class=\"stat-card neomorphic-inset\">\r\n            <div class=\"stat-icon restaurant-icon neomorphic-float\">\r\n              <el-icon :size=\"24\"><KnifeFork /></el-icon>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-title\">Total Restaurants</div>\r\n              <div class=\"stat-value\">\r\n                {{ statisticsData.totalRestaurants }}\r\n              </div>\r\n              <div class=\"stat-desc\">Active Restaurants</div>\r\n            </div>\r\n          </div>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\" class=\"stat-col\">\r\n          <div class=\"stat-card neomorphic-inset\">\r\n            <div class=\"stat-icon reservation-icon neomorphic-float\">\r\n              <el-icon :size=\"24\"><Calendar /></el-icon>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-title\">Pending Reservations</div>\r\n              <div class=\"stat-value\">\r\n                {{ statisticsData.pendingReservations }}\r\n              </div>\r\n              <div class=\"stat-desc\">Reservations to Confirm</div>\r\n            </div>\r\n          </div>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\" class=\"stat-col\">\r\n          <div class=\"stat-card neomorphic-inset\">\r\n            <div class=\"stat-icon weekly-icon neomorphic-float\">\r\n              <el-icon :size=\"24\"><Calendar /></el-icon>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-title\">Weekly Reservations</div>\r\n              <div class=\"stat-value\">\r\n                {{ statisticsData.weeklyReservations }}\r\n              </div>\r\n              <div class=\"stat-desc\">Total Reservations in Past 7 Days</div>\r\n            </div>\r\n          </div>\r\n        </el-col>\r\n\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\" class=\"stat-col\">\r\n          <div class=\"stat-card neomorphic-inset\">\r\n            <div class=\"stat-icon total-icon neomorphic-float\">\r\n              <el-icon :size=\"24\"><Document /></el-icon>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-title\">Total Reservations</div>\r\n              <div class=\"stat-value\">\r\n                {{ statisticsData.totalReservations }}\r\n              </div>\r\n              <div class=\"stat-desc\">Cumulative Reservations</div>\r\n            </div>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n\r\n    <div class=\"charts-section neomorphic\">\r\n      <div class=\"section-header\">\r\n        <h2>Data Statistics</h2>\r\n        <el-button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          class=\"neomorphic-button\"\r\n          @click=\"refreshStats\"\r\n        >\r\n          <el-icon><Refresh /></el-icon> Refresh Charts\r\n        </el-button>\r\n      </div>\r\n\r\n      <el-row :gutter=\"20\">\r\n        <el-col :xs=\"24\" :md=\"12\">\r\n          <div class=\"chart-box neomorphic-inset\">\r\n            <div class=\"chart-title\">Reservation Statistics (Last 7 Days)</div>\r\n            <div class=\"chart-container\" ref=\"reservationChartDom\"></div>\r\n          </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :md=\"12\">\r\n          <div class=\"chart-box neomorphic-inset\">\r\n            <div class=\"chart-title\">Restaurant Statistics (Last 7 Days)</div>\r\n            <div class=\"chart-container\" ref=\"restaurantChartDom\"></div>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, onBeforeUnmount } from \"vue\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport {\r\n  KnifeFork,\r\n  Calendar,\r\n  User,\r\n  Document,\r\n  Setting,\r\n  DataLine,\r\n  Refresh,\r\n} from \"@element-plus/icons-vue\";\r\nimport request from \"@/utils/request\";\r\nimport * as echarts from \"echarts\";\r\n\r\n// Get user information\r\nconst userInfo = ref(JSON.parse(localStorage.getItem(\"userInfo\") || \"{}\"));\r\nconst username = computed(() => userInfo.value.name || \"Admin\");\r\n\r\n// Statistics data\r\nconst statisticsData = ref({\r\n  totalRestaurants: 0,\r\n  pendingReservations: 0,\r\n  weeklyReservations: 0,\r\n  totalReservations: 0,\r\n});\r\n\r\n// Reservation chart data\r\nconst reservationData = ref({\r\n  dailyReservations: [],\r\n  statusCount: {},\r\n});\r\n\r\n// Restaurant chart data\r\nconst restaurantData = ref({\r\n  dailyRestaurants: [],\r\n  statusCount: {},\r\n});\r\n\r\n// Current time and day of week\r\nconst currentTime = computed(() => {\r\n  const now = new Date();\r\n  return now.toLocaleDateString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n});\r\n\r\nconst dayOfWeek = computed(() => {\r\n  const now = new Date();\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  return days[now.getDay()];\r\n});\r\n\r\n// Chart instances and DOM references\r\nconst reservationChartDom = ref(null);\r\nconst restaurantChartDom = ref(null);\r\nlet reservationChart = null;\r\nlet restaurantChart = null;\r\n\r\n// Get statistics data\r\nconst fetchStatistics = async () => {\r\n  try {\r\n    const res = await request({\r\n      url: \"/admin/statistics/overview\",\r\n      method: \"get\",\r\n    });\r\n\r\n    if (res.code === 200) {\r\n      statisticsData.value = res.data;\r\n      ElMessage.success(\"Data updated\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch statistics:\", error);\r\n    ElMessage.error(\"Failed to fetch statistics, please try again later\");\r\n\r\n    // Use mock data (development environment)\r\n    statisticsData.value = {\r\n      totalRestaurants: 125,\r\n      pendingReservations: 15,\r\n      weeklyReservations: 78,\r\n      totalReservations: 1200,\r\n    };\r\n  }\r\n};\r\n\r\n// Get reservation statistics\r\nconst fetchReservationData = async () => {\r\n  try {\r\n    const res = await request({\r\n      url: \"/admin/statistics/reservations\",\r\n      method: \"get\",\r\n    });\r\n\r\n    if (res.code === 200) {\r\n      reservationData.value = res.data;\r\n      renderReservationChart();\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch reservation statistics:\", error);\r\n    renderReservationChart();\r\n  }\r\n};\r\n\r\n// Get restaurant statistics\r\nconst fetchRestaurantData = async () => {\r\n  try {\r\n    const res = await request({\r\n      url: \"/admin/statistics/restaurants\",\r\n      method: \"get\",\r\n    });\r\n\r\n    if (res.code === 200) {\r\n      restaurantData.value = res.data;\r\n      renderRestaurantChart();\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch restaurant statistics:\", error);\r\n    renderRestaurantChart();\r\n  }\r\n};\r\n\r\n// Render reservation statistics chart\r\nconst renderReservationChart = () => {\r\n  if (!reservationChartDom.value) return;\r\n\r\n  const data = reservationData.value;\r\n  if (!data || !data.dailyReservations || data.dailyReservations.length === 0)\r\n    return;\r\n\r\n  // Process dates and data\r\n  const dates = data.dailyReservations.map((item) => item.date);\r\n  const totalCounts = data.dailyReservations.map((item) => item.count);\r\n\r\n  // Create status data series\r\n  const statusSeries = Object.keys(data.statusCount).map((status) => {\r\n    const statusData = data.dailyReservations.map(\r\n      (item) => item.statusCount[status] || 0\r\n    );\r\n    const colors = {\r\n      \"Pending\": \"#f7c34a\",\r\n      \"Confirmed\": \"#4af7a1\",\r\n      \"Completed\": \"#67c23a\",\r\n      \"Cancelled\": \"#f56c6c\",\r\n      \"Rejected\": \"#909399\",\r\n    };\r\n\r\n    return {\r\n      name: status,\r\n      type: \"line\",\r\n      data: statusData,\r\n      smooth: true,\r\n      symbol: \"circle\",\r\n      symbolSize: 6,\r\n      lineStyle: {\r\n        width: 2,\r\n        color: colors[status] || \"#909399\",\r\n      },\r\n      itemStyle: {\r\n        color: colors[status] || \"#909399\",\r\n      },\r\n    };\r\n  });\r\n\r\n  // Initialize chart\r\n  if (reservationChart) {\r\n    reservationChart.dispose();\r\n  }\r\n\r\n  if (reservationChartDom.value) {\r\n    reservationChart = echarts.init(\r\n      reservationChartDom.value,\r\n      isDarkMode() ? \"dark\" : null\r\n    );\r\n\r\n    // Configure options\r\n    const option = {\r\n      tooltip: {\r\n        trigger: \"axis\",\r\n        axisPointer: {\r\n          type: \"cross\",\r\n          label: {\r\n            backgroundColor: \"#6a7985\",\r\n          },\r\n        },\r\n      },\r\n      legend: {\r\n        data: [\"Total Reservations\", ...Object.keys(data.statusCount)],\r\n        bottom: \"0%\",\r\n      },\r\n      grid: {\r\n        left: \"3%\",\r\n        right: \"4%\",\r\n        bottom: \"15%\",\r\n        top: \"3%\",\r\n        containLabel: true,\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        boundaryGap: false,\r\n        data: dates,\r\n        axisLabel: {\r\n          formatter: (value) => {\r\n            const date = new Date(value);\r\n            return `${date.getMonth() + 1}/${date.getDate()}`;\r\n          },\r\n        },\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n      },\r\n      series: [\r\n        {\r\n          name: \"Total Reservations\",\r\n          type: \"line\",\r\n          smooth: true,\r\n          lineStyle: {\r\n            width: 3,\r\n            color: \"#4a6cf7\",\r\n          },\r\n          itemStyle: {\r\n            color: \"#4a6cf7\",\r\n          },\r\n          symbolSize: 8,\r\n          data: totalCounts,\r\n        },\r\n        ...statusSeries,\r\n      ],\r\n    };\r\n\r\n    // Set dark mode\r\n    if (isDarkMode()) {\r\n      setDarkModeChart(option);\r\n    }\r\n\r\n    reservationChart.setOption(option);\r\n  }\r\n};\r\n\r\n// Render restaurant statistics chart\r\nconst renderRestaurantChart = () => {\r\n  if (!restaurantChartDom.value) return;\r\n\r\n  const data = restaurantData.value;\r\n  if (!data || !data.dailyRestaurants || data.dailyRestaurants.length === 0)\r\n    return;\r\n\r\n  // Process dates and data\r\n  const dates = data.dailyRestaurants.map((item) => item.date);\r\n  const totalCounts = data.dailyRestaurants.map((item) => item.count);\r\n\r\n  // Create status data series\r\n  const statusSeries = Object.keys(data.statusCount).map((status) => {\r\n    const statusData = data.dailyRestaurants.map(\r\n      (item) => item.statusCount[status] || 0\r\n    );\r\n    const colors = {\r\n      \"Pending Review\": \"#f7c34a\",\r\n      \"Approved\": \"#4af7a1\",\r\n      \"Operating\": \"#67c23a\",\r\n      \"Closed\": \"#f56c6c\",\r\n    };\r\n\r\n    return {\r\n      name: status,\r\n      type: \"line\",\r\n      data: statusData,\r\n      smooth: true,\r\n      symbol: \"circle\",\r\n      symbolSize: 6,\r\n      lineStyle: {\r\n        width: 2,\r\n        color: colors[status] || \"#909399\",\r\n      },\r\n      itemStyle: {\r\n        color: colors[status] || \"#909399\",\r\n      },\r\n    };\r\n  });\r\n\r\n  // Initialize chart\r\n  if (restaurantChart) {\r\n    restaurantChart.dispose();\r\n  }\r\n\r\n  if (restaurantChartDom.value) {\r\n    restaurantChart = echarts.init(\r\n      restaurantChartDom.value,\r\n      isDarkMode() ? \"dark\" : null\r\n    );\r\n\r\n    // Configure options\r\n    const option = {\r\n      tooltip: {\r\n        trigger: \"axis\",\r\n        axisPointer: {\r\n          type: \"cross\",\r\n          label: {\r\n            backgroundColor: \"#6a7985\",\r\n          },\r\n        },\r\n      },\r\n      legend: {\r\n        data: [\"Total Restaurants\", ...Object.keys(data.statusCount)],\r\n        bottom: \"0%\",\r\n      },\r\n      grid: {\r\n        left: \"3%\",\r\n        right: \"4%\",\r\n        bottom: \"15%\",\r\n        top: \"3%\",\r\n        containLabel: true,\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        boundaryGap: false,\r\n        data: dates,\r\n        axisLabel: {\r\n          formatter: (value) => {\r\n            const date = new Date(value);\r\n            return `${date.getMonth() + 1}/${date.getDate()}`;\r\n          },\r\n        },\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n      },\r\n      series: [\r\n        {\r\n          name: \"Total Restaurants\",\r\n          type: \"line\",\r\n          smooth: true,\r\n          lineStyle: {\r\n            width: 3,\r\n            color: \"#4a6cf7\",\r\n          },\r\n          itemStyle: {\r\n            color: \"#4a6cf7\",\r\n          },\r\n          symbolSize: 8,\r\n          data: totalCounts,\r\n        },\r\n        ...statusSeries,\r\n      ],\r\n    };\r\n\r\n    // Set dark mode\r\n    if (isDarkMode()) {\r\n      setDarkModeChart(option);\r\n    }\r\n\r\n    restaurantChart.setOption(option);\r\n  }\r\n};\r\n\r\n// Check if dark mode is enabled\r\nconst isDarkMode = () => {\r\n  return (\r\n    window.matchMedia &&\r\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n  );\r\n};\r\n\r\n// Set dark mode chart\r\nconst setDarkModeChart = (option) => {\r\n  option.backgroundColor = \"#2d3748\";\r\n  option.textStyle = { color: \"#e2e8f0\" };\r\n\r\n  if (option.legend) {\r\n    option.legend.textStyle = { color: \"#e2e8f0\" };\r\n  }\r\n\r\n  if (option.xAxis) {\r\n    if (Array.isArray(option.xAxis)) {\r\n      option.xAxis.forEach((axis) => {\r\n        axis.axisLine = { lineStyle: { color: \"#4a5568\" } };\r\n        axis.axisLabel = { ...axis.axisLabel, color: \"#a0aec0\" };\r\n      });\r\n    } else {\r\n      option.xAxis.axisLine = { lineStyle: { color: \"#4a5568\" } };\r\n      option.xAxis.axisLabel = { ...option.xAxis.axisLabel, color: \"#a0aec0\" };\r\n    }\r\n  }\r\n\r\n  if (option.yAxis) {\r\n    if (Array.isArray(option.yAxis)) {\r\n      option.yAxis.forEach((axis) => {\r\n        axis.axisLine = { lineStyle: { color: \"#4a5568\" } };\r\n        axis.axisLabel = { ...axis.axisLabel, color: \"#a0aec0\" };\r\n        axis.splitLine = { lineStyle: { color: \"#4a5568\" } };\r\n      });\r\n    } else {\r\n      option.yAxis.axisLine = { lineStyle: { color: \"#4a5568\" } };\r\n      option.yAxis.axisLabel = { ...option.yAxis.axisLabel, color: \"#a0aec0\" };\r\n      option.yAxis.splitLine = { lineStyle: { color: \"#4a5568\" } };\r\n    }\r\n  }\r\n};\r\n\r\n// Refresh statistics data\r\nconst refreshStats = () => {\r\n  fetchStatistics();\r\n  fetchReservationData();\r\n  fetchRestaurantData();\r\n};\r\n\r\n// Handle window resize\r\nconst handleResize = () => {\r\n  if (reservationChart && reservationChartDom.value) {\r\n    reservationChart.resize();\r\n  }\r\n  if (restaurantChart && restaurantChartDom.value) {\r\n    restaurantChart.resize();\r\n  }\r\n};\r\n\r\n// Setup dark mode listener\r\nconst setupDarkModeListener = () => {\r\n  const darkModeMediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\n  const handleDarkModeChange = () => {\r\n    if (reservationChart && reservationChartDom.value) {\r\n      const option = reservationChart.getOption();\r\n      reservationChart.dispose();\r\n      reservationChart = echarts.init(\r\n        reservationChartDom.value,\r\n        isDarkMode() ? \"dark\" : null\r\n      );\r\n\r\n      if (isDarkMode()) {\r\n        setDarkModeChart(option);\r\n      }\r\n\r\n      reservationChart.setOption(option);\r\n    }\r\n\r\n    if (restaurantChart && restaurantChartDom.value) {\r\n      const option = restaurantChart.getOption();\r\n      restaurantChart.dispose();\r\n      restaurantChart = echarts.init(\r\n        restaurantChartDom.value,\r\n        isDarkMode() ? \"dark\" : null\r\n      );\r\n\r\n      if (isDarkMode()) {\r\n        setDarkModeChart(option);\r\n      }\r\n\r\n      restaurantChart.setOption(option);\r\n    }\r\n  };\r\n\r\n  darkModeMediaQuery.addEventListener(\"change\", handleDarkModeChange);\r\n\r\n  return () => {\r\n    darkModeMediaQuery.removeEventListener(\"change\", handleDarkModeChange);\r\n  };\r\n};\r\n\r\n// Fetch data on component mount\r\nonMounted(() => {\r\n  fetchStatistics();\r\n  fetchReservationData();\r\n  fetchRestaurantData();\r\n\r\n  // Add window resize event listener\r\n  window.addEventListener(\"resize\", handleResize);\r\n\r\n  // Add MutationObserver to listen for DOM changes\r\n  const observer = new MutationObserver(() => {\r\n    // When DOM structure changes, such as sidebar collapse, resize charts\r\n    setTimeout(() => {\r\n      handleResize();\r\n    }, 300);\r\n  });\r\n\r\n  // Observe document.body's child elements\r\n  observer.observe(document.body, {\r\n    childList: true,\r\n    subtree: true,\r\n    attributes: true,\r\n    attributeFilter: [\"class\", \"style\"],\r\n  });\r\n\r\n  // Setup dark mode listener\r\n  const removeDarkModeListener = setupDarkModeListener();\r\n\r\n  onBeforeUnmount(() => {\r\n    // Dispose chart instances\r\n    if (reservationChart) {\r\n      reservationChart.dispose();\r\n      reservationChart = null;\r\n    }\r\n\r\n    if (restaurantChart) {\r\n      restaurantChart.dispose();\r\n      restaurantChart = null;\r\n    }\r\n\r\n    // Remove event listeners and observers\r\n    window.removeEventListener(\"resize\", handleResize);\r\n    observer.disconnect();\r\n    removeDarkModeListener();\r\n  });\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-container {\r\n  padding: 24px;\r\n  background-color: #e6e7ee;\r\n  min-height: 100vh;\r\n}\r\n\r\n/* Neomorphic style base classes */\r\n.neomorphic {\r\n  border-radius: 18px;\r\n  background: #e6e7ee;\r\n  box-shadow: 8px 8px 16px #c3c4ca, -8px -8px 16px #ffffff;\r\n  padding: 25px;\r\n  margin-bottom: 30px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.neomorphic-inset {\r\n  border-radius: 15px;\r\n  background: #e6e7ee;\r\n  box-shadow: inset 5px 5px 10px #c3c4ca, inset -5px -5px 10px #ffffff;\r\n}\r\n\r\n.neomorphic-float {\r\n  border-radius: 12px;\r\n  background: linear-gradient(145deg, #f3f4fc, #d1d2d7);\r\n  box-shadow: 4px 4px 8px #c3c4ca, -4px -4px 8px #ffffff;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.neomorphic-float:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 6px 6px 12px #c3c4ca, -6px -6px 12px #ffffff;\r\n}\r\n\r\n.neomorphic-button {\r\n  background: #e6e7ee;\r\n  border: none;\r\n  border-radius: 12px;\r\n  color: #44476a;\r\n  padding: 8px 16px;\r\n  box-shadow: 3px 3px 6px #c3c4ca, -3px -3px 6px #ffffff;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.neomorphic-button:hover {\r\n  box-shadow: 4px 4px 8px #c3c4ca, -4px -4px 8px #ffffff;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.neomorphic-button:active {\r\n  box-shadow: inset 2px 2px 5px #c3c4ca, inset -2px -2px 5px #ffffff;\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.section-header h2 {\r\n  font-size: 1.5rem;\r\n  margin: 0;\r\n  font-weight: 600;\r\n  color: #44476a;\r\n  text-shadow: 1px 1px 1px rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.stats-section,\r\n.charts-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.stats-row {\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.stat-col {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.stat-card {\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.stat-icon {\r\n  width: 52px;\r\n  height: 52px;\r\n  margin-right: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n}\r\n\r\n.restaurant-icon {\r\n  background: linear-gradient(145deg, #4a6cf7, #3f5bcf);\r\n}\r\n\r\n.reservation-icon {\r\n  background: linear-gradient(145deg, #f7c34a, #d1a43e);\r\n}\r\n\r\n.weekly-icon {\r\n  background: linear-gradient(145deg, #4af7a1, #3fd188);\r\n}\r\n\r\n.total-icon {\r\n  background: linear-gradient(145deg, #f74a6c, #d13f5c);\r\n}\r\n\r\n.stat-content {\r\n  flex: 1;\r\n}\r\n\r\n.stat-title {\r\n  font-size: 0.95rem;\r\n  color: #44476a;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.8rem;\r\n  font-weight: 700;\r\n  color: #31344b;\r\n  margin-bottom: 8px;\r\n  letter-spacing: 0.5px;\r\n  text-shadow: 1px 1px 1px rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.stat-desc {\r\n  font-size: 0.8rem;\r\n  color: #7f83a2;\r\n}\r\n\r\n.chart-box {\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #44476a;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  text-shadow: 1px 1px 1px rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.chart-container {\r\n  height: 320px;\r\n  width: 100%;\r\n  padding: 10px;\r\n}\r\n\r\n/* Adapt to dark mode */\r\n@media (prefers-color-scheme: dark) {\r\n  .dashboard-container {\r\n    background-color: #2d3748;\r\n  }\r\n\r\n  .neomorphic {\r\n    background: #2d3748;\r\n    box-shadow: 8px 8px 16px #202632, -8px -8px 16px #3a485e;\r\n  }\r\n\r\n  .neomorphic-inset {\r\n    background: #2d3748;\r\n    box-shadow: inset 5px 5px 10px #202632, inset -5px -5px 10px #3a485e;\r\n  }\r\n\r\n  .neomorphic-float {\r\n    background: linear-gradient(145deg, #313d50, #293340);\r\n    box-shadow: 4px 4px 8px #202632, -4px -4px 8px #3a485e;\r\n  }\r\n\r\n  .neomorphic-button {\r\n    background: #2d3748;\r\n    color: #cbd5e0;\r\n    box-shadow: 3px 3px 6px #202632, -3px -3px 6px #3a485e;\r\n  }\r\n\r\n  .neomorphic-button:active {\r\n    box-shadow: inset 2px 2px 5px #202632, inset -2px -2px 5px #3a485e;\r\n  }\r\n\r\n  .section-header h2,\r\n  .chart-title {\r\n    color: #e2e8f0;\r\n    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  .stat-title {\r\n    color: #cbd5e0;\r\n  }\r\n\r\n  .stat-value {\r\n    color: #f7fafc;\r\n    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  .stat-desc {\r\n    color: #a0aec0;\r\n  }\r\n}\r\n\r\n/* Responsive adjustments */\r\n@media (max-width: 768px) {\r\n  .dashboard-container {\r\n    padding: 16px;\r\n  }\r\n\r\n  .neomorphic {\r\n    padding: 20px;\r\n  }\r\n\r\n  .stat-value {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .chart-container {\r\n    height: 280px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
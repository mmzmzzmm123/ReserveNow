{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport request from '@/utils/request';\n\n// Table data\n\nexport default {\n  __name: 'StaffManage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loading = ref(false);\n    const staffList = ref([]);\n    const total = ref(0);\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n\n    // Detail dialog\n    const detailDialogVisible = ref(false);\n    const selectedStaff = ref(null);\n\n    // Pagination display calculation\n    const displayedPages = computed(() => {\n      const totalPages = Math.ceil(total.value / pageSize.value);\n      if (totalPages <= 5) {\n        return Array.from({\n          length: totalPages\n        }, (_, i) => i + 1);\n      }\n      if (currentPage.value <= 3) {\n        return [1, 2, 3, 4, 5];\n      }\n      if (currentPage.value >= totalPages - 2) {\n        return [totalPages - 4, totalPages - 3, totalPages - 2, totalPages - 1, totalPages];\n      }\n      return [currentPage.value - 2, currentPage.value - 1, currentPage.value, currentPage.value + 1, currentPage.value + 2];\n    });\n\n    // Get staff list\n    const fetchStaffList = async () => {\n      loading.value = true;\n      try {\n        const res = await request({\n          url: '/admin/staff',\n          method: 'get',\n          params: {\n            page: currentPage.value,\n            pageSize: pageSize.value\n          }\n        });\n        staffList.value = res.data.list;\n        total.value = res.data.total;\n      } catch (error) {\n        console.error('Failed to get staff list:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Get status tag type\n    const getStatusType = status => {\n      const typeMap = {\n        0: 'warning',\n        // Pending\n        1: 'success' // Approved\n      };\n      return typeMap[status] || 'info';\n    };\n\n    // Get status text\n    const getStatusText = status => {\n      const textMap = {\n        0: 'Pending',\n        1: 'Approved'\n      };\n      return textMap[status] || 'Unknown';\n    };\n\n    // Format date time\n    const formatDateTime = dateStr => {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      if (isNaN(date.getTime())) return dateStr;\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      const hours = String(date.getHours()).padStart(2, '0');\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\n    };\n\n    // Approve staff\n    const handleApprove = row => {\n      ElMessageBox.confirm('Are you sure you want to approve this staff member?', 'Approval Confirmation', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'success'\n      }).then(async () => {\n        try {\n          await request({\n            url: `/admin/staff/${row.id}/status`,\n            method: 'put',\n            params: {\n              status: 1\n            }\n          });\n          ElMessage.success('Staff approved successfully');\n          fetchStaffList();\n        } catch (error) {\n          console.error('Approval failed:', error);\n        }\n      });\n    };\n\n    // Delete staff\n    const handleDelete = row => {\n      ElMessageBox.confirm('Are you sure you want to delete this staff member? This action cannot be undone!', 'Delete Confirmation', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await request({\n            url: `/admin/staff/${row.id}`,\n            method: 'delete'\n          });\n          ElMessage.success('Staff deleted successfully');\n          fetchStaffList();\n        } catch (error) {\n          console.error('Delete failed:', error);\n        }\n      });\n    };\n\n    // View details\n    const handleViewDetails = row => {\n      selectedStaff.value = {\n        ...row\n      };\n      detailDialogVisible.value = true;\n    };\n\n    // Actions in detail dialog\n    const approveStaff = () => {\n      handleApprove(selectedStaff.value);\n      detailDialogVisible.value = false;\n    };\n    const deleteStaff = () => {\n      handleDelete(selectedStaff.value);\n      detailDialogVisible.value = false;\n    };\n\n    // Pagination related\n    const handleCurrentChange = val => {\n      currentPage.value = val;\n      fetchStaffList();\n    };\n\n    // Close detail dialog\n    const closeDetailDialog = e => {\n      if (e.target.classList.contains('detail-dialog-overlay')) {\n        detailDialogVisible.value = false;\n      }\n    };\n\n    // Initialize\n    onMounted(() => {\n      fetchStaffList();\n    });\n    const __returned__ = {\n      loading,\n      staffList,\n      total,\n      currentPage,\n      pageSize,\n      detailDialogVisible,\n      selectedStaff,\n      displayedPages,\n      fetchStaffList,\n      getStatusType,\n      getStatusText,\n      formatDateTime,\n      handleApprove,\n      handleDelete,\n      handleViewDetails,\n      approveStaff,\n      deleteStaff,\n      handleCurrentChange,\n      closeDetailDialog,\n      ref,\n      computed,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get request() {\n        return request;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","ElMessage","ElMessageBox","request","loading","staffList","total","currentPage","pageSize","detailDialogVisible","selectedStaff","displayedPages","totalPages","Math","ceil","value","Array","from","length","_","i","fetchStaffList","res","url","method","params","page","data","list","error","console","getStatusType","status","typeMap","getStatusText","textMap","formatDateTime","dateStr","date","Date","isNaN","getTime","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","handleApprove","row","confirm","confirmButtonText","cancelButtonText","type","then","id","success","handleDelete","handleViewDetails","approveStaff","deleteStaff","handleCurrentChange","val","closeDetailDialog","e","target","classList","contains"],"sources":["/Users/taoyuxuan/Documents/RestaurantReservation/qd/src/views/admin/StaffManage.vue"],"sourcesContent":["<template>\r\n    <div class=\"staff-manage-container\">\r\n      <!-- Staff List -->\r\n      <div class=\"table-section neomorphic-card\">\r\n        <!-- Loading -->\r\n        <div v-if=\"loading\" class=\"loading-container\">\r\n          <div class=\"loading-spinner\"></div>\r\n        </div>\r\n        \r\n        <!-- Custom Table -->\r\n        <table v-else class=\"custom-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Staff ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Status</th>\r\n              <th>Created At</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"row in staffList\" :key=\"row.id\">\r\n              <td>{{ row.id }}</td>\r\n              <td>{{ row.userName }}</td>\r\n              <td>{{ row.userEmail }}</td>\r\n              <td>\r\n                <span class=\"status-tag\" :class=\"getStatusType(row.status)\">\r\n                  {{ getStatusText(row.status) }}\r\n                </span>\r\n              </td>\r\n              <td>{{ formatDateTime(row.createdAt) }}</td>\r\n              <td>\r\n                <div class=\"operation-buttons\">\r\n                  <!-- Approve Button -->\r\n                  <button \r\n                    v-if=\"row.status === 0\" \r\n                    class=\"action-btn confirm\" \r\n                    @click=\"handleApprove(row)\"\r\n                    title=\"Approve\"\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                      <polyline points=\"20 6 9 17 4 12\"></polyline>\r\n                    </svg>\r\n                  </button>\r\n                  \r\n                  <!-- Delete Button -->\r\n                  <button \r\n                    class=\"action-btn reject\" \r\n                    @click=\"handleDelete(row)\"\r\n                    title=\"Delete Staff\"\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                    </svg>\r\n                  </button>\r\n                  \r\n                  <!-- View Button -->\r\n                  <button \r\n                    class=\"action-btn view\" \r\n                    @click=\"handleViewDetails(row)\"\r\n                    title=\"View Details\"\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                      <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n                      <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <!-- No Data Message -->\r\n            <tr v-if=\"staffList.length === 0\">\r\n              <td colspan=\"6\" style=\"text-align: center; padding: 30px;\">No staff data available</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n  \r\n        <!-- Custom Pagination -->\r\n        <div class=\"pagination\">\r\n          <div class=\"pagination-info\">\r\n            Total {{ total }} records, Current Page {{ currentPage }}/{{ Math.ceil(total / pageSize) }}\r\n          </div>\r\n          <!-- Previous Page -->\r\n          <button \r\n            class=\"pagination-btn\" \r\n            :disabled=\"currentPage === 1\"\r\n            @click=\"currentPage > 1 && handleCurrentChange(currentPage - 1)\"\r\n          >\r\n            &lt;\r\n          </button>\r\n          \r\n          <!-- Page Numbers -->\r\n          <button \r\n            v-for=\"page in displayedPages\" \r\n            :key=\"page\"\r\n            class=\"pagination-btn\" \r\n            :class=\"{ 'active': currentPage === page }\"\r\n            @click=\"handleCurrentChange(page)\"\r\n          >\r\n            {{ page }}\r\n          </button>\r\n          \r\n          <!-- Next Page -->\r\n          <button \r\n            class=\"pagination-btn\" \r\n            :disabled=\"currentPage === Math.ceil(total / pageSize)\"\r\n            @click=\"currentPage < Math.ceil(total / pageSize) && handleCurrentChange(currentPage + 1)\"\r\n          >\r\n            &gt;\r\n          </button>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Staff Details Dialog -->\r\n      <div v-if=\"detailDialogVisible\" class=\"detail-dialog-overlay\" @click=\"closeDetailDialog\">\r\n        <div class=\"detail-dialog\" @click.stop>\r\n          <div class=\"detail-dialog-header\">\r\n            <h3 class=\"detail-dialog-title\">Staff Details</h3>\r\n            <button class=\"detail-dialog-close\" @click=\"detailDialogVisible = false\">×</button>\r\n          </div>\r\n          \r\n          <div class=\"detail-dialog-body\">\r\n            <div v-if=\"selectedStaff\" class=\"staff-detail\">\r\n              <div class=\"detail-row\">\r\n                <div class=\"detail-label\">Staff ID:</div>\r\n                <div class=\"detail-value\">{{ selectedStaff.id }}</div>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <div class=\"detail-label\">Name:</div>\r\n                <div class=\"detail-value\">{{ selectedStaff.userName }}</div>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <div class=\"detail-label\">Email:</div>\r\n                <div class=\"detail-value\">{{ selectedStaff.userEmail }}</div>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <div class=\"detail-label\">Status:</div>\r\n                <div class=\"detail-value\">\r\n                  <span class=\"status-tag\" :class=\"getStatusType(selectedStaff.status)\">\r\n                    {{ getStatusText(selectedStaff.status) }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <div class=\"detail-label\">Created At:</div>\r\n                <div class=\"detail-value\">{{ formatDateTime(selectedStaff.createdAt) }}</div>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <div class=\"detail-label\">Updated At:</div>\r\n                <div class=\"detail-value\">{{ formatDateTime(selectedStaff.updatedAt) }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"detail-dialog-footer\">\r\n            <button class=\"dialog-btn cancel\" @click=\"detailDialogVisible = false\">\r\n              Close\r\n            </button>\r\n            <button \r\n              v-if=\"selectedStaff && selectedStaff.status === 0\"\r\n              class=\"dialog-btn confirm\" \r\n              @click=\"approveStaff\"\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                <polyline points=\"20 6 9 17 4 12\"></polyline>\r\n              </svg>\r\n              Approve\r\n            </button>\r\n            <button \r\n              class=\"dialog-btn reject\" \r\n              @click=\"deleteStaff\"\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n              </svg>\r\n              Delete Staff\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, computed, onMounted } from 'vue'\r\n  import { ElMessage, ElMessageBox } from 'element-plus'\r\n  import request from '@/utils/request'\r\n  \r\n  // Table data\r\n  const loading = ref(false)\r\n  const staffList = ref([])\r\n  const total = ref(0)\r\n  const currentPage = ref(1)\r\n  const pageSize = ref(10)\r\n  \r\n  // Detail dialog\r\n  const detailDialogVisible = ref(false)\r\n  const selectedStaff = ref(null)\r\n  \r\n  // Pagination display calculation\r\n  const displayedPages = computed(() => {\r\n    const totalPages = Math.ceil(total.value / pageSize.value)\r\n    if (totalPages <= 5) {\r\n      return Array.from({ length: totalPages }, (_, i) => i + 1)\r\n    }\r\n    \r\n    if (currentPage.value <= 3) {\r\n      return [1, 2, 3, 4, 5]\r\n    }\r\n    \r\n    if (currentPage.value >= totalPages - 2) {\r\n      return [totalPages - 4, totalPages - 3, totalPages - 2, totalPages - 1, totalPages]\r\n    }\r\n    \r\n    return [currentPage.value - 2, currentPage.value - 1, currentPage.value, currentPage.value + 1, currentPage.value + 2]\r\n  })\r\n  \r\n  // Get staff list\r\n  const fetchStaffList = async () => {\r\n    loading.value = true\r\n    try {\r\n      const res = await request({\r\n        url: '/admin/staff',\r\n        method: 'get',\r\n        params: {\r\n          page: currentPage.value,\r\n          pageSize: pageSize.value\r\n        }\r\n      })\r\n      \r\n      staffList.value = res.data.list\r\n      total.value = res.data.total\r\n    } catch (error) {\r\n      console.error('Failed to get staff list:', error)\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n  \r\n  // Get status tag type\r\n  const getStatusType = (status) => {\r\n    const typeMap = {\r\n      0: 'warning', // Pending\r\n      1: 'success'  // Approved\r\n    }\r\n    return typeMap[status] || 'info'\r\n  }\r\n  \r\n  // Get status text\r\n  const getStatusText = (status) => {\r\n    const textMap = {\r\n      0: 'Pending',\r\n      1: 'Approved'\r\n    }\r\n    return textMap[status] || 'Unknown'\r\n  }\r\n  \r\n  // Format date time\r\n  const formatDateTime = (dateStr) => {\r\n    if (!dateStr) return '';\r\n    const date = new Date(dateStr);\r\n    if (isNaN(date.getTime())) return dateStr;\r\n    \r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    \r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n  };\r\n  \r\n  // Approve staff\r\n  const handleApprove = (row) => {\r\n    ElMessageBox.confirm(\r\n      'Are you sure you want to approve this staff member?',\r\n      'Approval Confirmation',\r\n      {\r\n        confirmButtonText: 'Confirm',\r\n        cancelButtonText: 'Cancel',\r\n        type: 'success'\r\n      }\r\n    ).then(async () => {\r\n      try {\r\n        await request({\r\n          url: `/admin/staff/${row.id}/status`,\r\n          method: 'put',\r\n          params: { status: 1 }\r\n        })\r\n        ElMessage.success('Staff approved successfully')\r\n        fetchStaffList()\r\n      } catch (error) {\r\n        console.error('Approval failed:', error)\r\n      }\r\n    })\r\n  }\r\n  \r\n  // Delete staff\r\n  const handleDelete = (row) => {\r\n    ElMessageBox.confirm(\r\n      'Are you sure you want to delete this staff member? This action cannot be undone!',\r\n      'Delete Confirmation',\r\n      {\r\n        confirmButtonText: 'Confirm',\r\n        cancelButtonText: 'Cancel',\r\n        type: 'warning'\r\n      }\r\n    ).then(async () => {\r\n      try {\r\n        await request({\r\n          url: `/admin/staff/${row.id}`,\r\n          method: 'delete'\r\n        })\r\n        ElMessage.success('Staff deleted successfully')\r\n        fetchStaffList()\r\n      } catch (error) {\r\n        console.error('Delete failed:', error)\r\n      }\r\n    })\r\n  }\r\n  \r\n  // View details\r\n  const handleViewDetails = (row) => {\r\n    selectedStaff.value = { ...row }\r\n    detailDialogVisible.value = true\r\n  }\r\n  \r\n  // Actions in detail dialog\r\n  const approveStaff = () => {\r\n    handleApprove(selectedStaff.value)\r\n    detailDialogVisible.value = false\r\n  }\r\n  \r\n  const deleteStaff = () => {\r\n    handleDelete(selectedStaff.value)\r\n    detailDialogVisible.value = false\r\n  }\r\n  \r\n  // Pagination related\r\n  const handleCurrentChange = (val) => {\r\n    currentPage.value = val\r\n    fetchStaffList()\r\n  }\r\n  \r\n  // Close detail dialog\r\n  const closeDetailDialog = (e) => {\r\n    if (e.target.classList.contains('detail-dialog-overlay')) {\r\n      detailDialogVisible.value = false\r\n    }\r\n  }\r\n  \r\n  // Initialize\r\n  onMounted(() => {\r\n    fetchStaffList()\r\n  })\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .staff-manage-container {\r\n    padding: 20px;\r\n    min-height: 100vh;\r\n    background-color: #e6e7ee;\r\n    background-image: linear-gradient(135deg, #e6e7ee 0%, #e6e7ee 100%);\r\n    font-family: 'PingFang SC', 'Microsoft YaHei', sans-serif;\r\n  }\r\n  \r\n  /* Neomorphic Card */\r\n  .neomorphic-card {\r\n    background: #e6e7ee;\r\n    border-radius: 24px;\r\n    padding: 24px;\r\n    margin-bottom: 24px;\r\n    box-shadow: 8px 8px 16px #c8cdd5,\r\n                -8px -8px 16px #ffffff;\r\n    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n    border: 1px solid rgba(255, 255, 255, 0.8);\r\n  }\r\n  \r\n  .neomorphic-card:hover {\r\n    transform: translateY(-3px);\r\n  }\r\n  \r\n  /* Table Section Styles */\r\n  .table-section {\r\n    min-height: 500px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .custom-table {\r\n    width: 100%;\r\n    border-collapse: separate;\r\n    border-spacing: 0;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .custom-table thead th {\r\n    background-color: #e6e7ee;\r\n    color: #5e6687;\r\n    font-weight: 600;\r\n    padding: 16px;\r\n    text-align: center;\r\n    border-bottom: 2px solid rgba(195, 196, 202, 0.3);\r\n    letter-spacing: 0.5px;\r\n    font-size: 15px;\r\n  }\r\n  \r\n  .custom-table tbody tr {\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .custom-table tbody tr:nth-child(odd) {\r\n    background-color: #e6e7ee;\r\n  }\r\n  \r\n  .custom-table tbody tr:nth-child(even) {\r\n    background-color: #edf2fa;\r\n  }\r\n  \r\n  .custom-table tbody tr:hover {\r\n    background-color: #f0f4fa;\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\r\n  }\r\n  \r\n  .custom-table tbody td {\r\n    padding: 14px;\r\n    border-bottom: 1px solid rgba(195, 196, 202, 0.2);\r\n    color: #5e6687;\r\n    text-align: center;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  /* Pagination Styles */\r\n  .pagination {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    margin-top: 24px;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .pagination-info {\r\n    margin-right: 20px;\r\n    color: #5e6687;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .pagination-btn {\r\n    width: 40px;\r\n    height: 40px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 10px;\r\n    background-color: #e6e7ee;\r\n    color: #5e6687;\r\n    font-weight: 600;\r\n    box-shadow: 4px 4px 8px #c1c7d0,\r\n                -4px -4px 8px #ffffff;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .pagination-btn:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 6px 6px 10px #c1c7d0,\r\n                -6px -6px 10px #ffffff;\r\n  }\r\n  \r\n  .pagination-btn.active {\r\n    background: linear-gradient(135deg, #4d78ef, #5a6bed);\r\n    color: white;\r\n    box-shadow: inset 2px 2px 4px rgba(0, 0, 0, 0.1),\r\n                inset -2px -2px 4px rgba(255, 255, 255, 0.1);\r\n  }\r\n  \r\n  .pagination-btn:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  /* Operation Buttons */\r\n  .operation-buttons {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .action-btn {\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #e6e7ee;\r\n    color: #5e6687;\r\n    border: none;\r\n    cursor: pointer;\r\n    box-shadow: 4px 4px 8px #c1c7d0,\r\n                -4px -4px 8px #ffffff;\r\n    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n  }\r\n  \r\n  .action-btn:hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 6px 6px 12px #c1c7d0,\r\n                -6px -6px 12px #ffffff;\r\n  }\r\n  \r\n  .action-btn.confirm {\r\n    background: linear-gradient(135deg, #66bb6a, #4caf50);\r\n    color: white;\r\n  }\r\n  \r\n  .action-btn.reject {\r\n    background: linear-gradient(135deg, #ef5350, #f44336);\r\n    color: white;\r\n  }\r\n  \r\n  .action-btn.view {\r\n    background: linear-gradient(135deg, #64b5f6, #2196f3);\r\n    color: white;\r\n  }\r\n  \r\n  /* Status Tags */\r\n  .status-tag {\r\n    display: inline-block;\r\n    padding: 6px 12px;\r\n    border-radius: 12px;\r\n    font-weight: 600;\r\n    font-size: 13px;\r\n    box-shadow: 2px 2px 5px #c1c7d0,\r\n                -2px -2px 5px #ffffff;\r\n  }\r\n  \r\n  .status-tag.warning {\r\n    background: linear-gradient(135deg, #ffe082, #ffc107);\r\n    color: white;\r\n  }\r\n  \r\n  .status-tag.success {\r\n    background: linear-gradient(135deg, #a5d6a7, #66bb6a);\r\n    color: white;\r\n  }\r\n  \r\n  /* Detail Dialog */\r\n  .detail-dialog-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n    backdrop-filter: blur(6px);\r\n  }\r\n  \r\n  .detail-dialog {\r\n    background-color: #e6e7ee;\r\n    border-radius: 24px;\r\n    padding: 0;\r\n    width: 550px;\r\n    transform: translateY(0);\r\n    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n    max-height: 90vh;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .detail-dialog-header {\r\n    background-color: #e6e7ee;\r\n    padding: 20px 24px;\r\n    border-bottom: 1px solid rgba(195, 196, 202, 0.2);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .detail-dialog-title {\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    color: #5e6687;\r\n    margin: 0;\r\n  }\r\n  \r\n  .detail-dialog-close {\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #e6e7ee;\r\n    color: #5e6687;\r\n    border: none;\r\n    cursor: pointer;\r\n    box-shadow: 4px 4px 8px #c1c7d0,\r\n                -4px -4px 8px #ffffff;\r\n    transition: all 0.3s ease;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .detail-dialog-close:hover {\r\n    transform: rotate(90deg);\r\n    box-shadow: 6px 6px 12px #c1c7d0,\r\n                -6px -6px 12px #ffffff;\r\n  }\r\n  \r\n  .detail-dialog-body {\r\n    padding: 24px;\r\n    overflow-y: auto;\r\n    flex: 1;\r\n  }\r\n  \r\n  .detail-dialog-footer {\r\n    padding: 16px 24px 24px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 16px;\r\n    border-top: 1px solid rgba(195, 196, 202, 0.2);\r\n  }\r\n  \r\n  .dialog-btn {\r\n    padding: 12px 24px;\r\n    border-radius: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n    border: none;\r\n    box-shadow: 4px 4px 8px #c1c7d0,\r\n                -4px -4px 8px #ffffff;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 6px;\r\n  }\r\n  \r\n  .dialog-btn.cancel {\r\n    background-color: #e6e7ee;\r\n    color: #5e6687;\r\n  }\r\n  \r\n  .dialog-btn.confirm {\r\n    background: linear-gradient(135deg, #66bb6a, #4caf50);\r\n    color: white;\r\n  }\r\n  \r\n  .dialog-btn.reject {\r\n    background: linear-gradient(135deg, #ef5350, #f44336);\r\n    color: white;\r\n  }\r\n  \r\n  .dialog-btn:hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 6px 6px 12px #c1c7d0,\r\n                -6px -6px 12px #ffffff;\r\n  }\r\n  \r\n  /* Staff Detail Styles */\r\n  .staff-detail {\r\n    padding: 10px;\r\n  }\r\n  \r\n  .detail-row {\r\n    display: flex;\r\n    margin-bottom: 15px;\r\n    align-items: center;\r\n    background: #edf2fa;\r\n    padding: 12px 16px;\r\n    border-radius: 12px;\r\n    box-shadow: inset 2px 2px 5px #c1c7d0,\r\n                inset -2px -2px 5px #ffffff;\r\n  }\r\n  \r\n  .detail-label {\r\n    width: 110px;\r\n    font-weight: 600;\r\n    color: #5e6687;\r\n  }\r\n  \r\n  .detail-value {\r\n    flex: 1;\r\n    color: #5e6687;\r\n  }\r\n  \r\n  /* Loading Animation */\r\n  .loading-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 300px;\r\n  }\r\n  \r\n  .loading-spinner {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    border: 3px solid rgba(77, 120, 239, 0.2);\r\n    border-top-color: #4d78ef;\r\n    animation: spin 1s infinite linear;\r\n  }\r\n  \r\n  @keyframes spin {\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  \r\n  /* Dark Mode Adaptation */\r\n  @media (prefers-color-scheme: dark) {\r\n    .staff-manage-container {\r\n      background-color: #2d3748;\r\n      background-image: linear-gradient(135deg, #2d3748 0%, #1a202c 100%);\r\n    }\r\n  \r\n    .neomorphic-card {\r\n      background: #2d3748;\r\n      box-shadow: 8px 8px 16px #202632,\r\n                  -8px -8px 16px #3a485e;\r\n      border: 1px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n  \r\n    .custom-table thead th {\r\n      background-color: #2d3748;\r\n      color: #e2e8f0;\r\n      border-bottom: 2px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n  \r\n    .custom-table tbody tr:nth-child(odd) {\r\n      background-color: #2d3748;\r\n    }\r\n  \r\n    .custom-table tbody tr:nth-child(even) {\r\n      background-color: #2a3243;\r\n    }\r\n  \r\n    .custom-table tbody tr:hover {\r\n      background-color: #323c52;\r\n    }\r\n  \r\n    .custom-table tbody td {\r\n      color: #e2e8f0;\r\n      border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n  \r\n    .pagination-info {\r\n      color: #e2e8f0;\r\n    }\r\n  \r\n    .pagination-btn {\r\n      background-color: #2d3748;\r\n      color: #e2e8f0;\r\n      box-shadow: 4px 4px 8px #202632,\r\n                  -4px -4px 8px #3a485e;\r\n    }\r\n  \r\n    .action-btn {\r\n      background-color: #2d3748;\r\n      color: #e2e8f0;\r\n      box-shadow: 4px 4px 8px #202632,\r\n                  -4px -4px 8px #3a485e;\r\n    }\r\n  \r\n    .detail-dialog {\r\n      background-color: #2d3748;\r\n    }\r\n  \r\n    .detail-dialog-header {\r\n      background-color: #2d3748;\r\n      border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n  \r\n    .detail-dialog-title {\r\n      color: #e2e8f0;\r\n    }\r\n  \r\n    .detail-dialog-close {\r\n      background-color: #2d3748;\r\n      color: #e2e8f0;\r\n    }\r\n  \r\n    .dialog-btn.cancel {\r\n      background-color: #2d3748;\r\n      color: #e2e8f0;\r\n    }\r\n  \r\n    .detail-row {\r\n      background: #2a3243;\r\n      box-shadow: inset 2px 2px 5px #202632,\r\n                  inset -2px -2px 5px #3a485e;\r\n    }\r\n  \r\n    .detail-label,\r\n    .detail-value {\r\n      color: #e2e8f0;\r\n    }\r\n  }\r\n  \r\n  /* 响应式适配 */\r\n  @media (max-width: 768px) {\r\n    .neomorphic-card {\r\n      padding: 16px;\r\n      border-radius: 16px;\r\n    }\r\n    \r\n    .custom-table {\r\n      display: block;\r\n      overflow-x: auto;\r\n      white-space: nowrap;\r\n    }\r\n  \r\n    .custom-table thead th,\r\n    .custom-table tbody td {\r\n      padding: 10px;\r\n    }\r\n  \r\n    .detail-dialog {\r\n      width: 90%;\r\n      max-width: 500px;\r\n    }\r\n    \r\n    .action-btn {\r\n      width: 32px;\r\n      height: 32px;\r\n    }\r\n    \r\n    .operation-buttons {\r\n      gap: 8px;\r\n    }\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
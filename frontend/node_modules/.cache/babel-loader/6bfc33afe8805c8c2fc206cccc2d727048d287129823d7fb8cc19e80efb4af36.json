{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport AppNavbar from '@/components/AppNavbar.vue';\nimport AppFooter from '@/components/AppFooter.vue';\nimport request from '@/utils/request';\nimport { Calendar, Clock, Location, User, Message, Warning, ArrowRight, Ticket, Plus } from '@element-plus/icons-vue';\nexport default {\n  __name: 'Reservations',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const loading = ref(false);\n    const reservations = ref([]);\n    const total = ref(0);\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const selectedStatus = ref(['1', '2']);\n    const cancelDialogVisible = ref(false);\n    const qrCodeDialogVisible = ref(false);\n    const reviewDialogVisible = ref(false);\n    const selectedReservation = ref(null);\n    const cancelling = ref(false);\n    const submittingReview = ref(false);\n    const cancelForm = ref({\n      reason: ''\n    });\n    const reviewForm = ref({\n      id: null,\n      restaurantId: null,\n      rating: 5,\n      content: '',\n      photos: [],\n      videos: []\n    });\n    const contentError = ref('');\n    const hoverRating = ref(0);\n    const reviewPhotoPreviews = ref([]);\n    const reviewVideoPreview = ref(null);\n    const photoInput = ref(null);\n    const videoInput = ref(null);\n\n    // Status options\n    const statusOptions = [{\n      label: 'Pending',\n      value: '1'\n    }, {\n      label: 'Confirmed',\n      value: '2'\n    }, {\n      label: 'Completed',\n      value: '3'\n    }, {\n      label: 'Cancelled',\n      value: '0'\n    }, {\n      label: 'Rejected',\n      value: '4'\n    }];\n\n    // Get reservation list\n    const fetchReservations = async () => {\n      loading.value = true;\n      try {\n        const response = await request.get('/reservations', {\n          params: {\n            page: currentPage.value,\n            pageSize: pageSize.value,\n            status: selectedStatus.value.join(',')\n          }\n        });\n        if (response.code === 200) {\n          // Process data format\n          reservations.value = response.data.list.map(item => ({\n            id: item.id,\n            restaurantId: item.restaurantId,\n            restaurantName: item.restaurantName,\n            restaurantPhoto: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?q=80&w=2070&auto=format&fit=crop',\n            // Default image\n            address: item.tableType,\n            reservationDate: new Date(item.reservationTime),\n            reservationTime: new Date(item.reservationTime).toLocaleTimeString('zh-CN', {\n              hour: '2-digit',\n              minute: '2-digit'\n            }),\n            numberOfGuests: item.personCount,\n            specialRequests: item.remarks,\n            status: item.statusValue,\n            statusText: item.statusText,\n            reservationCode: `RES${String(item.id).padStart(6, '0')}`,\n            // Generate reservation code\n            cancelReason: item.cancelReason,\n            reviewed: item.reviewed || false\n          }));\n          total.value = response.data.total;\n        }\n      } catch (error) {\n        ElMessage.error('Failed to load reservation records');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Toggle status filter\n    const toggleStatus = status => {\n      const index = selectedStatus.value.indexOf(status);\n      if (index > -1) {\n        selectedStatus.value.splice(index, 1);\n      } else {\n        selectedStatus.value.push(status);\n      }\n      currentPage.value = 1;\n      fetchReservations();\n    };\n\n    // Get status text\n    const getStatusText = status => {\n      const statusMap = {\n        1: 'Pending',\n        2: 'Confirmed',\n        3: 'Completed',\n        0: 'Cancelled',\n        4: 'Rejected'\n      };\n      return statusMap[status] || 'Unknown Status';\n    };\n\n    // Get status class name\n    const getStatusClass = status => {\n      const statusMap = {\n        0: 'cancelled',\n        1: 'pending',\n        2: 'confirmed',\n        3: 'completed',\n        4: 'rejected'\n      };\n      return statusMap[status] || '';\n    };\n\n    // Get count for each status\n    const getStatusCount = status => {\n      return reservations.value.filter(r => r.status === parseInt(status)).length;\n    };\n\n    // Format date\n    const formatDate = date => {\n      return new Date(date).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        weekday: 'long'\n      });\n    };\n\n    // Show cancel dialog\n    const showCancelDialog = reservation => {\n      selectedReservation.value = reservation;\n      cancelDialogVisible.value = true;\n    };\n\n    // Confirm cancel reservation\n    const confirmCancel = async () => {\n      if (!selectedReservation.value) return;\n      cancelling.value = true;\n      try {\n        const response = await request.put(`/reservations/${selectedReservation.value.id}/cancel`, {\n          reason: cancelForm.value.reason\n        });\n        if (response.code === 200) {\n          ElMessage.success('Reservation cancelled successfully');\n          cancelDialogVisible.value = false;\n          fetchReservations();\n        }\n      } catch (error) {\n        ElMessage.error('Failed to cancel reservation');\n      } finally {\n        cancelling.value = false;\n      }\n    };\n\n    // View reservation code\n    const viewQRCode = reservation => {\n      selectedReservation.value = reservation;\n      qrCodeDialogVisible.value = true;\n    };\n\n    // Show review dialog\n    const showReviewDialog = reservation => {\n      selectedReservation.value = reservation;\n      reviewForm.value = {\n        id: reservation.id,\n        restaurantId: reservation.restaurantId,\n        rating: 5,\n        content: '',\n        photos: [],\n        videos: []\n      };\n      reviewPhotoPreviews.value = [];\n      reviewVideoPreview.value = null;\n      contentError.value = '';\n      reviewDialogVisible.value = true;\n    };\n\n    // Get rating text\n    const getRatingText = rating => {\n      const texts = ['Very Poor', 'Poor', 'Fair', 'Good', 'Excellent'];\n      return texts[rating - 1] || '';\n    };\n\n    // Trigger photo upload\n    const triggerPhotoUpload = () => {\n      photoInput.value.click();\n    };\n\n    // Trigger video upload\n    const triggerVideoUpload = () => {\n      videoInput.value.click();\n    };\n\n    // Upload photo\n    const uploadPhoto = async e => {\n      const files = e.target.files;\n      if (!files || files.length === 0) return;\n      const remainingSlots = 3 - reviewPhotoPreviews.value.length;\n      const filesToUpload = Array.from(files).slice(0, remainingSlots);\n      for (const file of filesToUpload) {\n        if (file.size > 5 * 1024 * 1024) {\n          ElMessage.warning('Image size cannot exceed 5MB');\n          continue;\n        }\n\n        // Show temporary preview\n        const tempUrl = URL.createObjectURL(file);\n        reviewPhotoPreviews.value.push(tempUrl);\n\n        // Create FormData object\n        const formData = new FormData();\n        formData.append('file', file);\n        try {\n          submittingReview.value = true;\n          const response = await request.post('/files/images', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          if (response.code === 200) {\n            // Replace temporary preview with actual URL\n            const index = reviewPhotoPreviews.value.indexOf(tempUrl);\n            if (index !== -1) {\n              URL.revokeObjectURL(tempUrl);\n              reviewPhotoPreviews.value[index] = response.data;\n              reviewForm.value.photos.push(response.data);\n            }\n          } else {\n            // Upload failed, remove temporary preview\n            removePhoto(reviewPhotoPreviews.value.indexOf(tempUrl));\n            ElMessage.error('Failed to upload image');\n          }\n        } catch (error) {\n          // Upload failed, remove temporary preview\n          removePhoto(reviewPhotoPreviews.value.indexOf(tempUrl));\n          ElMessage.error('Failed to upload image');\n        } finally {\n          submittingReview.value = false;\n        }\n      }\n\n      // Clear input to allow uploading the same file again\n      e.target.value = '';\n    };\n\n    // Remove photo\n    const removePhoto = index => {\n      if (index < 0 || index >= reviewPhotoPreviews.value.length) return;\n      const previewUrl = reviewPhotoPreviews.value[index];\n      if (previewUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(previewUrl);\n      }\n      reviewPhotoPreviews.value.splice(index, 1);\n      reviewForm.value.photos.splice(index, 1);\n    };\n\n    // Upload video\n    const uploadVideo = async e => {\n      const file = e.target.files[0];\n      if (!file) return;\n      if (file.size > 50 * 1024 * 1024) {\n        ElMessage.warning('Video size cannot exceed 50MB');\n        return;\n      }\n\n      // Show temporary preview\n      const tempUrl = URL.createObjectURL(file);\n      reviewVideoPreview.value = tempUrl;\n\n      // Create FormData object\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        submittingReview.value = true;\n        const response = await request.post('/files/videos', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.code === 200) {\n          // Replace temporary preview with actual URL\n          URL.revokeObjectURL(tempUrl);\n          reviewVideoPreview.value = response.data;\n          reviewForm.value.videos = [response.data];\n        } else {\n          // Upload failed, remove temporary preview\n          removeVideo();\n          ElMessage.error('Failed to upload video');\n        }\n      } catch (error) {\n        // Upload failed, remove temporary preview\n        removeVideo();\n        ElMessage.error('Failed to upload video');\n      } finally {\n        submittingReview.value = false;\n      }\n\n      // Clear input to allow uploading the same file again\n      e.target.value = '';\n    };\n\n    // Remove video\n    const removeVideo = () => {\n      if (reviewVideoPreview.value && reviewVideoPreview.value.startsWith('blob:')) {\n        URL.revokeObjectURL(reviewVideoPreview.value);\n      }\n      reviewVideoPreview.value = null;\n      reviewForm.value.videos = [];\n    };\n\n    // Submit review\n    const submitReview = async () => {\n      // Validate content\n      contentError.value = '';\n      if (!reviewForm.value.content.trim()) {\n        contentError.value = 'Please enter your review content';\n        return;\n      }\n      submittingReview.value = true;\n      try {\n        // Convert photo array to string format: url|url|url\n        const photosString = reviewForm.value.photos.join('|');\n        // Convert video array to string format\n        const videosString = reviewForm.value.videos.join('|');\n        const response = await request.post('/reviews', {\n          id: reviewForm.value.id,\n          restaurantId: reviewForm.value.restaurantId,\n          content: reviewForm.value.content,\n          photos: photosString,\n          // Send as string format\n          videos: videosString,\n          // Send as string format\n          rating: reviewForm.value.rating\n        });\n        if (response.code === 200) {\n          ElMessage.success('Review submitted successfully');\n          reviewDialogVisible.value = false;\n\n          // Update current reservation's reviewed status\n          const index = reservations.value.findIndex(r => r.id === selectedReservation.value.id);\n          if (index !== -1) {\n            reservations.value[index].reviewed = true;\n          }\n        }\n      } catch (error) {\n        ElMessage.error('Failed to submit review');\n      } finally {\n        submittingReview.value = false;\n      }\n    };\n\n    // Go to explore page\n    const goToExplore = () => {\n      router.push('/explore');\n    };\n\n    // Handle page change\n    const handlePageChange = page => {\n      currentPage.value = page;\n      fetchReservations();\n    };\n\n    // Get reservation list when component is mounted\n    onMounted(() => {\n      fetchReservations();\n    });\n    const __returned__ = {\n      router,\n      loading,\n      reservations,\n      total,\n      currentPage,\n      pageSize,\n      selectedStatus,\n      cancelDialogVisible,\n      qrCodeDialogVisible,\n      reviewDialogVisible,\n      selectedReservation,\n      cancelling,\n      submittingReview,\n      cancelForm,\n      reviewForm,\n      contentError,\n      hoverRating,\n      reviewPhotoPreviews,\n      reviewVideoPreview,\n      photoInput,\n      videoInput,\n      statusOptions,\n      fetchReservations,\n      toggleStatus,\n      getStatusText,\n      getStatusClass,\n      getStatusCount,\n      formatDate,\n      showCancelDialog,\n      confirmCancel,\n      viewQRCode,\n      showReviewDialog,\n      getRatingText,\n      triggerPhotoUpload,\n      triggerVideoUpload,\n      uploadPhoto,\n      removePhoto,\n      uploadVideo,\n      removeVideo,\n      submitReview,\n      goToExplore,\n      handlePageChange,\n      ref,\n      onMounted,\n      computed,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      AppNavbar,\n      AppFooter,\n      get request() {\n        return request;\n      },\n      get Calendar() {\n        return Calendar;\n      },\n      get Clock() {\n        return Clock;\n      },\n      get Location() {\n        return Location;\n      },\n      get User() {\n        return User;\n      },\n      get Message() {\n        return Message;\n      },\n      get Warning() {\n        return Warning;\n      },\n      get ArrowRight() {\n        return ArrowRight;\n      },\n      get Ticket() {\n        return Ticket;\n      },\n      get Plus() {\n        return Plus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRouter","ElMessage","AppNavbar","AppFooter","request","Calendar","Clock","Location","User","Message","Warning","ArrowRight","Ticket","Plus","router","loading","reservations","total","currentPage","pageSize","selectedStatus","cancelDialogVisible","qrCodeDialogVisible","reviewDialogVisible","selectedReservation","cancelling","submittingReview","cancelForm","reason","reviewForm","id","restaurantId","rating","content","photos","videos","contentError","hoverRating","reviewPhotoPreviews","reviewVideoPreview","photoInput","videoInput","statusOptions","label","value","fetchReservations","response","get","params","page","status","join","code","data","list","map","item","restaurantName","restaurantPhoto","address","tableType","reservationDate","Date","reservationTime","toLocaleTimeString","hour","minute","numberOfGuests","personCount","specialRequests","remarks","statusValue","statusText","reservationCode","String","padStart","cancelReason","reviewed","error","toggleStatus","index","indexOf","splice","push","getStatusText","statusMap","getStatusClass","getStatusCount","filter","r","parseInt","length","formatDate","date","toLocaleDateString","year","month","day","weekday","showCancelDialog","reservation","confirmCancel","put","success","viewQRCode","showReviewDialog","getRatingText","texts","triggerPhotoUpload","click","triggerVideoUpload","uploadPhoto","e","files","target","remainingSlots","filesToUpload","Array","from","slice","file","size","warning","tempUrl","URL","createObjectURL","formData","FormData","append","post","headers","revokeObjectURL","removePhoto","previewUrl","startsWith","uploadVideo","removeVideo","submitReview","trim","photosString","videosString","findIndex","goToExplore","handlePageChange"],"sources":["/Users/taoyuxuan/Documents/RestaurantReservation/qd/src/views/Reservations.vue"],"sourcesContent":["<template>\r\n  <AppNavbar />\r\n  <div class=\"reservations-page\">\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-content\">\r\n        <h1 class=\"page-title\">My Reservations</h1>\r\n        <p class=\"page-subtitle\">Manage your restaurant booking records</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Content Area -->\r\n    <div class=\"page-content\">\r\n      <!-- Status Filter -->\r\n      <div class=\"filter-section\">\r\n        <div class=\"filter-tags\">\r\n          <el-tag\r\n            v-for=\"status in statusOptions\"\r\n            :key=\"status.value\"\r\n            :class=\"['status-tag', { active: selectedStatus.includes(status.value) }]\"\r\n            @click=\"toggleStatus(status.value)\"\r\n          >\r\n            {{ status.label }}\r\n            <span class=\"tag-count\" v-if=\"getStatusCount(status.value)\">\r\n              {{ getStatusCount(status.value) }}\r\n            </span>\r\n          </el-tag>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Loading State -->\r\n      <div v-if=\"loading\" class=\"loading-container\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p>Loading reservation records...</p>\r\n      </div>\r\n\r\n      <!-- No Reservation State -->\r\n      <div v-else-if=\"reservations.length === 0\" class=\"empty-state\">\r\n        <div class=\"empty-illustration\">\r\n          <el-icon><Calendar /></el-icon>\r\n        </div>\r\n        <h2>No Reservation Records</h2>\r\n        <p>You haven't made any restaurant reservations yet. Start exploring delicious food now!</p>\r\n        <el-button type=\"primary\" class=\"explore-button\" @click=\"goToExplore\">\r\n          Browse Restaurants\r\n          <el-icon class=\"el-icon--right\"><ArrowRight /></el-icon>\r\n        </el-button>\r\n      </div>\r\n\r\n      <!-- Reservation List -->\r\n      <div v-else class=\"reservations-list\">\r\n        <div \r\n          v-for=\"reservation in reservations\" \r\n          :key=\"reservation.id\" \r\n          class=\"reservation-card\"\r\n          :class=\"getStatusClass(reservation.status)\"\r\n        >\r\n          <div class=\"card-header\">\r\n            <div class=\"restaurant-info\">\r\n              <img :src=\"reservation.restaurantPhoto\" :alt=\"reservation.restaurantName\" class=\"restaurant-photo\">\r\n              <div class=\"info-content\">\r\n                <h3>{{ reservation.restaurantName }}</h3>\r\n                <p class=\"address\">\r\n                  <el-icon><Location /></el-icon>\r\n                  Table Type: {{ reservation.address }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"status-badge\" :class=\"getStatusClass(reservation.status)\">\r\n              {{ reservation.statusText }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"card-content\">\r\n            <div class=\"reservation-details\">\r\n              <div class=\"detail-item\">\r\n                <el-icon><Calendar /></el-icon>\r\n                <span>Reservation Date: {{ formatDate(reservation.reservationDate) }}</span>\r\n              </div>\r\n              <div class=\"detail-item\">\r\n                <el-icon><Clock /></el-icon>\r\n                <span>Reservation Time: {{ reservation.reservationTime }}</span>\r\n              </div>\r\n              <div class=\"detail-item\">\r\n                <el-icon><User /></el-icon>\r\n                <span>Number of Guests: {{ reservation.numberOfGuests }}</span>\r\n              </div>\r\n              <div class=\"detail-item\" v-if=\"reservation.specialRequests\">\r\n                <el-icon><Message /></el-icon>\r\n                <span>Special Requests: {{ reservation.specialRequests }}</span>\r\n              </div>\r\n              <div class=\"detail-item reservation-code\">\r\n                <el-icon><Ticket /></el-icon>\r\n                <span>Reservation Code: {{ reservation.reservationCode }}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card-actions\">\r\n              <el-button \r\n                v-if=\"reservation.status === 1 || reservation.status === 2\"\r\n                type=\"danger\" \r\n                plain\r\n                @click=\"showCancelDialog(reservation)\"\r\n              >\r\n                Cancel Reservation\r\n              </el-button>\r\n              <el-button \r\n                v-if=\"reservation.status === 2\"\r\n                type=\"primary\"\r\n                @click=\"viewQRCode(reservation)\"\r\n              >\r\n                View QR Code\r\n              </el-button>\r\n              <el-button \r\n                v-if=\"reservation.status === 3 && !reservation.reviewed\"\r\n                type=\"success\"\r\n                @click=\"showReviewDialog(reservation)\"\r\n              >\r\n                Write Review\r\n              </el-button>\r\n              <el-button \r\n                v-if=\"reservation.status === 3 && reservation.reviewed\"\r\n                type=\"info\"\r\n                plain\r\n                disabled\r\n              >\r\n                Reviewed\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 分页 -->\r\n        <div class=\"pagination-container\" v-if=\"total > pageSize\">\r\n          <el-pagination\r\n            v-model:current-page=\"currentPage\"\r\n            :page-size=\"pageSize\"\r\n            :total=\"total\"\r\n            layout=\"prev, pager, next\"\r\n            @current-change=\"handlePageChange\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Cancel Reservation Dialog -->\r\n  <el-dialog\r\n    v-model=\"cancelDialogVisible\"\r\n    title=\"Cancel Reservation\"\r\n    width=\"30%\"\r\n    class=\"cancel-dialog\"\r\n  >\r\n    <div class=\"cancel-content\">\r\n      <p class=\"cancel-warning\">\r\n        <el-icon class=\"warning-icon\"><Warning /></el-icon>\r\n        Are you sure you want to cancel this reservation? This action cannot be undone.\r\n      </p>\r\n      <el-form :model=\"cancelForm\" label-position=\"top\">\r\n        <el-form-item label=\"Cancellation Reason\">\r\n          <el-input\r\n            v-model=\"cancelForm.reason\"\r\n            type=\"textarea\"\r\n            rows=\"3\"\r\n            placeholder=\"Please briefly explain the reason for cancellation (optional)\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"cancelDialogVisible = false\">Back</el-button>\r\n        <el-button type=\"danger\" @click=\"confirmCancel\" :loading=\"cancelling\">\r\n          Confirm Cancel\r\n        </el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n\r\n  <!-- Reservation Code Dialog -->\r\n  <el-dialog\r\n    v-model=\"qrCodeDialogVisible\"\r\n    title=\"Reservation QR Code\"\r\n    width=\"30%\"\r\n    class=\"qrcode-dialog\"\r\n  >\r\n    <div class=\"qrcode-content\">\r\n      <div class=\"qrcode-container\">\r\n        <div class=\"qrcode-placeholder\">\r\n          Reservation Code: {{ selectedReservation?.reservationCode }}\r\n        </div>\r\n      </div>\r\n      <p class=\"qrcode-tip\">Please show this QR code when you arrive at the restaurant</p>\r\n    </div>\r\n  </el-dialog>\r\n\r\n  <!-- Review Dialog -->\r\n  <el-dialog\r\n    v-model=\"reviewDialogVisible\"\r\n    title=\"Write a Review\"\r\n    width=\"40%\"\r\n    class=\"review-dialog\"\r\n  >\r\n    <div class=\"review-content\">\r\n      <h3 class=\"review-restaurant-name\">{{ selectedReservation?.restaurantName }}</h3>\r\n      \r\n      <div class=\"custom-review-form\">\r\n        <div class=\"form-section\">\r\n          <label class=\"form-label\">Rating</label>\r\n          <div class=\"custom-rating\">\r\n            <div \r\n              v-for=\"star in 5\" \r\n              :key=\"star\" \r\n              class=\"rating-star\" \r\n              :class=\"{ active: star <= reviewForm.rating }\"\r\n              @click=\"reviewForm.rating = star\"\r\n              @mouseover=\"hoverRating = star\"\r\n              @mouseleave=\"hoverRating = 0\"\r\n            >\r\n              <svg viewBox=\"0 0 24 24\" class=\"star-icon\" :class=\"{ 'hover': star <= hoverRating && star > reviewForm.rating }\">\r\n                <path d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\" />\r\n              </svg>\r\n            </div>\r\n            <span class=\"rating-text\">{{ getRatingText(hoverRating || reviewForm.rating) }}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"form-section\">\r\n          <label class=\"form-label\">Your Review</label>\r\n          <textarea \r\n            v-model=\"reviewForm.content\" \r\n            class=\"custom-textarea\" \r\n            placeholder=\"Share your dining experience...\"\r\n            rows=\"4\"\r\n            :class=\"{ 'error': contentError }\"\r\n          ></textarea>\r\n          <span class=\"error-message\" v-if=\"contentError\">{{ contentError }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-section\">\r\n          <label class=\"form-label\">Upload Photos (Optional, max 3)</label>\r\n          <div class=\"custom-upload-area\">\r\n            <div class=\"upload-preview\">\r\n              <div \r\n                v-for=\"(photo, index) in reviewPhotoPreviews\" \r\n                :key=\"index\" \r\n                class=\"preview-item\"\r\n              >\r\n                <img :src=\"photo\" class=\"preview-image\" />\r\n                <button type=\"button\" class=\"remove-btn\" @click=\"removePhoto(index)\">\r\n                  <svg viewBox=\"0 0 24 24\" class=\"remove-icon\">\r\n                    <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              <div \r\n                v-if=\"reviewPhotoPreviews.length < 3\" \r\n                class=\"upload-btn\"\r\n                @click=\"triggerPhotoUpload\"\r\n              >\r\n                <svg viewBox=\"0 0 24 24\" class=\"upload-icon\">\r\n                  <path d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\r\n                </svg>\r\n                <span>Add Photo</span>\r\n                <input \r\n                  type=\"file\"\r\n                  ref=\"photoInput\"\r\n                  accept=\"image/*\"\r\n                  style=\"display: none\"\r\n                  @change=\"uploadPhoto\"\r\n                  multiple\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"form-section\">\r\n          <label class=\"form-label\">Upload Video (Optional, max 1)</label>\r\n          <div class=\"custom-video-upload\">\r\n            <div v-if=\"reviewVideoPreview\" class=\"video-preview\">\r\n              <video :src=\"reviewVideoPreview\" controls class=\"preview-video\"></video>\r\n              <button type=\"button\" class=\"remove-btn\" @click=\"removeVideo\">\r\n                <svg viewBox=\"0 0 24 24\" class=\"remove-icon\">\r\n                  <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            <div v-else class=\"video-upload-btn\" @click=\"triggerVideoUpload\">\r\n              <svg viewBox=\"0 0 24 24\" class=\"upload-icon\">\r\n                <path d=\"M17,10.5V7A1,1 0 0,0 16,6H4A1,1 0 0,0 3,7V17A1,1 0 0,0 4,18H16A1,1 0 0,0 17,17V13.5L21,17.5V6.5L17,10.5Z\" />\r\n              </svg>\r\n              <span>Add Video</span>\r\n              <input \r\n                type=\"file\"\r\n                ref=\"videoInput\"\r\n                accept=\"video/*\"\r\n                style=\"display: none\"\r\n                @change=\"uploadVideo\"\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"review-actions\">\r\n      <button class=\"cancel-btn\" @click=\"reviewDialogVisible = false\">Cancel</button>\r\n      <button \r\n        class=\"submit-btn\" \r\n        @click=\"submitReview\" \r\n        :disabled=\"submittingReview\"\r\n      >\r\n        <span v-if=\"submittingReview\" class=\"loading-spinner\"></span>\r\n        <span>{{ submittingReview ? 'Submitting...' : 'Submit Review' }}</span>\r\n      </button>\r\n    </div>\r\n  </el-dialog>\r\n\r\n  <AppFooter />\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElMessage } from 'element-plus';\r\nimport AppNavbar from '@/components/AppNavbar.vue';\r\nimport AppFooter from '@/components/AppFooter.vue';\r\nimport request from '@/utils/request';\r\nimport { \r\n  Calendar,\r\n  Clock,\r\n  Location,\r\n  User,\r\n  Message,\r\n  Warning,\r\n  ArrowRight,\r\n  Ticket,\r\n  Plus\r\n} from '@element-plus/icons-vue';\r\n\r\nconst router = useRouter();\r\nconst loading = ref(false);\r\nconst reservations = ref([]);\r\nconst total = ref(0);\r\nconst currentPage = ref(1);\r\nconst pageSize = ref(10);\r\nconst selectedStatus = ref(['1', '2']); \r\nconst cancelDialogVisible = ref(false);\r\nconst qrCodeDialogVisible = ref(false);\r\nconst reviewDialogVisible = ref(false);\r\nconst selectedReservation = ref(null);\r\nconst cancelling = ref(false);\r\nconst submittingReview = ref(false);\r\nconst cancelForm = ref({\r\n  reason: ''\r\n});\r\nconst reviewForm = ref({\r\n  id: null,\r\n  restaurantId: null,\r\n  rating: 5,\r\n  content: '',\r\n  photos: [],\r\n  videos: []\r\n});\r\nconst contentError = ref('');\r\nconst hoverRating = ref(0);\r\nconst reviewPhotoPreviews = ref([]);\r\nconst reviewVideoPreview = ref(null);\r\nconst photoInput = ref(null);\r\nconst videoInput = ref(null);\r\n\r\n// Status options\r\nconst statusOptions = [\r\n  { label: 'Pending', value: '1' },\r\n  { label: 'Confirmed', value: '2' },\r\n  { label: 'Completed', value: '3' },\r\n  { label: 'Cancelled', value: '0' },\r\n  { label: 'Rejected', value: '4' }\r\n];\r\n\r\n// Get reservation list\r\nconst fetchReservations = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const response = await request.get('/reservations', {\r\n      params: {\r\n        page: currentPage.value,\r\n        pageSize: pageSize.value,\r\n        status: selectedStatus.value.join(',')\r\n      }\r\n    });\r\n    \r\n    if (response.code === 200) {\r\n      // Process data format\r\n      reservations.value = response.data.list.map(item => ({\r\n        id: item.id,\r\n        restaurantId: item.restaurantId,\r\n        restaurantName: item.restaurantName,\r\n        restaurantPhoto: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?q=80&w=2070&auto=format&fit=crop', // Default image\r\n        address: item.tableType, \r\n        reservationDate: new Date(item.reservationTime),\r\n        reservationTime: new Date(item.reservationTime).toLocaleTimeString('zh-CN', {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        }),\r\n        numberOfGuests: item.personCount,\r\n        specialRequests: item.remarks,\r\n        status: item.statusValue,\r\n        statusText: item.statusText,\r\n        reservationCode: `RES${String(item.id).padStart(6, '0')}`, // Generate reservation code\r\n        cancelReason: item.cancelReason,\r\n        reviewed: item.reviewed || false\r\n      }));\r\n      total.value = response.data.total;\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('Failed to load reservation records');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// Toggle status filter\r\nconst toggleStatus = (status) => {\r\n  const index = selectedStatus.value.indexOf(status);\r\n  if (index > -1) {\r\n    selectedStatus.value.splice(index, 1);\r\n  } else {\r\n    selectedStatus.value.push(status);\r\n  }\r\n  currentPage.value = 1;\r\n  fetchReservations();\r\n};\r\n\r\n// Get status text\r\nconst getStatusText = (status) => {\r\n  const statusMap = {\r\n    1: 'Pending',\r\n    2: 'Confirmed',\r\n    3: 'Completed',\r\n    0: 'Cancelled',\r\n    4: 'Rejected'\r\n  };\r\n  return statusMap[status] || 'Unknown Status';\r\n};\r\n\r\n// Get status class name\r\nconst getStatusClass = (status) => {\r\n  const statusMap = {\r\n    0: 'cancelled',\r\n    1: 'pending',\r\n    2: 'confirmed',\r\n    3: 'completed',\r\n    4: 'rejected'\r\n  };\r\n  return statusMap[status] || '';\r\n};\r\n\r\n// Get count for each status\r\nconst getStatusCount = (status) => {\r\n  return reservations.value.filter(r => r.status === parseInt(status)).length;\r\n};\r\n\r\n// Format date\r\nconst formatDate = (date) => {\r\n  return new Date(date).toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n  });\r\n};\r\n\r\n// Show cancel dialog\r\nconst showCancelDialog = (reservation) => {\r\n  selectedReservation.value = reservation;\r\n  cancelDialogVisible.value = true;\r\n};\r\n\r\n// Confirm cancel reservation\r\nconst confirmCancel = async () => {\r\n  if (!selectedReservation.value) return;\r\n  \r\n  cancelling.value = true;\r\n  try {\r\n    const response = await request.put(\r\n      `/reservations/${selectedReservation.value.id}/cancel`,\r\n      { reason: cancelForm.value.reason }\r\n    );\r\n    \r\n    if (response.code === 200) {\r\n      ElMessage.success('Reservation cancelled successfully');\r\n      cancelDialogVisible.value = false;\r\n      fetchReservations();\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('Failed to cancel reservation');\r\n  } finally {\r\n    cancelling.value = false;\r\n  }\r\n};\r\n\r\n// View reservation code\r\nconst viewQRCode = (reservation) => {\r\n  selectedReservation.value = reservation;\r\n  qrCodeDialogVisible.value = true;\r\n};\r\n\r\n// Show review dialog\r\nconst showReviewDialog = (reservation) => {\r\n  selectedReservation.value = reservation;\r\n  reviewForm.value = {\r\n    id: reservation.id,\r\n    restaurantId: reservation.restaurantId,\r\n    rating: 5,\r\n    content: '',\r\n    photos: [],\r\n    videos: []\r\n  };\r\n  reviewPhotoPreviews.value = [];\r\n  reviewVideoPreview.value = null;\r\n  contentError.value = '';\r\n  reviewDialogVisible.value = true;\r\n};\r\n\r\n// Get rating text\r\nconst getRatingText = (rating) => {\r\n  const texts = ['Very Poor', 'Poor', 'Fair', 'Good', 'Excellent'];\r\n  return texts[rating - 1] || '';\r\n};\r\n\r\n// Trigger photo upload\r\nconst triggerPhotoUpload = () => {\r\n  photoInput.value.click();\r\n};\r\n\r\n// Trigger video upload\r\nconst triggerVideoUpload = () => {\r\n  videoInput.value.click();\r\n};\r\n\r\n// Upload photo\r\nconst uploadPhoto = async (e) => {\r\n  const files = e.target.files;\r\n  if (!files || files.length === 0) return;\r\n  \r\n  const remainingSlots = 3 - reviewPhotoPreviews.value.length;\r\n  const filesToUpload = Array.from(files).slice(0, remainingSlots);\r\n  \r\n  for (const file of filesToUpload) {\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      ElMessage.warning('Image size cannot exceed 5MB');\r\n      continue;\r\n    }\r\n    \r\n    // Show temporary preview\r\n    const tempUrl = URL.createObjectURL(file);\r\n    reviewPhotoPreviews.value.push(tempUrl);\r\n    \r\n    // Create FormData object\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    try {\r\n      submittingReview.value = true;\r\n      const response = await request.post('/files/images', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      \r\n      if (response.code === 200) {\r\n        // Replace temporary preview with actual URL\r\n        const index = reviewPhotoPreviews.value.indexOf(tempUrl);\r\n        if (index !== -1) {\r\n          URL.revokeObjectURL(tempUrl);\r\n          reviewPhotoPreviews.value[index] = response.data;\r\n          reviewForm.value.photos.push(response.data);\r\n        }\r\n      } else {\r\n        // Upload failed, remove temporary preview\r\n        removePhoto(reviewPhotoPreviews.value.indexOf(tempUrl));\r\n        ElMessage.error('Failed to upload image');\r\n      }\r\n    } catch (error) {\r\n      // Upload failed, remove temporary preview\r\n      removePhoto(reviewPhotoPreviews.value.indexOf(tempUrl));\r\n      ElMessage.error('Failed to upload image');\r\n    } finally {\r\n      submittingReview.value = false;\r\n    }\r\n  }\r\n  \r\n  // Clear input to allow uploading the same file again\r\n  e.target.value = '';\r\n};\r\n\r\n// Remove photo\r\nconst removePhoto = (index) => {\r\n  if (index < 0 || index >= reviewPhotoPreviews.value.length) return;\r\n  \r\n  const previewUrl = reviewPhotoPreviews.value[index];\r\n  if (previewUrl.startsWith('blob:')) {\r\n    URL.revokeObjectURL(previewUrl);\r\n  }\r\n  \r\n  reviewPhotoPreviews.value.splice(index, 1);\r\n  reviewForm.value.photos.splice(index, 1);\r\n};\r\n\r\n// Upload video\r\nconst uploadVideo = async (e) => {\r\n  const file = e.target.files[0];\r\n  if (!file) return;\r\n  \r\n  if (file.size > 50 * 1024 * 1024) {\r\n    ElMessage.warning('Video size cannot exceed 50MB');\r\n    return;\r\n  }\r\n  \r\n  // Show temporary preview\r\n  const tempUrl = URL.createObjectURL(file);\r\n  reviewVideoPreview.value = tempUrl;\r\n  \r\n  // Create FormData object\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  \r\n  try {\r\n    submittingReview.value = true;\r\n    const response = await request.post('/files/videos', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n    \r\n    if (response.code === 200) {\r\n      // Replace temporary preview with actual URL\r\n      URL.revokeObjectURL(tempUrl);\r\n      reviewVideoPreview.value = response.data;\r\n      reviewForm.value.videos = [response.data];\r\n    } else {\r\n      // Upload failed, remove temporary preview\r\n      removeVideo();\r\n      ElMessage.error('Failed to upload video');\r\n    }\r\n  } catch (error) {\r\n    // Upload failed, remove temporary preview\r\n    removeVideo();\r\n    ElMessage.error('Failed to upload video');\r\n  } finally {\r\n    submittingReview.value = false;\r\n  }\r\n  \r\n  // Clear input to allow uploading the same file again\r\n  e.target.value = '';\r\n};\r\n\r\n// Remove video\r\nconst removeVideo = () => {\r\n  if (reviewVideoPreview.value && reviewVideoPreview.value.startsWith('blob:')) {\r\n    URL.revokeObjectURL(reviewVideoPreview.value);\r\n  }\r\n  \r\n  reviewVideoPreview.value = null;\r\n  reviewForm.value.videos = [];\r\n};\r\n\r\n// Submit review\r\nconst submitReview = async () => {\r\n  // Validate content\r\n  contentError.value = '';\r\n  if (!reviewForm.value.content.trim()) {\r\n    contentError.value = 'Please enter your review content';\r\n    return;\r\n  }\r\n  \r\n  submittingReview.value = true;\r\n  try {\r\n    // Convert photo array to string format: url|url|url\r\n    const photosString = reviewForm.value.photos.join('|');\r\n    // Convert video array to string format\r\n    const videosString = reviewForm.value.videos.join('|');\r\n    \r\n    const response = await request.post('/reviews', {\r\n      id: reviewForm.value.id,\r\n      restaurantId: reviewForm.value.restaurantId,\r\n      content: reviewForm.value.content,\r\n      photos: photosString,  // Send as string format\r\n      videos: videosString,  // Send as string format\r\n      rating: reviewForm.value.rating\r\n    });\r\n    \r\n    if (response.code === 200) {\r\n      ElMessage.success('Review submitted successfully');\r\n      reviewDialogVisible.value = false;\r\n      \r\n      // Update current reservation's reviewed status\r\n      const index = reservations.value.findIndex(r => r.id === selectedReservation.value.id);\r\n      if (index !== -1) {\r\n        reservations.value[index].reviewed = true;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('Failed to submit review');\r\n  } finally {\r\n    submittingReview.value = false;\r\n  }\r\n};\r\n\r\n// Go to explore page\r\nconst goToExplore = () => {\r\n  router.push('/explore');\r\n};\r\n\r\n// Handle page change\r\nconst handlePageChange = (page) => {\r\n  currentPage.value = page;\r\n  fetchReservations();\r\n};\r\n\r\n// Get reservation list when component is mounted\r\nonMounted(() => {\r\n  fetchReservations();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// Variables\r\n$primary-color: #ff4757;\r\n$secondary-color: #f8f1ff;\r\n$accent-color: #6c5ce7;\r\n$dark-color: #2d3436;\r\n$light-color: #f9f9f9;\r\n$gray-color: #636e72;\r\n\r\n// Status colors\r\n$status-pending: #f39c12;\r\n$status-confirmed: #2ecc71;\r\n$status-completed: #3498db;\r\n$status-cancelled: #95a5a6;\r\n$status-rejected: #e74c3c;\r\n\r\n// Page base styles\r\n.reservations-page {\r\n  padding-top: 70px;\r\n  min-height: 100vh;\r\n  background-color: #fcfcfc;\r\n}\r\n\r\n// Page header\r\n.page-header {\r\n  background: linear-gradient(135deg, $secondary-color, #fff);\r\n  padding: 60px 20px;\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n\r\n  .page-title {\r\n    font-size: 36px;\r\n    font-weight: 800;\r\n    margin: 0 0 10px;\r\n    background: linear-gradient(135deg, $dark-color, $primary-color);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n\r\n  .page-subtitle {\r\n    font-size: 16px;\r\n    color: $gray-color;\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n// Page content\r\n.page-content {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 20px 50px;\r\n}\r\n\r\n// Status filter\r\n.filter-section {\r\n  margin-bottom: 30px;\r\n\r\n  .filter-tags {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 10px;\r\n\r\n    .status-tag {\r\n      cursor: pointer;\r\n      padding: 8px 16px;\r\n      border-radius: 20px;\r\n      font-size: 14px;\r\n      transition: all 0.3s ease;\r\n      user-select: none;\r\n      \r\n      &.active {\r\n        background-color: $primary-color;\r\n        color: white;\r\n        border-color: $primary-color;\r\n      }\r\n\r\n      .tag-count {\r\n        margin-left: 5px;\r\n        font-size: 12px;\r\n        opacity: 0.8;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Reservation card\r\n.reservation-card {\r\n  background: white;\r\n  border-radius: 16px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\r\n  overflow: hidden;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .card-header {\r\n    padding: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.05);\r\n\r\n    .restaurant-info {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 15px;\r\n\r\n      .restaurant-photo {\r\n        width: 60px;\r\n        height: 60px;\r\n        border-radius: 8px;\r\n        object-fit: cover;\r\n      }\r\n\r\n      .info-content {\r\n        h3 {\r\n          margin: 0 0 5px;\r\n          font-size: 18px;\r\n          color: $dark-color;\r\n        }\r\n\r\n        .address {\r\n          margin: 0;\r\n          font-size: 14px;\r\n          color: $gray-color;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 5px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .status-badge {\r\n      padding: 6px 12px;\r\n      border-radius: 20px;\r\n      font-size: 12px;\r\n      font-weight: 500;\r\n\r\n      &.pending {\r\n        background-color: rgba($status-pending, 0.1);\r\n        color: $status-pending;\r\n      }\r\n\r\n      &.confirmed {\r\n        background-color: rgba($status-confirmed, 0.1);\r\n        color: $status-confirmed;\r\n      }\r\n\r\n      &.completed {\r\n        background-color: rgba($status-completed, 0.1);\r\n        color: $status-completed;\r\n      }\r\n\r\n      &.cancelled {\r\n        background-color: rgba($status-cancelled, 0.1);\r\n        color: $status-cancelled;\r\n      }\r\n\r\n      &.rejected {\r\n        background-color: rgba($status-rejected, 0.1);\r\n        color: $status-rejected;\r\n      }\r\n    }\r\n  }\r\n\r\n  .card-content {\r\n    padding: 20px;\r\n\r\n    .reservation-details {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n      gap: 15px;\r\n      margin-bottom: 20px;\r\n\r\n      .detail-item {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        color: $gray-color;\r\n        font-size: 14px;\r\n\r\n        .el-icon {\r\n          color: $primary-color;\r\n        }\r\n      }\r\n\r\n      .reservation-code {\r\n        grid-column: 1 / -1;\r\n        background: rgba($primary-color, 0.05);\r\n        padding: 10px;\r\n        border-radius: 8px;\r\n        margin-top: 10px;\r\n        \r\n        .el-icon {\r\n          color: $primary-color;\r\n        }\r\n      }\r\n    }\r\n\r\n    .card-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n// Loading state\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 60px 0;\r\n\r\n  .loading-spinner {\r\n    width: 40px;\r\n    height: 40px;\r\n    border: 3px solid rgba($primary-color, 0.1);\r\n    border-radius: 50%;\r\n    border-top-color: $primary-color;\r\n    animation: spin 1s linear infinite;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  p {\r\n    color: $gray-color;\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n// Empty state\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\r\n\r\n  .empty-illustration {\r\n    font-size: 60px;\r\n    color: $primary-color;\r\n    margin-bottom: 20px;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 24px;\r\n    color: $dark-color;\r\n    margin: 0 0 10px;\r\n  }\r\n\r\n  p {\r\n    color: $gray-color;\r\n    margin: 0 0 30px;\r\n  }\r\n\r\n  .explore-button {\r\n    padding: 12px 30px;\r\n  }\r\n}\r\n\r\n// Cancel dialog\r\n.cancel-dialog {\r\n  .cancel-warning {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    color: $status-rejected;\r\n    margin-bottom: 20px;\r\n\r\n    .warning-icon {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n}\r\n\r\n// Reservation code dialog\r\n.qrcode-dialog {\r\n  .qrcode-content {\r\n    text-align: center;\r\n\r\n    .qrcode-container {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .qrcode-tip {\r\n      color: $gray-color;\r\n      font-size: 14px;\r\n      margin: 0;\r\n    }\r\n  }\r\n}\r\n\r\n// Review dialog\r\n.review-dialog {\r\n  :deep(.el-dialog__header) {\r\n    display: none;\r\n  }\r\n  \r\n  :deep(.el-dialog__body) {\r\n    padding: 0;\r\n  }\r\n  \r\n  :deep(.el-dialog__footer) {\r\n    display: none;\r\n  }\r\n  \r\n  :deep(.el-dialog) {\r\n    border-radius: 16px;\r\n    overflow: hidden;\r\n    background: linear-gradient(to bottom, #fff5f6, #fff);\r\n  }\r\n  \r\n  .review-content {\r\n    padding: 30px;\r\n    \r\n    .review-restaurant-name {\r\n      font-size: 24px;\r\n      font-weight: 700;\r\n      color: $dark-color;\r\n      margin: 0 0 25px;\r\n      text-align: center;\r\n      position: relative;\r\n      \r\n      &:after {\r\n        content: '';\r\n        position: absolute;\r\n        bottom: -10px;\r\n        left: 50%;\r\n        width: 50px;\r\n        height: 3px;\r\n        background: linear-gradient(to right, $primary-color, lighten($primary-color, 20%));\r\n        transform: translateX(-50%);\r\n        border-radius: 3px;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .custom-review-form {\r\n    .form-section {\r\n      margin-bottom: 25px;\r\n      \r\n      .form-label {\r\n        display: block;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        margin-bottom: 12px;\r\n        color: $dark-color;\r\n      }\r\n      \r\n      .custom-rating {\r\n        display: flex;\r\n        align-items: center;\r\n        \r\n        .rating-star {\r\n          cursor: pointer;\r\n          margin-right: 5px;\r\n          width: 40px;\r\n          height: 40px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          \r\n          .star-icon {\r\n            width: 30px;\r\n            height: 30px;\r\n            fill: #ddd;\r\n            transition: all 0.2s ease;\r\n            \r\n            &.hover {\r\n              fill: #FFD700;\r\n              transform: scale(1.1);\r\n            }\r\n          }\r\n          \r\n          &.active .star-icon {\r\n            fill: #FFD700;\r\n          }\r\n          \r\n          &:hover {\r\n            transform: scale(1.1);\r\n          }\r\n        }\r\n        \r\n        .rating-text {\r\n          margin-left: 15px;\r\n          font-size: 16px;\r\n          color: $dark-color;\r\n          font-weight: 500;\r\n        }\r\n      }\r\n      \r\n      .custom-textarea {\r\n        width: 100%;\r\n        padding: 15px;\r\n        border-radius: 12px;\r\n        border: 2px solid rgba(0,0,0,0.1);\r\n        background-color: rgba(255,255,255,0.8);\r\n        font-size: 16px;\r\n        transition: all 0.3s ease;\r\n        resize: vertical;\r\n        min-height: 120px;\r\n        box-shadow: inset 0 2px 4px rgba(0,0,0,0.05);\r\n        \r\n        &:focus {\r\n          border-color: $primary-color;\r\n          box-shadow: 0 0 0 3px rgba($primary-color, 0.2);\r\n          outline: none;\r\n        }\r\n        \r\n        &.error {\r\n          border-color: $status-rejected;\r\n          box-shadow: 0 0 0 3px rgba($status-rejected, 0.2);\r\n        }\r\n      }\r\n      \r\n      .error-message {\r\n        color: $status-rejected;\r\n        font-size: 14px;\r\n        display: block;\r\n        margin-top: 5px;\r\n      }\r\n      \r\n      .custom-upload-area {\r\n        .upload-preview {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 15px;\r\n          \r\n          .preview-item {\r\n            width: 120px;\r\n            height: 120px;\r\n            border-radius: 12px;\r\n            overflow: hidden;\r\n            position: relative;\r\n            box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n            \r\n            .preview-image {\r\n              width: 100%;\r\n              height: 100%;\r\n              object-fit: cover;\r\n              transition: transform 0.3s ease;\r\n            }\r\n            \r\n            &:hover .preview-image {\r\n              transform: scale(1.05);\r\n            }\r\n            \r\n            .remove-btn {\r\n              position: absolute;\r\n              top: 5px;\r\n              right: 5px;\r\n              width: 24px;\r\n              height: 24px;\r\n              border-radius: 50%;\r\n              background: rgba(0,0,0,0.5);\r\n              border: none;\r\n              display: flex;\r\n              align-items: center;\r\n              justify-content: center;\r\n              cursor: pointer;\r\n              opacity: 0;\r\n              transition: all 0.2s ease;\r\n              \r\n              .remove-icon {\r\n                width: 16px;\r\n                height: 16px;\r\n                fill: white;\r\n              }\r\n            }\r\n            \r\n            &:hover .remove-btn {\r\n              opacity: 1;\r\n            }\r\n          }\r\n          \r\n          .upload-btn {\r\n            width: 120px;\r\n            height: 120px;\r\n            border-radius: 12px;\r\n            border: 2px dashed rgba(0,0,0,0.1);\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            justify-content: center;\r\n            cursor: pointer;\r\n            transition: all 0.3s ease;\r\n            background-color: rgba(255,255,255,0.5);\r\n            \r\n            .upload-icon {\r\n              width: 30px;\r\n              height: 30px;\r\n              fill: $primary-color;\r\n              margin-bottom: 8px;\r\n            }\r\n            \r\n            span {\r\n              font-size: 14px;\r\n              color: $gray-color;\r\n            }\r\n            \r\n            &:hover {\r\n              border-color: $primary-color;\r\n              background-color: rgba($primary-color, 0.05);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      .custom-video-upload {\r\n        .video-preview {\r\n          position: relative;\r\n          width: 100%;\r\n          max-width: 400px;\r\n          border-radius: 12px;\r\n          overflow: hidden;\r\n          box-shadow: 0 4px 15px rgba(0,0,0,0.1);\r\n          \r\n          .preview-video {\r\n            width: 100%;\r\n            display: block;\r\n          }\r\n          \r\n          .remove-btn {\r\n            position: absolute;\r\n            top: 10px;\r\n            right: 10px;\r\n            width: 30px;\r\n            height: 30px;\r\n            border-radius: 50%;\r\n            background: rgba(0,0,0,0.5);\r\n            border: none;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            cursor: pointer;\r\n            transition: all 0.2s ease;\r\n            \r\n            .remove-icon {\r\n              width: 20px;\r\n              height: 20px;\r\n              fill: white;\r\n            }\r\n            \r\n            &:hover {\r\n              background: rgba(0,0,0,0.7);\r\n              transform: scale(1.1);\r\n            }\r\n          }\r\n        }\r\n        \r\n        .video-upload-btn {\r\n          width: 100%;\r\n          max-width: 400px;\r\n          height: 150px;\r\n          border-radius: 12px;\r\n          border: 2px dashed rgba(0,0,0,0.1);\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          justify-content: center;\r\n          cursor: pointer;\r\n          transition: all 0.3s ease;\r\n          background-color: rgba(255,255,255,0.5);\r\n          \r\n          .upload-icon {\r\n            width: 40px;\r\n            height: 40px;\r\n            fill: $primary-color;\r\n            margin-bottom: 10px;\r\n          }\r\n          \r\n          span {\r\n            font-size: 16px;\r\n            color: $gray-color;\r\n          }\r\n          \r\n          &:hover {\r\n            border-color: $primary-color;\r\n            background-color: rgba($primary-color, 0.05);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .review-actions {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    padding: 20px 30px 30px;\r\n    gap: 15px;\r\n    \r\n    .cancel-btn {\r\n      padding: 12px 25px;\r\n      border-radius: 30px;\r\n      border: none;\r\n      background-color: #f1f1f1;\r\n      color: $gray-color;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n      \r\n      &:hover {\r\n        background-color: #e5e5e5;\r\n      }\r\n    }\r\n    \r\n    .submit-btn {\r\n      padding: 12px 30px;\r\n      border-radius: 30px;\r\n      border: none;\r\n      background: linear-gradient(135deg, $primary-color, lighten($primary-color, 10%));\r\n      color: white;\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-width: 120px;\r\n      \r\n      &:hover {\r\n        transform: translateY(-2px);\r\n        box-shadow: 0 4px 15px rgba($primary-color, 0.4);\r\n      }\r\n      \r\n      &:disabled {\r\n        opacity: 0.7;\r\n        cursor: not-allowed;\r\n        transform: none;\r\n        box-shadow: none;\r\n      }\r\n      \r\n      .loading-spinner {\r\n        width: 20px;\r\n        height: 20px;\r\n        border: 2px solid rgba(255, 255, 255, 0.3);\r\n        border-radius: 50%;\r\n        border-top-color: white;\r\n        animation: spin 1s linear infinite;\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Animation\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n// Responsive styles\r\n@media (max-width: 768px) {\r\n  .page-header {\r\n    padding: 40px 20px;\r\n\r\n    .page-title {\r\n      font-size: 28px;\r\n    }\r\n  }\r\n\r\n  .reservation-card {\r\n    .card-header {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n      gap: 15px;\r\n\r\n      .status-badge {\r\n        align-self: flex-start;\r\n      }\r\n    }\r\n\r\n    .card-content {\r\n      .reservation-details {\r\n        grid-template-columns: 1fr;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"AAkUA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SACEC,QAAQ,EACRC,KAAK,EACLC,QAAQ,EACRC,IAAI,EACJC,OAAO,EACPC,OAAO,EACPC,UAAU,EACVC,MAAM,EACNC,IAAI,QACC,yBAAyB;;;;;;;IAEhC,MAAMC,MAAM,GAAGd,SAAS,CAAC,CAAC;IAC1B,MAAMe,OAAO,GAAGlB,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMmB,YAAY,GAAGnB,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMoB,KAAK,GAAGpB,GAAG,CAAC,CAAC,CAAC;IACpB,MAAMqB,WAAW,GAAGrB,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMsB,QAAQ,GAAGtB,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMuB,cAAc,GAAGvB,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACtC,MAAMwB,mBAAmB,GAAGxB,GAAG,CAAC,KAAK,CAAC;IACtC,MAAMyB,mBAAmB,GAAGzB,GAAG,CAAC,KAAK,CAAC;IACtC,MAAM0B,mBAAmB,GAAG1B,GAAG,CAAC,KAAK,CAAC;IACtC,MAAM2B,mBAAmB,GAAG3B,GAAG,CAAC,IAAI,CAAC;IACrC,MAAM4B,UAAU,GAAG5B,GAAG,CAAC,KAAK,CAAC;IAC7B,MAAM6B,gBAAgB,GAAG7B,GAAG,CAAC,KAAK,CAAC;IACnC,MAAM8B,UAAU,GAAG9B,GAAG,CAAC;MACrB+B,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMC,UAAU,GAAGhC,GAAG,CAAC;MACrBiC,EAAE,EAAE,IAAI;MACRC,YAAY,EAAE,IAAI;MAClBC,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMC,YAAY,GAAGvC,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMwC,WAAW,GAAGxC,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMyC,mBAAmB,GAAGzC,GAAG,CAAC,EAAE,CAAC;IACnC,MAAM0C,kBAAkB,GAAG1C,GAAG,CAAC,IAAI,CAAC;IACpC,MAAM2C,UAAU,GAAG3C,GAAG,CAAC,IAAI,CAAC;IAC5B,MAAM4C,UAAU,GAAG5C,GAAG,CAAC,IAAI,CAAC;;IAE5B;IACA,MAAM6C,aAAa,GAAG,CACpB;MAAEC,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAI,CAAC,EAChC;MAAED,KAAK,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAI,CAAC,EAClC;MAAED,KAAK,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAI,CAAC,EAClC;MAAED,KAAK,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAI,CAAC,EAClC;MAAED,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAI,CAAC,CAClC;;IAED;IACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC9B,OAAO,CAAC6B,KAAK,GAAG,IAAI;MACpB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAM1C,OAAO,CAAC2C,GAAG,CAAC,eAAe,EAAE;UAClDC,MAAM,EAAE;YACNC,IAAI,EAAE/B,WAAW,CAAC0B,KAAK;YACvBzB,QAAQ,EAAEA,QAAQ,CAACyB,KAAK;YACxBM,MAAM,EAAE9B,cAAc,CAACwB,KAAK,CAACO,IAAI,CAAC,GAAG;UACvC;QACF,CAAC,CAAC;QAEF,IAAIL,QAAQ,CAACM,IAAI,KAAK,GAAG,EAAE;UACzB;UACApC,YAAY,CAAC4B,KAAK,GAAGE,QAAQ,CAACO,IAAI,CAACC,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;YACnD1B,EAAE,EAAE0B,IAAI,CAAC1B,EAAE;YACXC,YAAY,EAAEyB,IAAI,CAACzB,YAAY;YAC/B0B,cAAc,EAAED,IAAI,CAACC,cAAc;YACnCC,eAAe,EAAE,+FAA+F;YAAE;YAClHC,OAAO,EAAEH,IAAI,CAACI,SAAS;YACvBC,eAAe,EAAE,IAAIC,IAAI,CAACN,IAAI,CAACO,eAAe,CAAC;YAC/CA,eAAe,EAAE,IAAID,IAAI,CAACN,IAAI,CAACO,eAAe,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;cAC1EC,IAAI,EAAE,SAAS;cACfC,MAAM,EAAE;YACV,CAAC,CAAC;YACFC,cAAc,EAAEX,IAAI,CAACY,WAAW;YAChCC,eAAe,EAAEb,IAAI,CAACc,OAAO;YAC7BpB,MAAM,EAAEM,IAAI,CAACe,WAAW;YACxBC,UAAU,EAAEhB,IAAI,CAACgB,UAAU;YAC3BC,eAAe,EAAE,MAAMC,MAAM,CAAClB,IAAI,CAAC1B,EAAE,CAAC,CAAC6C,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;YAAE;YAC3DC,YAAY,EAAEpB,IAAI,CAACoB,YAAY;YAC/BC,QAAQ,EAAErB,IAAI,CAACqB,QAAQ,IAAI;UAC7B,CAAC,CAAC,CAAC;UACH5D,KAAK,CAAC2B,KAAK,GAAGE,QAAQ,CAACO,IAAI,CAACpC,KAAK;QACnC;MACF,CAAC,CAAC,OAAO6D,KAAK,EAAE;QACd7E,SAAS,CAAC6E,KAAK,CAAC,oCAAoC,CAAC;MACvD,CAAC,SAAS;QACR/D,OAAO,CAAC6B,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;;IAED;IACA,MAAMmC,YAAY,GAAI7B,MAAM,IAAK;MAC/B,MAAM8B,KAAK,GAAG5D,cAAc,CAACwB,KAAK,CAACqC,OAAO,CAAC/B,MAAM,CAAC;MAClD,IAAI8B,KAAK,GAAG,CAAC,CAAC,EAAE;QACd5D,cAAc,CAACwB,KAAK,CAACsC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACvC,CAAC,MAAM;QACL5D,cAAc,CAACwB,KAAK,CAACuC,IAAI,CAACjC,MAAM,CAAC;MACnC;MACAhC,WAAW,CAAC0B,KAAK,GAAG,CAAC;MACrBC,iBAAiB,CAAC,CAAC;IACrB,CAAC;;IAED;IACA,MAAMuC,aAAa,GAAIlC,MAAM,IAAK;MAChC,MAAMmC,SAAS,GAAG;QAChB,CAAC,EAAE,SAAS;QACZ,CAAC,EAAE,WAAW;QACd,CAAC,EAAE,WAAW;QACd,CAAC,EAAE,WAAW;QACd,CAAC,EAAE;MACL,CAAC;MACD,OAAOA,SAAS,CAACnC,MAAM,CAAC,IAAI,gBAAgB;IAC9C,CAAC;;IAED;IACA,MAAMoC,cAAc,GAAIpC,MAAM,IAAK;MACjC,MAAMmC,SAAS,GAAG;QAChB,CAAC,EAAE,WAAW;QACd,CAAC,EAAE,SAAS;QACZ,CAAC,EAAE,WAAW;QACd,CAAC,EAAE,WAAW;QACd,CAAC,EAAE;MACL,CAAC;MACD,OAAOA,SAAS,CAACnC,MAAM,CAAC,IAAI,EAAE;IAChC,CAAC;;IAED;IACA,MAAMqC,cAAc,GAAIrC,MAAM,IAAK;MACjC,OAAOlC,YAAY,CAAC4B,KAAK,CAAC4C,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACvC,MAAM,KAAKwC,QAAQ,CAACxC,MAAM,CAAC,CAAC,CAACyC,MAAM;IAC7E,CAAC;;IAED;IACA,MAAMC,UAAU,GAAIC,IAAI,IAAK;MAC3B,OAAO,IAAI/B,IAAI,CAAC+B,IAAI,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;QAChDC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE,SAAS;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,MAAMC,gBAAgB,GAAIC,WAAW,IAAK;MACxC5E,mBAAmB,CAACoB,KAAK,GAAGwD,WAAW;MACvC/E,mBAAmB,CAACuB,KAAK,GAAG,IAAI;IAClC,CAAC;;IAED;IACA,MAAMyD,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI,CAAC7E,mBAAmB,CAACoB,KAAK,EAAE;MAEhCnB,UAAU,CAACmB,KAAK,GAAG,IAAI;MACvB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAM1C,OAAO,CAACkG,GAAG,CAChC,iBAAiB9E,mBAAmB,CAACoB,KAAK,CAACd,EAAE,SAAS,EACtD;UAAEF,MAAM,EAAED,UAAU,CAACiB,KAAK,CAAChB;QAAO,CACpC,CAAC;QAED,IAAIkB,QAAQ,CAACM,IAAI,KAAK,GAAG,EAAE;UACzBnD,SAAS,CAACsG,OAAO,CAAC,oCAAoC,CAAC;UACvDlF,mBAAmB,CAACuB,KAAK,GAAG,KAAK;UACjCC,iBAAiB,CAAC,CAAC;QACrB;MACF,CAAC,CAAC,OAAOiC,KAAK,EAAE;QACd7E,SAAS,CAAC6E,KAAK,CAAC,8BAA8B,CAAC;MACjD,CAAC,SAAS;QACRrD,UAAU,CAACmB,KAAK,GAAG,KAAK;MAC1B;IACF,CAAC;;IAED;IACA,MAAM4D,UAAU,GAAIJ,WAAW,IAAK;MAClC5E,mBAAmB,CAACoB,KAAK,GAAGwD,WAAW;MACvC9E,mBAAmB,CAACsB,KAAK,GAAG,IAAI;IAClC,CAAC;;IAED;IACA,MAAM6D,gBAAgB,GAAIL,WAAW,IAAK;MACxC5E,mBAAmB,CAACoB,KAAK,GAAGwD,WAAW;MACvCvE,UAAU,CAACe,KAAK,GAAG;QACjBd,EAAE,EAAEsE,WAAW,CAACtE,EAAE;QAClBC,YAAY,EAAEqE,WAAW,CAACrE,YAAY;QACtCC,MAAM,EAAE,CAAC;QACTC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;MACV,CAAC;MACDG,mBAAmB,CAACM,KAAK,GAAG,EAAE;MAC9BL,kBAAkB,CAACK,KAAK,GAAG,IAAI;MAC/BR,YAAY,CAACQ,KAAK,GAAG,EAAE;MACvBrB,mBAAmB,CAACqB,KAAK,GAAG,IAAI;IAClC,CAAC;;IAED;IACA,MAAM8D,aAAa,GAAI1E,MAAM,IAAK;MAChC,MAAM2E,KAAK,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,CAAC;MAChE,OAAOA,KAAK,CAAC3E,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE;IAChC,CAAC;;IAED;IACA,MAAM4E,kBAAkB,GAAGA,CAAA,KAAM;MAC/BpE,UAAU,CAACI,KAAK,CAACiE,KAAK,CAAC,CAAC;IAC1B,CAAC;;IAED;IACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;MAC/BrE,UAAU,CAACG,KAAK,CAACiE,KAAK,CAAC,CAAC;IAC1B,CAAC;;IAED;IACA,MAAME,WAAW,GAAG,MAAOC,CAAC,IAAK;MAC/B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;MAC5B,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACtB,MAAM,KAAK,CAAC,EAAE;MAElC,MAAMwB,cAAc,GAAG,CAAC,GAAG7E,mBAAmB,CAACM,KAAK,CAAC+C,MAAM;MAC3D,MAAMyB,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACL,KAAK,CAAC,CAACM,KAAK,CAAC,CAAC,EAAEJ,cAAc,CAAC;MAEhE,KAAK,MAAMK,IAAI,IAAIJ,aAAa,EAAE;QAChC,IAAII,IAAI,CAACC,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE;UAC/BxH,SAAS,CAACyH,OAAO,CAAC,8BAA8B,CAAC;UACjD;QACF;;QAEA;QACA,MAAMC,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;QACzClF,mBAAmB,CAACM,KAAK,CAACuC,IAAI,CAACwC,OAAO,CAAC;;QAEvC;QACA,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAER,IAAI,CAAC;QAE7B,IAAI;UACF9F,gBAAgB,CAACkB,KAAK,GAAG,IAAI;UAC7B,MAAME,QAAQ,GAAG,MAAM1C,OAAO,CAAC6H,IAAI,CAAC,eAAe,EAAEH,QAAQ,EAAE;YAC7DI,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UAEF,IAAIpF,QAAQ,CAACM,IAAI,KAAK,GAAG,EAAE;YACzB;YACA,MAAM4B,KAAK,GAAG1C,mBAAmB,CAACM,KAAK,CAACqC,OAAO,CAAC0C,OAAO,CAAC;YACxD,IAAI3C,KAAK,KAAK,CAAC,CAAC,EAAE;cAChB4C,GAAG,CAACO,eAAe,CAACR,OAAO,CAAC;cAC5BrF,mBAAmB,CAACM,KAAK,CAACoC,KAAK,CAAC,GAAGlC,QAAQ,CAACO,IAAI;cAChDxB,UAAU,CAACe,KAAK,CAACV,MAAM,CAACiD,IAAI,CAACrC,QAAQ,CAACO,IAAI,CAAC;YAC7C;UACF,CAAC,MAAM;YACL;YACA+E,WAAW,CAAC9F,mBAAmB,CAACM,KAAK,CAACqC,OAAO,CAAC0C,OAAO,CAAC,CAAC;YACvD1H,SAAS,CAAC6E,KAAK,CAAC,wBAAwB,CAAC;UAC3C;QACF,CAAC,CAAC,OAAOA,KAAK,EAAE;UACd;UACAsD,WAAW,CAAC9F,mBAAmB,CAACM,KAAK,CAACqC,OAAO,CAAC0C,OAAO,CAAC,CAAC;UACvD1H,SAAS,CAAC6E,KAAK,CAAC,wBAAwB,CAAC;QAC3C,CAAC,SAAS;UACRpD,gBAAgB,CAACkB,KAAK,GAAG,KAAK;QAChC;MACF;;MAEA;MACAoE,CAAC,CAACE,MAAM,CAACtE,KAAK,GAAG,EAAE;IACrB,CAAC;;IAED;IACA,MAAMwF,WAAW,GAAIpD,KAAK,IAAK;MAC7B,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAI1C,mBAAmB,CAACM,KAAK,CAAC+C,MAAM,EAAE;MAE5D,MAAM0C,UAAU,GAAG/F,mBAAmB,CAACM,KAAK,CAACoC,KAAK,CAAC;MACnD,IAAIqD,UAAU,CAACC,UAAU,CAAC,OAAO,CAAC,EAAE;QAClCV,GAAG,CAACO,eAAe,CAACE,UAAU,CAAC;MACjC;MAEA/F,mBAAmB,CAACM,KAAK,CAACsC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC1CnD,UAAU,CAACe,KAAK,CAACV,MAAM,CAACgD,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC1C,CAAC;;IAED;IACA,MAAMuD,WAAW,GAAG,MAAOvB,CAAC,IAAK;MAC/B,MAAMQ,IAAI,GAAGR,CAAC,CAACE,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC;MAC9B,IAAI,CAACO,IAAI,EAAE;MAEX,IAAIA,IAAI,CAACC,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,EAAE;QAChCxH,SAAS,CAACyH,OAAO,CAAC,+BAA+B,CAAC;QAClD;MACF;;MAEA;MACA,MAAMC,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MACzCjF,kBAAkB,CAACK,KAAK,GAAG+E,OAAO;;MAElC;MACA,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAER,IAAI,CAAC;MAE7B,IAAI;QACF9F,gBAAgB,CAACkB,KAAK,GAAG,IAAI;QAC7B,MAAME,QAAQ,GAAG,MAAM1C,OAAO,CAAC6H,IAAI,CAAC,eAAe,EAAEH,QAAQ,EAAE;UAC7DI,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIpF,QAAQ,CAACM,IAAI,KAAK,GAAG,EAAE;UACzB;UACAwE,GAAG,CAACO,eAAe,CAACR,OAAO,CAAC;UAC5BpF,kBAAkB,CAACK,KAAK,GAAGE,QAAQ,CAACO,IAAI;UACxCxB,UAAU,CAACe,KAAK,CAACT,MAAM,GAAG,CAACW,QAAQ,CAACO,IAAI,CAAC;QAC3C,CAAC,MAAM;UACL;UACAmF,WAAW,CAAC,CAAC;UACbvI,SAAS,CAAC6E,KAAK,CAAC,wBAAwB,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACd;QACA0D,WAAW,CAAC,CAAC;QACbvI,SAAS,CAAC6E,KAAK,CAAC,wBAAwB,CAAC;MAC3C,CAAC,SAAS;QACRpD,gBAAgB,CAACkB,KAAK,GAAG,KAAK;MAChC;;MAEA;MACAoE,CAAC,CAACE,MAAM,CAACtE,KAAK,GAAG,EAAE;IACrB,CAAC;;IAED;IACA,MAAM4F,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIjG,kBAAkB,CAACK,KAAK,IAAIL,kBAAkB,CAACK,KAAK,CAAC0F,UAAU,CAAC,OAAO,CAAC,EAAE;QAC5EV,GAAG,CAACO,eAAe,CAAC5F,kBAAkB,CAACK,KAAK,CAAC;MAC/C;MAEAL,kBAAkB,CAACK,KAAK,GAAG,IAAI;MAC/Bf,UAAU,CAACe,KAAK,CAACT,MAAM,GAAG,EAAE;IAC9B,CAAC;;IAED;IACA,MAAMsG,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B;MACArG,YAAY,CAACQ,KAAK,GAAG,EAAE;MACvB,IAAI,CAACf,UAAU,CAACe,KAAK,CAACX,OAAO,CAACyG,IAAI,CAAC,CAAC,EAAE;QACpCtG,YAAY,CAACQ,KAAK,GAAG,kCAAkC;QACvD;MACF;MAEAlB,gBAAgB,CAACkB,KAAK,GAAG,IAAI;MAC7B,IAAI;QACF;QACA,MAAM+F,YAAY,GAAG9G,UAAU,CAACe,KAAK,CAACV,MAAM,CAACiB,IAAI,CAAC,GAAG,CAAC;QACtD;QACA,MAAMyF,YAAY,GAAG/G,UAAU,CAACe,KAAK,CAACT,MAAM,CAACgB,IAAI,CAAC,GAAG,CAAC;QAEtD,MAAML,QAAQ,GAAG,MAAM1C,OAAO,CAAC6H,IAAI,CAAC,UAAU,EAAE;UAC9CnG,EAAE,EAAED,UAAU,CAACe,KAAK,CAACd,EAAE;UACvBC,YAAY,EAAEF,UAAU,CAACe,KAAK,CAACb,YAAY;UAC3CE,OAAO,EAAEJ,UAAU,CAACe,KAAK,CAACX,OAAO;UACjCC,MAAM,EAAEyG,YAAY;UAAG;UACvBxG,MAAM,EAAEyG,YAAY;UAAG;UACvB5G,MAAM,EAAEH,UAAU,CAACe,KAAK,CAACZ;QAC3B,CAAC,CAAC;QAEF,IAAIc,QAAQ,CAACM,IAAI,KAAK,GAAG,EAAE;UACzBnD,SAAS,CAACsG,OAAO,CAAC,+BAA+B,CAAC;UAClDhF,mBAAmB,CAACqB,KAAK,GAAG,KAAK;;UAEjC;UACA,MAAMoC,KAAK,GAAGhE,YAAY,CAAC4B,KAAK,CAACiG,SAAS,CAACpD,CAAC,IAAIA,CAAC,CAAC3D,EAAE,KAAKN,mBAAmB,CAACoB,KAAK,CAACd,EAAE,CAAC;UACtF,IAAIkD,KAAK,KAAK,CAAC,CAAC,EAAE;YAChBhE,YAAY,CAAC4B,KAAK,CAACoC,KAAK,CAAC,CAACH,QAAQ,GAAG,IAAI;UAC3C;QACF;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd7E,SAAS,CAAC6E,KAAK,CAAC,yBAAyB,CAAC;MAC5C,CAAC,SAAS;QACRpD,gBAAgB,CAACkB,KAAK,GAAG,KAAK;MAChC;IACF,CAAC;;IAED;IACA,MAAMkG,WAAW,GAAGA,CAAA,KAAM;MACxBhI,MAAM,CAACqE,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;;IAED;IACA,MAAM4D,gBAAgB,GAAI9F,IAAI,IAAK;MACjC/B,WAAW,CAAC0B,KAAK,GAAGK,IAAI;MACxBJ,iBAAiB,CAAC,CAAC;IACrB,CAAC;;IAED;IACA/C,SAAS,CAAC,MAAM;MACd+C,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
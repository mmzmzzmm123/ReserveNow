{"ast":null,"code":"import component from \"element-plus/es/components/tree-select/src/tree-select-option.mjs\";\nimport { createRouter, createWebHistory } from \"vue-router\";\nconst routes = [{\n  path: \"/login\",\n  name: \"Login\",\n  component: () => import(\"@/views/Login.vue\"),\n  meta: {\n    title: \"Login - Restaurant Reservation\"\n  }\n}, {\n  path: \"/\",\n  name: \"Home\",\n  component: () => import(\"@/views/Home.vue\"),\n  meta: {\n    title: \"Home - Restaurant Reservation\",\n    requiresAuth: true\n  }\n}, {\n  path: \"/restaurant/:id\",\n  name: \"RestaurantDetail\",\n  component: () => import(\"@/views/RestaurantDetail.vue\"),\n  meta: {\n    title: \"Restaurant Detail\",\n    requiresAuth: true\n  }\n}, {\n  path: \"/profile\",\n  name: \"Profile\",\n  component: () => import(\"@/views/Profile.vue\"),\n  meta: {\n    title: \"My Profile\",\n    requiresAuth: true\n  }\n}, {\n  path: \"/reservations\",\n  name: \"Reservations\",\n  component: () => import(\"@/views/Reservations.vue\"),\n  meta: {\n    title: \"My Reservations\",\n    requiresAuth: true\n  }\n}, {\n  path: \"/explore\",\n  name: \"Explore\",\n  component: () => import(\"@/views/Explore.vue\"),\n  meta: {\n    title: \"Explore\",\n    requiresAuth: true\n  }\n}, {\n  path: \"/favorites\",\n  name: \"Favorites\",\n  component: () => import(\"@/views/Favorites.vue\"),\n  meta: {\n    title: \"My Favorites\",\n    requiresAuth: true\n  }\n}, {\n  path: \"/admin\",\n  component: () => import(\"@/components/Sidebar.vue\"),\n  meta: {\n    requiresAuth: true,\n    adminOnly: true\n  },\n  children: [{\n    path: \"dashboard\",\n    name: \"AdminDashboard\",\n    component: () => import(\"@/views/admin/Dashboard.vue\"),\n    meta: {\n      title: \"Admin Console\",\n      requiresAuth: true,\n      adminOnly: true\n    }\n  }, {\n    path: \"restaurants\",\n    name: \"AdminRestaurants\",\n    component: () => import(\"@/views/admin/RestaurantManage.vue\"),\n    meta: {\n      title: \"Restaurant Management\",\n      requiresAuth: true\n    }\n  }, {\n    path: \"tables\",\n    name: \"AdminTables\",\n    component: () => import(\"@/views/admin/TableManage.vue\"),\n    meta: {\n      title: \"Table Management\",\n      requiresAuth: true,\n      adminOnly: true\n    }\n  }, {\n    path: \"users\",\n    name: \"AdminUsers\",\n    component: () => import(\"@/views/admin/UserManage.vue\"),\n    meta: {\n      title: \"User Management\",\n      requiresAuth: true,\n      adminOnly: true\n    }\n  }, {\n    path: \"reservations\",\n    name: \"AdminReservations\",\n    component: () => import(\"@/views/admin/ReservationManage.vue\"),\n    meta: {\n      title: \"Reservation Management\",\n      requiresAuth: true,\n      adminOnly: true\n    }\n  }, {\n    path: \"reviews\",\n    name: \"AdminReviews\",\n    component: () => import(\"@/views/admin/ReviewManage.vue\"),\n    meta: {\n      title: \"Review Management\",\n      requiresAuth: true,\n      adminOnly: true\n    }\n  }, {\n    path: \"staff\",\n    name: 'staff',\n    component: () => import(\"@/views/admin/StaffManage.vue\"),\n    meta: {\n      title: \"Staff Review\",\n      adminOnly: true\n    }\n  }, {\n    path: \"staff-apply\",\n    name: \"StaffApply\",\n    component: () => import(\"@/views/staff/ApplyManager.vue\"),\n    meta: {\n      title: \"Apply for Staff\",\n      requiresAuth: true\n    }\n  }, {\n    path: \"settings\",\n    name: \"AdminSettings\",\n    component: () => import(\"@/views/admin/SystemSettings.vue\"),\n    meta: {\n      title: \"System Settings\",\n      requiresAuth: true,\n      adminOnly: true\n    }\n  }]\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Set page title and handle authentication\nrouter.beforeEach((to, from, next) => {\n  // Set page title\n  document.title = to.meta.title || \"Restaurant Reservation\";\n\n  // If user is accessing the login page, allow direct access\n  if (to.path === '/login') {\n    return next();\n  }\n\n  // Get user information and role\n  const userInfoStr = localStorage.getItem('userInfo');\n  const userInfo = userInfoStr ? JSON.parse(userInfoStr) : {};\n  const token = document.cookie.replace(/(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n  const userRole = userInfo?.role;\n\n  // When user is not logged in, allow access to home page, otherwise redirect to login\n  if (!token) {\n    if (to.path === '/') {\n      // Allow non-logged-in users to access home page\n      return next();\n    } else {\n      // Redirect non-logged-in users to login page when accessing other authenticated pages\n      return next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    }\n  }\n\n  // Redirect logged-in users based on their role when accessing home page\n  if (to.path === '/') {\n    // Role 2 (regular user) stays on home page, other roles go to admin dashboard\n    if (parseInt(userRole) === 2) {\n      return next(); // Regular users stay on home page\n    } else {\n      // Admin(0), Restaurant Manager(1), Staff(3) redirect to admin dashboard\n      return next({\n        path: '/admin/dashboard'\n      });\n    }\n  }\n\n  // Check if route requires authentication\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // Check if admin privileges are required\n    const requiresAdmin = to.matched.some(record => record.meta.adminOnly);\n    if (requiresAdmin && parseInt(userRole) === 2) {\n      // If route requires admin privileges but user is regular user, redirect to home\n      return next({\n        path: '/'\n      });\n    } else {\n      // Permission verification passed, continue routing\n      return next();\n    }\n  } else {\n    return next();\n  }\n});\nexport default router;","map":{"version":3,"names":["component","createRouter","createWebHistory","routes","path","name","meta","title","requiresAuth","adminOnly","children","router","history","beforeEach","to","from","next","document","userInfoStr","localStorage","getItem","userInfo","JSON","parse","token","cookie","replace","userRole","role","query","redirect","fullPath","parseInt","matched","some","record","requiresAdmin"],"sources":["/Users/taoyuxuan/Documents/RestaurantReservation/qd/src/router/index.js"],"sourcesContent":["import component from \"element-plus/es/components/tree-select/src/tree-select-option.mjs\";\r\nimport { createRouter, createWebHistory } from \"vue-router\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: () => import(\"@/views/Login.vue\"),\r\n    meta: {\r\n      title: \"Login - Restaurant Reservation\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: () => import(\"@/views/Home.vue\"),\r\n    meta: {\r\n      title: \"Home - Restaurant Reservation\",\r\n      requiresAuth: true\r\n    }\r\n  },\r\n  {\r\n    path: \"/restaurant/:id\",\r\n    name: \"RestaurantDetail\",\r\n    component: () => import(\"@/views/RestaurantDetail.vue\"),\r\n    meta: {\r\n      title: \"Restaurant Detail\",\r\n      requiresAuth: true\r\n    }\r\n  },\r\n  {\r\n    path: \"/profile\",\r\n    name: \"Profile\",\r\n    component: () => import(\"@/views/Profile.vue\"),\r\n    meta: {\r\n      title: \"My Profile\",\r\n      requiresAuth: true\r\n    }\r\n  },\r\n  {\r\n    path: \"/reservations\",\r\n    name: \"Reservations\",\r\n    component: () => import(\"@/views/Reservations.vue\"),\r\n    meta: {\r\n      title: \"My Reservations\",\r\n      requiresAuth: true\r\n    }\r\n  },\r\n  {\r\n    path: \"/explore\",\r\n    name: \"Explore\",\r\n    component: () => import(\"@/views/Explore.vue\"),\r\n    meta: {\r\n      title: \"Explore\",\r\n      requiresAuth: true\r\n    }\r\n  },\r\n  {\r\n    path: \"/favorites\",\r\n    name: \"Favorites\",\r\n    component: () => import(\"@/views/Favorites.vue\"),\r\n    meta: {\r\n      title: \"My Favorites\",\r\n      requiresAuth: true\r\n    }\r\n  },\r\n  {\r\n    path: \"/admin\",\r\n    component: () => import(\"@/components/Sidebar.vue\"),\r\n    meta: {\r\n      requiresAuth: true,\r\n      adminOnly: true\r\n    },\r\n    children: [\r\n      {\r\n        path: \"dashboard\",\r\n        name: \"AdminDashboard\",\r\n        component: () => import(\"@/views/admin/Dashboard.vue\"),\r\n        meta: {\r\n          title: \"Admin Console\",\r\n          requiresAuth: true,\r\n          adminOnly: true\r\n        }\r\n      },\r\n      {\r\n        path: \"restaurants\",\r\n        name: \"AdminRestaurants\",\r\n        component: () => import(\"@/views/admin/RestaurantManage.vue\"), \r\n        meta: {\r\n          title: \"Restaurant Management\",\r\n          requiresAuth: true,\r\n        }\r\n      },\r\n      {\r\n        path: \"tables\",\r\n        name: \"AdminTables\",\r\n        component: () => import(\"@/views/admin/TableManage.vue\"), \r\n        meta: {\r\n          title: \"Table Management\",\r\n          requiresAuth: true,\r\n          adminOnly: true\r\n        }\r\n      },\r\n      {\r\n        path: \"users\",\r\n        name: \"AdminUsers\",\r\n        component: () => import(\"@/views/admin/UserManage.vue\"),\r\n        meta: {\r\n          title: \"User Management\",\r\n          requiresAuth: true,\r\n          adminOnly: true\r\n        }\r\n      },\r\n      {\r\n        path: \"reservations\",\r\n        name: \"AdminReservations\",\r\n        component: () => import(\"@/views/admin/ReservationManage.vue\"), \r\n        meta: {\r\n          title: \"Reservation Management\",\r\n          requiresAuth: true,\r\n          adminOnly: true\r\n        }\r\n      },\r\n      {\r\n        path: \"reviews\",\r\n        name: \"AdminReviews\",\r\n        component: () => import(\"@/views/admin/ReviewManage.vue\"), \r\n        meta: {\r\n          title: \"Review Management\",\r\n          requiresAuth: true,\r\n          adminOnly: true\r\n        }\r\n      },\r\n      {\r\n        path: \"staff\",\r\n        name: 'staff',\r\n        component: ()=> import(\"@/views/admin/StaffManage.vue\"),\r\n        meta: {\r\n          title: \"Staff Review\",\r\n          adminOnly: true\r\n        }\r\n      },\r\n      {\r\n        path: \"staff-apply\",\r\n        name: \"StaffApply\",\r\n        component: () => import(\"@/views/staff/ApplyManager.vue\"),\r\n        meta: {\r\n          title: \"Apply for Staff\",\r\n          requiresAuth: true\r\n        }\r\n      },\r\n      {\r\n        path: \"settings\",\r\n        name: \"AdminSettings\",\r\n        component: () => import(\"@/views/admin/SystemSettings.vue\"), \r\n        meta: {\r\n          title: \"System Settings\",\r\n          requiresAuth: true,\r\n          adminOnly: true\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\n// Set page title and handle authentication\r\nrouter.beforeEach((to, from, next) => {\r\n  // Set page title\r\n  document.title = to.meta.title || \"Restaurant Reservation\";\r\n  \r\n  // If user is accessing the login page, allow direct access\r\n  if (to.path === '/login') {\r\n    return next();\r\n  }\r\n  \r\n  // Get user information and role\r\n  const userInfoStr = localStorage.getItem('userInfo');\r\n  const userInfo = userInfoStr ? JSON.parse(userInfoStr) : {};\r\n  const token = document.cookie.replace(/(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n  const userRole = userInfo?.role;\r\n  \r\n  // When user is not logged in, allow access to home page, otherwise redirect to login\r\n  if (!token) {\r\n    if (to.path === '/') {\r\n      // Allow non-logged-in users to access home page\r\n      return next();\r\n    } else {\r\n      // Redirect non-logged-in users to login page when accessing other authenticated pages\r\n      return next({\r\n        path: '/login',\r\n        query: { redirect: to.fullPath }\r\n      });\r\n    }\r\n  }\r\n  \r\n  // Redirect logged-in users based on their role when accessing home page\r\n  if (to.path === '/') {\r\n    // Role 2 (regular user) stays on home page, other roles go to admin dashboard\r\n    if (parseInt(userRole) === 2) {\r\n      return next(); // Regular users stay on home page\r\n    } else {\r\n      // Admin(0), Restaurant Manager(1), Staff(3) redirect to admin dashboard\r\n      return next({ path: '/admin/dashboard' });\r\n    }\r\n  }\r\n  \r\n  // Check if route requires authentication\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    // Check if admin privileges are required\r\n    const requiresAdmin = to.matched.some(record => record.meta.adminOnly);\r\n    \r\n    if (requiresAdmin && parseInt(userRole) === 2) {\r\n      // If route requires admin privileges but user is regular user, redirect to home\r\n      return next({ path: '/' });\r\n    } else {\r\n      // Permission verification passed, continue routing\r\n      return next();\r\n    }\r\n  } else {\r\n    return next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\nconst service = axios.create({\n  baseURL: \"http://localhost:8080\",\n  timeout: 5000\n});\n\n// Request interceptor\nservice.interceptors.request.use(config => {\n  // Get token from cookie\n  const token = document.cookie.replace(/(?:(?:^|.*;\\s*)token\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\n  console.log(token);\n  // Add token to request header if exists\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\nservice.interceptors.response.use(response => {\n  const res = response.data;\n  if (res.code !== 200) {\n    ElMessage.error(res.message || \"Error\");\n    return Promise.reject(new Error(res.message || \"Error\"));\n  }\n  return res;\n}, error => {\n  ElMessage.error(error.message || \"Request failed\");\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","service","create","baseURL","timeout","interceptors","request","use","config","token","document","cookie","replace","console","log","headers","error","Promise","reject","response","res","data","code","message","Error"],"sources":["/Users/taoyuxuan/Documents/RestaurantReservation/qd/src/utils/request.js"],"sourcesContent":["import axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\n\nconst service = axios.create({\n  baseURL: \"http://localhost:8080\",\n  timeout: 5000,\n});\n\n// Request interceptor\nservice.interceptors.request.use(\n  (config) => {\n    // Get token from cookie\n    const token = document.cookie.replace(/(?:(?:^|.*;\\s*)token\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\n    \n    console.log(token);\n    // Add token to request header if exists\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    \n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\nservice.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    if (res.code !== 200) {\n      ElMessage.error(res.message || \"Error\");\n      return Promise.reject(new Error(res.message || \"Error\"));\n    }\n    return res;\n  },\n  (error) => {\n    ElMessage.error(error.message || \"Request failed\");\n    return Promise.reject(error);\n  }\n);\n\nexport default service;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AAExC,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC3BC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7BC,MAAM,IAAK;EACV;EACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,MAAM,CAACC,OAAO,CAAC,6CAA6C,EAAE,IAAI,CAAC;EAE1FC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAClB;EACA,IAAIA,KAAK,EAAE;IACTD,MAAM,CAACO,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUN,KAAK,EAAE;EACrD;EAEA,OAAOD,MAAM;AACf,CAAC,EACAQ,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,OAAO,CAACI,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC9BY,QAAQ,IAAK;EACZ,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB,IAAID,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;IACpBtB,SAAS,CAACgB,KAAK,CAACI,GAAG,CAACG,OAAO,IAAI,OAAO,CAAC;IACvC,OAAON,OAAO,CAACC,MAAM,CAAC,IAAIM,KAAK,CAACJ,GAAG,CAACG,OAAO,IAAI,OAAO,CAAC,CAAC;EAC1D;EACA,OAAOH,GAAG;AACZ,CAAC,EACAJ,KAAK,IAAK;EACThB,SAAS,CAACgB,KAAK,CAACA,KAAK,CAACO,OAAO,IAAI,gBAAgB,CAAC;EAClD,OAAON,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}